(function(a){"function"==typeof define?define(a):a()})(function(){function a(a){try{return Object.defineProperty(a,"sentinel",{}),"sentinel"in a}catch(b){}}Function.prototype.bind||(Function.prototype.bind=function(a){var b=this;if("function"!=typeof b)throw new TypeError("Function.prototype.bind called on incompatible "+b);var c=d.call(arguments,1),e=function(){if(this instanceof e){var f=function(){};f.prototype=b.prototype;var f=new f,g=b.apply(f,c.concat(d.call(arguments)));return Object(g)===
g?g:f}return b.apply(a,c.concat(d.call(arguments)))};return e});var b=Function.prototype.call,c=Object.prototype,d=Array.prototype.slice,e=b.bind(c.toString),f=b.bind(c.hasOwnProperty),g,h,j,k,m;if(m=f(c,"__defineGetter__"))g=b.bind(c.__defineGetter__),h=b.bind(c.__defineSetter__),j=b.bind(c.__lookupGetter__),k=b.bind(c.__lookupSetter__);Array.isArray||(Array.isArray=function(a){return"[object Array]"==e(a)});Array.prototype.forEach||(Array.prototype.forEach=function(a,b){var c=E(this),d=-1,f=c.length>>>
0;if("[object Function]"!=e(a))throw new TypeError;for(;++d<f;)d in c&&a.call(b,c[d],d,c)});Array.prototype.map||(Array.prototype.map=function(a,b){var c=E(this),d=c.length>>>0,f=Array(d);if("[object Function]"!=e(a))throw new TypeError(a+" is not a function");for(var g=0;g<d;g++)g in c&&(f[g]=a.call(b,c[g],g,c));return f});Array.prototype.filter||(Array.prototype.filter=function(a,b){var c=E(this),d=c.length>>>0,f=[],g;if("[object Function]"!=e(a))throw new TypeError(a+" is not a function");for(var h=
0;h<d;h++)h in c&&(g=c[h],a.call(b,g,h,c)&&f.push(g));return f});Array.prototype.every||(Array.prototype.every=function(a,b){var c=E(this),d=c.length>>>0;if("[object Function]"!=e(a))throw new TypeError(a+" is not a function");for(var f=0;f<d;f++)if(f in c&&!a.call(b,c[f],f,c))return!1;return!0});Array.prototype.some||(Array.prototype.some=function(a,b){var c=E(this),d=c.length>>>0;if("[object Function]"!=e(a))throw new TypeError(a+" is not a function");for(var f=0;f<d;f++)if(f in c&&a.call(b,c[f],
f,c))return!0;return!1});Array.prototype.reduce||(Array.prototype.reduce=function(a){var b=E(this),c=b.length>>>0;if("[object Function]"!=e(a))throw new TypeError(a+" is not a function");if(!c&&1==arguments.length)throw new TypeError("reduce of empty array with no initial value");var d=0,f;if(2<=arguments.length)f=arguments[1];else{do{if(d in b){f=b[d++];break}if(++d>=c)throw new TypeError("reduce of empty array with no initial value");}while(1)}for(;d<c;d++)d in b&&(f=a.call(void 0,f,b[d],d,b));
return f});Array.prototype.reduceRight||(Array.prototype.reduceRight=function(a){var b=E(this),c=b.length>>>0;if("[object Function]"!=e(a))throw new TypeError(a+" is not a function");if(!c&&1==arguments.length)throw new TypeError("reduceRight of empty array with no initial value");var d,c=c-1;if(2<=arguments.length)d=arguments[1];else{do{if(c in b){d=b[c--];break}if(0>--c)throw new TypeError("reduceRight of empty array with no initial value");}while(1)}do c in this&&(d=a.call(void 0,d,b[c],c,b));
while(c--);return d});Array.prototype.indexOf||(Array.prototype.indexOf=function(a){var b=E(this),c=b.length>>>0;if(!c)return-1;var d=0;1<arguments.length&&(d=z(arguments[1]));for(d=0<=d?d:Math.max(0,c+d);d<c;d++)if(d in b&&b[d]===a)return d;return-1});Array.prototype.lastIndexOf||(Array.prototype.lastIndexOf=function(a){var b=E(this),c=b.length>>>0;if(!c)return-1;var d=c-1;1<arguments.length&&(d=Math.min(d,z(arguments[1])));for(d=0<=d?d:c-Math.abs(d);0<=d;d--)if(d in b&&a===b[d])return d;return-1});
Object.getPrototypeOf||(Object.getPrototypeOf=function(a){return a.__proto__||(a.constructor?a.constructor.prototype:c)});Object.getOwnPropertyDescriptor||(Object.getOwnPropertyDescriptor=function(a,b){if("object"!=typeof a&&"function"!=typeof a||null===a)throw new TypeError("Object.getOwnPropertyDescriptor called on a non-object: "+a);if(f(a,b)){var d={enumerable:!0,configurable:!0};if(m){var e=a.__proto__;a.__proto__=c;var g=j(a,b),h=k(a,b);a.__proto__=e;if(g||h)return g&&(d.get=g),h&&(d.set=h),
d}d.value=a[b];return d}});Object.getOwnPropertyNames||(Object.getOwnPropertyNames=function(a){return Object.keys(a)});Object.create||(Object.create=function(a,b){var c;if(null===a)c={__proto__:null};else{if("object"!=typeof a)throw new TypeError("typeof prototype["+typeof a+"] != 'object'");c=function(){};c.prototype=a;c=new c;c.__proto__=a}void 0!==b&&Object.defineProperties(c,b);return c});if(Object.defineProperty){var b=a({}),p="undefined"==typeof document||a(document.createElement("div"));if(!b||
!p)var n=Object.defineProperty}if(!Object.defineProperty||n)Object.defineProperty=function(a,b,d){if("object"!=typeof a&&"function"!=typeof a||null===a)throw new TypeError("Object.defineProperty called on non-object: "+a);if("object"!=typeof d&&"function"!=typeof d||null===d)throw new TypeError("Property description must be an object: "+d);if(n)try{return n.call(Object,a,b,d)}catch(e){}if(f(d,"value"))if(m&&(j(a,b)||k(a,b))){var p=a.__proto__;a.__proto__=c;delete a[b];a[b]=d.value;a.__proto__=p}else a[b]=
d.value;else{if(!m)throw new TypeError("getters & setters can not be defined on this javascript engine");f(d,"get")&&g(a,b,d.get);f(d,"set")&&h(a,b,d.set)}return a};Object.defineProperties||(Object.defineProperties=function(a,b){for(var c in b)f(b,c)&&"__proto__"!=c&&Object.defineProperty(a,c,b[c]);return a});Object.seal||(Object.seal=function(a){return a});Object.freeze||(Object.freeze=function(a){return a});try{Object.freeze(function(){})}catch(r){var q=Object.freeze;Object.freeze=function(a){return"function"==
typeof a?a:q(a)}}Object.preventExtensions||(Object.preventExtensions=function(a){return a});Object.isSealed||(Object.isSealed=function(){return!1});Object.isFrozen||(Object.isFrozen=function(){return!1});Object.isExtensible||(Object.isExtensible=function(a){if(Object(a)!==a)throw new TypeError;for(var b="";f(a,b);)b+="?";a[b]=!0;var c=f(a,b);delete a[b];return c});if(!Object.keys){var s=!0,u="toString toLocaleString valueOf hasOwnProperty isPrototypeOf propertyIsEnumerable constructor".split(" "),
v=u.length,B;for(B in{toString:null})s=!1;Object.keys=function(a){if("object"!=typeof a&&"function"!=typeof a||null===a)throw new TypeError("Object.keys called on a non-object");var b=[],c;for(c in a)f(a,c)&&b.push(c);if(s)for(c=0;c<v;c++){var d=u[c];f(a,d)&&b.push(d)}return b}}if(!Date.prototype.toISOString||-1===(new Date(-621987552E5)).toISOString().indexOf("-000001"))Date.prototype.toISOString=function(){var a,b,c,d;if(!isFinite(this))throw new RangeError("Date.prototype.toISOString called on non-finite value.");
a=[this.getUTCMonth()+1,this.getUTCDate(),this.getUTCHours(),this.getUTCMinutes(),this.getUTCSeconds()];d=this.getUTCFullYear();d=(0>d?"-":9999<d?"+":"")+("00000"+Math.abs(d)).slice(0<=d&&9999>=d?-4:-6);for(b=a.length;b--;)c=a[b],10>c&&(a[b]="0"+c);return d+"-"+a.slice(0,2).join("-")+"T"+a.slice(2).join(":")+"."+("000"+this.getUTCMilliseconds()).slice(-3)+"Z"};Date.now||(Date.now=function(){return(new Date).getTime()});Date.prototype.toJSON||(Date.prototype.toJSON=function(){if("function"!=typeof this.toISOString)throw new TypeError("toISOString property is not callable");
return this.toISOString()});if(!Date.parse||864E13!==Date.parse("+275760-09-13T00:00:00.000Z")){var w=Date;B=function L(a,b,c,d,e,f,g){var h=arguments.length;return this instanceof w?(h=1==h&&String(a)===a?new w(L.parse(a)):7<=h?new w(a,b,c,d,e,f,g):6<=h?new w(a,b,c,d,e,f):5<=h?new w(a,b,c,d,e):4<=h?new w(a,b,c,d):3<=h?new w(a,b,c):2<=h?new w(a,b):1<=h?new w(a):new w,h.constructor=L,h):w.apply(this,arguments)};var t=RegExp("^(\\d{4}|[+-]\\d{6})(?:-(\\d{2})(?:-(\\d{2})(?:T(\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:Z|(?:([-+])(\\d{2}):(\\d{2})))?)?)?)?$"),
D;for(D in w)B[D]=w[D];B.now=w.now;B.UTC=w.UTC;B.prototype=w.prototype;B.prototype.constructor=B;B.parse=function(a){var b=t.exec(a);if(b){b.shift();for(var c=1;7>c;c++)b[c]=+(b[c]||(3>c?1:0)),1==c&&b[c]--;var d=+b.pop(),e=+b.pop(),f=b.pop(),c=0;if(f){if(23<e||59<d)return NaN;c=6E4*(60*e+d)*("+"==f?-1:1)}d=+b[0];return 0<=d&&99>=d?(b[0]=d+400,w.UTC.apply(this,b)+c-126227808E5):w.UTC.apply(this,b)+c}return w.parse.apply(this,arguments)};Date=B}D="\t\n\x0B\f\r \u00a0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029\ufeff";
if(!String.prototype.trim||D.trim()){D="["+D+"]";var C=RegExp("^"+D+D+"*"),x=RegExp(D+D+"*$");String.prototype.trim=function(){if(void 0===this||null===this)throw new TypeError("can't convert "+this+" to object");return String(this).replace(C,"").replace(x,"")}}var z=function(a){a=+a;a!==a?a=0:0!==a&&(a!==1/0&&a!==-(1/0))&&(a=(0<a||-1)*Math.floor(Math.abs(a)));return a},F="a"!="a"[0],E=function(a){if(null==a)throw new TypeError("can't convert "+a+" to object");return F&&"string"==typeof a&&a?a.split(""):
Object(a)}});var THREE=THREE||{REVISION:"52"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}};self.Int32Array=self.Int32Array||Array;self.Float32Array=self.Float32Array||Array;String.prototype.startsWith=String.prototype.startsWith||function(a){return this.slice(0,a.length)===a};String.prototype.endsWith=String.prototype.endsWith||function(a){a=String(a);var b=this.lastIndexOf(a);return(-1<b&&b)===this.length-a.length};
String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")};
(function(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c<b.length&&!window.requestAnimationFrame;++c)window.requestAnimationFrame=window[b[c]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[b[c]+"CancelAnimationFrame"]||window[b[c]+"CancelRequestAnimationFrame"];void 0===window.requestAnimationFrame&&(window.requestAnimationFrame=function(b){var c=Date.now(),f=Math.max(0,16-(c-a)),g=window.setTimeout(function(){b(c+f)},f);a=c+f;return g});window.cancelAnimationFrame=window.cancelAnimationFrame||
function(a){window.clearTimeout(a)}})();THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;
THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};
THREE.RepeatWrapping=1E3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;
THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};
THREE.Clock.prototype.start=function(){this.oldTime=this.startTime=Date.now();this.running=!0};THREE.Clock.prototype.stop=function(){this.getElapsedTime();this.running=!1};THREE.Clock.prototype.getElapsedTime=function(){return this.elapsedTime+=this.getDelta()};THREE.Clock.prototype.getDelta=function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=Date.now(),a=0.001*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a};
THREE.Color=function(a){void 0!==a&&this.setHex(a);return this};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);
this.b=Math.sqrt(this.b);return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSV:function(a,b,c){var d,e,f;0===c?this.r=this.g=this.b=0:(d=Math.floor(6*a),e=6*a-d,a=c*(1-b),f=c*(1-b*e),b=c*(1-b*(1-e)),0===d?(this.r=c,this.g=b,this.b=a):1===d?(this.r=f,this.g=c,this.b=a):2===d?(this.r=a,this.g=c,this.b=b):3===d?(this.r=a,this.g=f,this.b=c):4===d?(this.r=b,this.g=a,this.b=c):5===d&&(this.r=c,this.g=a,this.b=f));return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&
255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},lerpSelf:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getContextStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a):this.set(0,
0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x;a=this.y-a.y;return b*b+a*a},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,
b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y},isZero:function(a){return this.lengthSq()<(void 0!==a?a:1E-4)},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},
sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a):
this.z=this.y=this.x=0;return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=
(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,c=this.y,d=this.z;this.x=c*a.z-d*a.y;this.y=d*a.x-b*a.z;this.z=b*a.y-c*a.x;return this},angleTo:function(a){return Math.acos(this.dot(a)/this.length()/a.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){return(new THREE.Vector3).sub(this,
a).lengthSq()},getPositionFromMatrix:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},setEulerFromRotationMatrix:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.elements,e=d[0],f=d[4],g=d[8],h=d[1],j=d[5],k=d[9],m=d[2],p=d[6],d=d[10];void 0===b||"XYZ"===b?(this.y=Math.asin(c(g)),0.99999>Math.abs(g)?(this.x=Math.atan2(-k,d),this.z=Math.atan2(-f,e)):(this.x=Math.atan2(p,j),this.z=0)):"YXZ"===b?(this.x=Math.asin(-c(k)),0.99999>Math.abs(k)?
(this.y=Math.atan2(g,d),this.z=Math.atan2(h,j)):(this.y=Math.atan2(-m,e),this.z=0)):"ZXY"===b?(this.x=Math.asin(c(p)),0.99999>Math.abs(p)?(this.y=Math.atan2(-m,d),this.z=Math.atan2(-f,j)):(this.y=0,this.z=Math.atan2(h,e))):"ZYX"===b?(this.y=Math.asin(-c(m)),0.99999>Math.abs(m)?(this.x=Math.atan2(p,d),this.z=Math.atan2(h,e)):(this.x=0,this.z=Math.atan2(-f,j))):"YZX"===b?(this.z=Math.asin(c(h)),0.99999>Math.abs(h)?(this.x=Math.atan2(-k,j),this.y=Math.atan2(-m,e)):(this.x=0,this.y=Math.atan2(g,d))):
"XZY"===b&&(this.z=Math.asin(-c(f)),0.99999>Math.abs(f)?(this.x=Math.atan2(p,j),this.y=Math.atan2(g,e)):(this.x=Math.atan2(-k,d),this.y=0));return this},setEulerFromQuaternion:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.x*a.x,e=a.y*a.y,f=a.z*a.z,g=a.w*a.w;void 0===b||"XYZ"===b?(this.x=Math.atan2(2*(a.x*a.w-a.y*a.z),g-d-e+f),this.y=Math.asin(c(2*(a.x*a.z+a.y*a.w))),this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),g+d-e-f)):"YXZ"===b?(this.x=Math.asin(c(2*(a.x*a.w-a.y*a.z))),this.y=Math.atan2(2*
(a.x*a.z+a.y*a.w),g-d-e+f),this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),g-d+e-f)):"ZXY"===b?(this.x=Math.asin(c(2*(a.x*a.w+a.y*a.z))),this.y=Math.atan2(2*(a.y*a.w-a.z*a.x),g-d-e+f),this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),g-d+e-f)):"ZYX"===b?(this.x=Math.atan2(2*(a.x*a.w+a.z*a.y),g-d-e+f),this.y=Math.asin(c(2*(a.y*a.w-a.x*a.z))),this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),g+d-e-f)):"YZX"===b?(this.x=Math.atan2(2*(a.x*a.w-a.z*a.y),g-d+e-f),this.y=Math.atan2(2*(a.y*a.w-a.x*a.z),g+d-e-f),this.z=Math.asin(c(2*(a.x*a.y+
a.z*a.w)))):"XZY"===b&&(this.x=Math.atan2(2*(a.x*a.w+a.y*a.z),g-d+e-f),this.y=Math.atan2(2*(a.x*a.z+a.y*a.w),g+d-e-f),this.z=Math.asin(c(2*(a.z*a.w-a.x*a.y))));return this},getScaleFromMatrix:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length();a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=b;this.y=c;this.z=a;return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},
isZero:function(a){return this.lengthSq()<(void 0!==a?a:1E-4)},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=
a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a,this.w/=a):(this.z=this.y=this.x=0,this.w=1);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+
Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):
(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b);return this},setAxisAngleFromRotationMatrix:function(a){var b,c,d;a=a.elements;var e=a[0];d=a[4];var f=a[8],g=a[1],h=a[5],j=a[9];c=a[2];b=a[6];var k=a[10];if(0.01>Math.abs(d-g)&&0.01>Math.abs(f-c)&&0.01>Math.abs(j-b)){if(0.1>Math.abs(d+g)&&0.1>Math.abs(f+c)&&0.1>Math.abs(j+b)&&0.1>Math.abs(e+h+k-3))return this.set(1,0,0,0),this;a=Math.PI;e=(e+1)/2;h=(h+1)/2;k=(k+1)/2;d=(d+g)/4;f=(f+c)/4;j=(j+b)/4;e>h&&e>k?0.01>e?(b=0,d=c=0.707106781):(b=Math.sqrt(e),c=d/b,
d=f/b):h>k?0.01>h?(b=0.707106781,c=0,d=0.707106781):(c=Math.sqrt(h),b=d/c,d=j/c):0.01>k?(c=b=0.707106781,d=0):(d=Math.sqrt(k),b=f/d,c=j/d);this.set(b,c,d,a);return this}a=Math.sqrt((b-j)*(b-j)+(f-c)*(f-c)+(g-d)*(g-d));0.001>Math.abs(a)&&(a=1);this.x=(b-j)/a;this.y=(f-c)/a;this.z=(g-d)/a;this.w=Math.acos((e+h+k-1)/2);return this}};THREE.Matrix3=function(){this.elements=new Float32Array(9)};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,getInverse:function(a){var b=a.elements;a=b[10]*b[5]-b[6]*b[9];var c=-b[10]*b[1]+b[2]*b[9],d=b[6]*b[1]-b[2]*b[5],e=-b[10]*b[4]+b[6]*b[8],f=b[10]*b[0]-b[2]*b[8],g=-b[6]*b[0]+b[2]*b[4],h=b[9]*b[4]-b[5]*b[8],j=-b[9]*b[0]+b[1]*b[8],k=b[5]*b[0]-b[1]*b[4],b=b[0]*a+b[1]*e+b[2]*h;0===b&&console.warn("Matrix3.getInverse(): determinant == 0");var b=1/b,m=this.elements;m[0]=b*a;m[1]=b*c;m[2]=b*d;m[3]=b*e;m[4]=b*f;m[5]=b*g;m[6]=b*h;m[7]=b*j;m[8]=b*k;return this},
transpose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},transposeIntoArray:function(a){var b=this.m;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this}};THREE.Matrix4=function(a,b,c,d,e,f,g,h,j,k,m,p,n,r,q,s){this.elements=new Float32Array(16);this.set(void 0!==a?a:1,b||0,c||0,d||0,e||0,void 0!==f?f:1,g||0,h||0,j||0,k||0,void 0!==m?m:1,p||0,n||0,r||0,q||0,void 0!==s?s:1)};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,g,h,j,k,m,p,n,r,q,s){var u=this.elements;u[0]=a;u[4]=b;u[8]=c;u[12]=d;u[1]=e;u[5]=f;u[9]=g;u[13]=h;u[2]=j;u[6]=k;u[10]=m;u[14]=p;u[3]=n;u[7]=r;u[11]=q;u[15]=s;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15]);return this},lookAt:function(a,b,c){var d=this.elements,
e=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;g.sub(a,b).normalize();0===g.length()&&(g.z=1);e.cross(c,g).normalize();0===e.length()&&(g.x+=1E-4,e.cross(c,g).normalize());f.cross(g,e);d[0]=e.x;d[4]=f.x;d[8]=g.x;d[1]=e.y;d[5]=f.y;d[9]=g.y;d[2]=e.z;d[6]=f.z;d[10]=g.z;return this},multiply:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],j=c[12],k=c[1],m=c[5],p=c[9],n=c[13],r=c[2],q=c[6],s=c[10],u=c[14],v=c[3],B=c[7],w=c[11],c=c[15],t=d[0],D=d[4],C=d[8],
x=d[12],z=d[1],F=d[5],E=d[9],I=d[13],L=d[2],J=d[6],O=d[10],M=d[14],H=d[3],K=d[7],N=d[11],d=d[15];e[0]=f*t+g*z+h*L+j*H;e[4]=f*D+g*F+h*J+j*K;e[8]=f*C+g*E+h*O+j*N;e[12]=f*x+g*I+h*M+j*d;e[1]=k*t+m*z+p*L+n*H;e[5]=k*D+m*F+p*J+n*K;e[9]=k*C+m*E+p*O+n*N;e[13]=k*x+m*I+p*M+n*d;e[2]=r*t+q*z+s*L+u*H;e[6]=r*D+q*F+s*J+u*K;e[10]=r*C+q*E+s*O+u*N;e[14]=r*x+q*I+s*M+u*d;e[3]=v*t+B*z+w*L+c*H;e[7]=v*D+B*F+w*J+c*K;e[11]=v*C+B*E+w*O+c*N;e[15]=v*x+B*I+w*M+c*d;return this},multiplySelf:function(a){return this.multiply(this,
a)},multiplyToArray:function(a,b,c){var d=this.elements;this.multiply(a,b);c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},multiplyVector3:function(a){var b=this.elements,
c=a.x,d=a.y,e=a.z,f=1/(b[3]*c+b[7]*d+b[11]*e+b[15]);a.x=(b[0]*c+b[4]*d+b[8]*e+b[12])*f;a.y=(b[1]*c+b[5]*d+b[9]*e+b[13])*f;a.z=(b[2]*c+b[6]*d+b[10]*e+b[14])*f;return a},multiplyVector4:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w;a.x=b[0]*c+b[4]*d+b[8]*e+b[12]*f;a.y=b[1]*c+b[5]*d+b[9]*e+b[13]*f;a.z=b[2]*c+b[6]*d+b[10]*e+b[14]*f;a.w=b[3]*c+b[7]*d+b[11]*e+b[15]*f;return a},multiplyVector3Array:function(a){for(var b=THREE.Matrix4.__v1,c=0,d=a.length;c<d;c+=3)b.x=a[c],b.y=a[c+1],b.z=a[c+2],
this.multiplyVector3(b),a[c]=b.x,a[c+1]=b.y,a[c+2]=b.z;return a},rotateAxis:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z;a.x=c*b[0]+d*b[4]+e*b[8];a.y=c*b[1]+d*b[5]+e*b[9];a.z=c*b[2]+d*b[6]+e*b[10];a.normalize();return a},crossVector:function(a){var b=this.elements,c=new THREE.Vector4;c.x=b[0]*a.x+b[4]*a.y+b[8]*a.z+b[12]*a.w;c.y=b[1]*a.x+b[5]*a.y+b[9]*a.z+b[13]*a.w;c.z=b[2]*a.x+b[6]*a.y+b[10]*a.z+b[14]*a.w;c.w=a.w?b[3]*a.x+b[7]*a.y+b[11]*a.z+b[15]*a.w:1;return c},determinant:function(){var a=
this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],j=a[13],k=a[2],m=a[6],p=a[10],n=a[14],r=a[3],q=a[7],s=a[11],a=a[15];return e*h*m*r-d*j*m*r-e*g*p*r+c*j*p*r+d*g*n*r-c*h*n*r-e*h*k*q+d*j*k*q+e*f*p*q-b*j*p*q-d*f*n*q+b*h*n*q+e*g*k*s-c*j*k*s-e*f*m*s+b*j*m*s+c*f*n*s-b*g*n*s-d*g*k*a+c*h*k*a+d*f*m*a-b*h*m*a-c*f*p*a+b*g*p*a},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=
a[11];a[11]=a[14];a[14]=b;return this},flattenToArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[1];a[2]=b[2];a[3]=b[3];a[4]=b[4];a[5]=b[5];a[6]=b[6];a[7]=b[7];a[8]=b[8];a[9]=b[9];a[10]=b[10];a[11]=b[11];a[12]=b[12];a[13]=b[13];a[14]=b[14];a[15]=b[15];return a},flattenToArrayOffset:function(a,b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+
14]=c[14];a[b+15]=c[15];return a},getPosition:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[12],a[13],a[14])},setPosition:function(a){var b=this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getColumnX:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[0],a[1],a[2])},getColumnY:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[4],a[5],a[6])},getColumnZ:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[8],a[9],a[10])},getInverse:function(a){var b=
this.elements,c=a.elements,d=c[0],e=c[4],f=c[8],g=c[12],h=c[1],j=c[5],k=c[9],m=c[13],p=c[2],n=c[6],r=c[10],q=c[14],s=c[3],u=c[7],v=c[11],c=c[15];b[0]=k*q*u-m*r*u+m*n*v-j*q*v-k*n*c+j*r*c;b[4]=g*r*u-f*q*u-g*n*v+e*q*v+f*n*c-e*r*c;b[8]=f*m*u-g*k*u+g*j*v-e*m*v-f*j*c+e*k*c;b[12]=g*k*n-f*m*n-g*j*r+e*m*r+f*j*q-e*k*q;b[1]=m*r*s-k*q*s-m*p*v+h*q*v+k*p*c-h*r*c;b[5]=f*q*s-g*r*s+g*p*v-d*q*v-f*p*c+d*r*c;b[9]=g*k*s-f*m*s-g*h*v+d*m*v+f*h*c-d*k*c;b[13]=f*m*p-g*k*p+g*h*r-d*m*r-f*h*q+d*k*q;b[2]=j*q*s-m*n*s+m*p*u-h*q*
u-j*p*c+h*n*c;b[6]=g*n*s-e*q*s-g*p*u+d*q*u+e*p*c-d*n*c;b[10]=e*m*s-g*j*s+g*h*u-d*m*u-e*h*c+d*j*c;b[14]=g*j*p-e*m*p-g*h*n+d*m*n+e*h*q-d*j*q;b[3]=k*n*s-j*r*s-k*p*u+h*r*u+j*p*v-h*n*v;b[7]=e*r*s-f*n*s+f*p*u-d*r*u-e*p*v+d*n*v;b[11]=f*j*s-e*k*s-f*h*u+d*k*u+e*h*v-d*j*v;b[15]=e*k*p-f*j*p+f*h*n-d*k*n-e*h*r+d*j*r;this.multiplyScalar(1/a.determinant());return this},setRotationFromEuler:function(a,b){var c=this.elements,d=a.x,e=a.y,f=a.z,g=Math.cos(d),d=Math.sin(d),h=Math.cos(e),e=Math.sin(e),j=Math.cos(f),f=
Math.sin(f);if(void 0===b||"XYZ"===b){var k=g*j,m=g*f,p=d*j,n=d*f;c[0]=h*j;c[4]=-h*f;c[8]=e;c[1]=m+p*e;c[5]=k-n*e;c[9]=-d*h;c[2]=n-k*e;c[6]=p+m*e;c[10]=g*h}else"YXZ"===b?(k=h*j,m=h*f,p=e*j,n=e*f,c[0]=k+n*d,c[4]=p*d-m,c[8]=g*e,c[1]=g*f,c[5]=g*j,c[9]=-d,c[2]=m*d-p,c[6]=n+k*d,c[10]=g*h):"ZXY"===b?(k=h*j,m=h*f,p=e*j,n=e*f,c[0]=k-n*d,c[4]=-g*f,c[8]=p+m*d,c[1]=m+p*d,c[5]=g*j,c[9]=n-k*d,c[2]=-g*e,c[6]=d,c[10]=g*h):"ZYX"===b?(k=g*j,m=g*f,p=d*j,n=d*f,c[0]=h*j,c[4]=p*e-m,c[8]=k*e+n,c[1]=h*f,c[5]=n*e+k,c[9]=
m*e-p,c[2]=-e,c[6]=d*h,c[10]=g*h):"YZX"===b?(k=g*h,m=g*e,p=d*h,n=d*e,c[0]=h*j,c[4]=n-k*f,c[8]=p*f+m,c[1]=f,c[5]=g*j,c[9]=-d*j,c[2]=-e*j,c[6]=m*f+p,c[10]=k-n*f):"XZY"===b&&(k=g*h,m=g*e,p=d*h,n=d*e,c[0]=h*j,c[4]=-f,c[8]=e*j,c[1]=k*f+n,c[5]=g*j,c[9]=m*f-p,c[2]=p*f-m,c[6]=d*j,c[10]=n*f+k);return this},setRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,g=c+c,h=d+d,j=e+e;a=c*g;var k=c*h,c=c*j,m=d*h,d=d*j,e=e*j,g=f*g,h=f*h,f=f*j;b[0]=1-(m+e);b[4]=k-f;b[8]=c+h;b[1]=k+f;b[5]=
1-(a+e);b[9]=d-g;b[2]=c-h;b[6]=d+g;b[10]=1-(a+m);return this},compose:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__m1,f=THREE.Matrix4.__m2;e.identity();e.setRotationFromQuaternion(b);f.makeScale(c.x,c.y,c.z);this.multiply(e,f);d[12]=a.x;d[13]=a.y;d[14]=a.z;return this},decompose:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;e.set(d[0],d[1],d[2]);f.set(d[4],d[5],d[6]);g.set(d[8],d[9],d[10]);a=a instanceof THREE.Vector3?a:new THREE.Vector3;
b=b instanceof THREE.Quaternion?b:new THREE.Quaternion;c=c instanceof THREE.Vector3?c:new THREE.Vector3;c.x=e.length();c.y=f.length();c.z=g.length();a.x=d[12];a.y=d[13];a.z=d[14];d=THREE.Matrix4.__m1;d.copy(this);d.elements[0]/=c.x;d.elements[1]/=c.x;d.elements[2]/=c.x;d.elements[4]/=c.y;d.elements[5]/=c.y;d.elements[6]/=c.y;d.elements[8]/=c.z;d.elements[9]/=c.z;d.elements[10]/=c.z;b.setFromRotationMatrix(d);return[a,b,c]},extractPosition:function(a){var b=this.elements;a=a.elements;b[12]=a[12];b[13]=
a[13];b[14]=a[14];return this},extractRotation:function(a){var b=this.elements;a=a.elements;var c=THREE.Matrix4.__v1,d=1/c.set(a[0],a[1],a[2]).length(),e=1/c.set(a[4],a[5],a[6]).length(),c=1/c.set(a[8],a[9],a[10]).length();b[0]=a[0]*d;b[1]=a[1]*d;b[2]=a[2]*d;b[4]=a[4]*e;b[5]=a[5]*e;b[6]=a[6]*e;b[8]=a[8]*c;b[9]=a[9]*c;b[10]=a[10]*c;return this},translate:function(a){var b=this.elements,c=a.x,d=a.y;a=a.z;b[12]=b[0]*c+b[4]*d+b[8]*a+b[12];b[13]=b[1]*c+b[5]*d+b[9]*a+b[13];b[14]=b[2]*c+b[6]*d+b[10]*a+b[14];
b[15]=b[3]*c+b[7]*d+b[11]*a+b[15];return this},rotateX:function(a){var b=this.elements,c=b[4],d=b[5],e=b[6],f=b[7],g=b[8],h=b[9],j=b[10],k=b[11],m=Math.cos(a);a=Math.sin(a);b[4]=m*c+a*g;b[5]=m*d+a*h;b[6]=m*e+a*j;b[7]=m*f+a*k;b[8]=m*g-a*c;b[9]=m*h-a*d;b[10]=m*j-a*e;b[11]=m*k-a*f;return this},rotateY:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],f=b[3],g=b[8],h=b[9],j=b[10],k=b[11],m=Math.cos(a);a=Math.sin(a);b[0]=m*c-a*g;b[1]=m*d-a*h;b[2]=m*e-a*j;b[3]=m*f-a*k;b[8]=m*g+a*c;b[9]=m*h+a*d;b[10]=
m*j+a*e;b[11]=m*k+a*f;return this},rotateZ:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],j=b[6],k=b[7],m=Math.cos(a);a=Math.sin(a);b[0]=m*c+a*g;b[1]=m*d+a*h;b[2]=m*e+a*j;b[3]=m*f+a*k;b[4]=m*g-a*c;b[5]=m*h-a*d;b[6]=m*j-a*e;b[7]=m*k-a*f;return this},rotateByAxis:function(a,b){var c=this.elements;if(1===a.x&&0===a.y&&0===a.z)return this.rotateX(b);if(0===a.x&&1===a.y&&0===a.z)return this.rotateY(b);if(0===a.x&&0===a.y&&1===a.z)return this.rotateZ(b);var d=a.x,e=a.y,f=a.z,
g=Math.sqrt(d*d+e*e+f*f),d=d/g,e=e/g,f=f/g,g=d*d,h=e*e,j=f*f,k=Math.cos(b),m=Math.sin(b),p=1-k,n=d*e*p,r=d*f*p,p=e*f*p,d=d*m,q=e*m,m=f*m,f=g+(1-g)*k,g=n+m,e=r-q,n=n-m,h=h+(1-h)*k,m=p+d,r=r+q,p=p-d,j=j+(1-j)*k,k=c[0],d=c[1],q=c[2],s=c[3],u=c[4],v=c[5],B=c[6],w=c[7],t=c[8],D=c[9],C=c[10],x=c[11];c[0]=f*k+g*u+e*t;c[1]=f*d+g*v+e*D;c[2]=f*q+g*B+e*C;c[3]=f*s+g*w+e*x;c[4]=n*k+h*u+m*t;c[5]=n*d+h*v+m*D;c[6]=n*q+h*B+m*C;c[7]=n*s+h*w+m*x;c[8]=r*k+p*u+j*t;c[9]=r*d+p*v+j*D;c[10]=r*q+p*B+j*C;c[11]=r*s+p*w+j*x;
return this},scale:function(a){var b=this.elements,c=a.x,d=a.y;a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a);a=Math.sin(a);
this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,j=e*f,k=e*g;this.set(j*f+c,j*g-d*h,j*h+d*g,0,j*g+d*h,k*g+c,k*h-d*f,0,j*h-d*g,k*h+d*f,e*h*h+c,0,0,0,0,1);return this},makeScale:function(a,
b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},makeFrustum:function(a,b,c,d,e,f){var g=this.elements;g[0]=2*e/(b-a);g[4]=0;g[8]=(b+a)/(b-a);g[12]=0;g[1]=0;g[5]=2*e/(d-c);g[9]=(d+c)/(d-c);g[13]=0;g[2]=0;g[6]=0;g[10]=-(f+e)/(f-e);g[14]=-2*f*e/(f-e);g[3]=0;g[7]=0;g[11]=-1;g[15]=0;return this},makePerspective:function(a,b,c,d){a=c*Math.tan(a*Math.PI/360);var e=-a;return this.makeFrustum(e*b,a*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=b-a,j=c-d,k=f-e;g[0]=2/
h;g[4]=0;g[8]=0;g[12]=-((b+a)/h);g[1]=0;g[5]=2/j;g[9]=0;g[13]=-((c+d)/j);g[2]=0;g[6]=0;g[10]=-2/k;g[14]=-((f+e)/k);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},clone:function(){var a=this.elements;return new THREE.Matrix4(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;THREE.Matrix4.__m1=new THREE.Matrix4;THREE.Matrix4.__m2=new THREE.Matrix4;
THREE.EventTarget=function(){var a={};this.addEventListener=function(b,c){void 0===a[b]&&(a[b]=[]);-1===a[b].indexOf(c)&&a[b].push(c)};this.dispatchEvent=function(b){for(var c in a[b.type])a[b.type][c](b)};this.removeEventListener=function(b,c){var d=a[b].indexOf(c);-1!==d&&a[b].splice(d,1)}};THREE.Frustum=function(){this.planes=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4]};
THREE.Frustum.prototype.setFromMatrix=function(a){var b=this.planes,c=a.elements;a=c[0];var d=c[1],e=c[2],f=c[3],g=c[4],h=c[5],j=c[6],k=c[7],m=c[8],p=c[9],n=c[10],r=c[11],q=c[12],s=c[13],u=c[14],c=c[15];b[0].set(f-a,k-g,r-m,c-q);b[1].set(f+a,k+g,r+m,c+q);b[2].set(f+d,k+h,r+p,c+s);b[3].set(f-d,k-h,r-p,c-s);b[4].set(f-e,k-j,r-n,c-u);b[5].set(f+e,k+j,r+n,c+u);for(d=0;6>d;d++)a=b[d],a.divideScalar(Math.sqrt(a.x*a.x+a.y*a.y+a.z*a.z))};
THREE.Frustum.prototype.contains=function(a){var b=0,c=this.planes,b=a.matrixWorld,d=b.elements;a=-a.geometry.boundingSphere.radius*b.getMaxScaleOnAxis();for(var e=0;6>e;e++)if(b=c[e].x*d[12]+c[e].y*d[13]+c[e].z*d[14]+c[e].w,b<=a)return!1;return!0};THREE.Frustum.__v1=new THREE.Vector3;
(function(a){a.Ray=function(b,c,d,e){this.origin=b||new a.Vector3;this.direction=c||new a.Vector3;this.near=d||0;this.far=e||Infinity};var b=new a.Vector3,c=new a.Vector3,d=new a.Vector3,e=new a.Vector3,f=new a.Vector3,g=new a.Vector3,h=new a.Matrix4,j=function(a,b){return a.distance-b.distance},k=new a.Vector3,m=new a.Vector3,p=new a.Vector3,n=function(a,b,c){k.sub(c,a);var d=k.dot(b);a=m.add(a,p.copy(b).multiplyScalar(d));return c.distanceTo(a)},r=function(a,b,c,d){k.sub(d,b);m.sub(c,b);p.sub(a,
b);a=k.dot(k);b=k.dot(m);c=k.dot(p);var e=m.dot(m);d=m.dot(p);var f=1/(a*e-b*b),e=(e*c-b*d)*f;a=(a*d-b*c)*f;return 0<=e&&0<=a&&1>e+a},q=function(j,m,k){var p,q;if(j instanceof a.Particle){p=n(m.origin,m.direction,j.matrixWorld.getPosition());if(p>j.scale.x)return k;q={distance:p,point:j.position,face:null,object:j};k.push(q)}else if(j instanceof a.Mesh){var s=j.geometry.boundingSphere.radius*j.matrixWorld.getMaxScaleOnAxis();p=n(m.origin,m.direction,j.matrixWorld.getPosition());if(p>s)return k;var C,
x,z=j.geometry,F=z.vertices,E,I,L;E=j.geometry.materials;I=j.material instanceof a.MeshFaceMaterial;var J,O=m.precision;j.matrixRotationWorld.extractRotation(j.matrixWorld);b.copy(m.origin);h.getInverse(j.matrixWorld);c.copy(b);h.multiplyVector3(c);d.copy(m.direction);h.rotateAxis(d).normalize();s=0;for(C=z.faces.length;s<C;s++)if(q=z.faces[s],p=!0===I?E[q.materialIndex]:j.material,void 0!==p&&(L=p.side,e.sub(q.centroid,c),f=q.normal,p=d.dot(f),!(Math.abs(p)<O)&&(x=f.dot(e)/p,!(0>x)&&(L===a.DoubleSide||
(L===a.FrontSide?0>p:0<p)))))if(g.add(c,d.multiplyScalar(x)),q instanceof a.Face3)p=F[q.a],x=F[q.b],L=F[q.c],r(g,p,x,L)&&(x=j.matrixWorld.multiplyVector3(g.clone()),p=b.distanceTo(x),p<m.near||p>m.far||(q={distance:p,point:x,face:q,faceIndex:s,object:j},k.push(q)));else if(q instanceof a.Face4&&(p=F[q.a],x=F[q.b],L=F[q.c],J=F[q.d],r(g,p,x,J)||r(g,x,L,J)))x=j.matrixWorld.multiplyVector3(g.clone()),p=b.distanceTo(x),p<m.near||p>m.far||(q={distance:p,point:x,face:q,faceIndex:s,object:j},k.push(q))}},
s=function(a,b,c){a=a.getDescendants();for(var d=0,e=a.length;d<e;d++)q(a[d],b,c)};a.Ray.prototype.precision=1E-4;a.Ray.prototype.set=function(a,b){this.origin=a;this.direction=b};a.Ray.prototype.intersectObject=function(a,b){var c=[];!0===b&&s(a,this,c);q(a,this,c);c.sort(j);return c};a.Ray.prototype.intersectObjects=function(a,b){for(var c=[],d=0,e=a.length;d<e;d++)q(a[d],this,c),!0===b&&s(a[d],this,c);c.sort(j);return c}})(THREE);
THREE.Rectangle=function(){function a(){f=d-b;g=e-c}var b=0,c=0,d=0,e=0,f=0,g=0,h=!0;this.getX=function(){return b};this.getY=function(){return c};this.getWidth=function(){return f};this.getHeight=function(){return g};this.getLeft=function(){return b};this.getTop=function(){return c};this.getRight=function(){return d};this.getBottom=function(){return e};this.set=function(f,g,m,p){h=!1;b=f;c=g;d=m;e=p;a()};this.addPoint=function(f,g){!0===h?(h=!1,b=f,c=g,d=f,e=g):(b=b<f?b:f,c=c<g?c:g,d=d>f?d:f,e=e>
g?e:g);a()};this.add3Points=function(f,g,m,p,n,r){!0===h?(h=!1,b=f<m?f<n?f:n:m<n?m:n,c=g<p?g<r?g:r:p<r?p:r,d=f>m?f>n?f:n:m>n?m:n,e=g>p?g>r?g:r:p>r?p:r):(b=f<m?f<n?f<b?f:b:n<b?n:b:m<n?m<b?m:b:n<b?n:b,c=g<p?g<r?g<c?g:c:r<c?r:c:p<r?p<c?p:c:r<c?r:c,d=f>m?f>n?f>d?f:d:n>d?n:d:m>n?m>d?m:d:n>d?n:d,e=g>p?g>r?g>e?g:e:r>e?r:e:p>r?p>e?p:e:r>e?r:e);a()};this.addRectangle=function(f){!0===h?(h=!1,b=f.getLeft(),c=f.getTop(),d=f.getRight(),e=f.getBottom()):(b=b<f.getLeft()?b:f.getLeft(),c=c<f.getTop()?c:f.getTop(),
d=d>f.getRight()?d:f.getRight(),e=e>f.getBottom()?e:f.getBottom());a()};this.inflate=function(f){b-=f;c-=f;d+=f;e+=f;a()};this.minSelf=function(f){b=b>f.getLeft()?b:f.getLeft();c=c>f.getTop()?c:f.getTop();d=d<f.getRight()?d:f.getRight();e=e<f.getBottom()?e:f.getBottom();a()};this.intersects=function(a){return d<a.getLeft()||b>a.getRight()||e<a.getTop()||c>a.getBottom()?!1:!0};this.empty=function(){h=!0;e=d=c=b=0;a()};this.isEmpty=function(){return h}};
THREE.Math={clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(0.5-Math.random())},sign:function(a){return 0>a?-1:0<a?1:0}};
THREE.Object3D=function(){THREE.Object3DLibrary.push(this);this.id=THREE.Object3DIdCount++;this.name="";this.properties={};this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder=THREE.Object3D.defaultEulerOrder;this.scale=new THREE.Vector3(1,1,1);this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=
this.matrixAutoUpdate=!0;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.boundRadius=0;this.boundRadiusScale=1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this._vector=new THREE.Vector3};
THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(a){this.matrix.multiply(a,this.matrix);this.scale.getScaleFromMatrix(this.matrix);a=(new THREE.Matrix4).extractRotation(this.matrix);this.rotation.setEulerFromRotationMatrix(a,this.eulerOrder);this.position.getPositionFromMatrix(this.matrix)},translate:function(a,b){this.matrix.rotateAxis(b);this.position.addSelf(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,
this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,this._vector.set(0,0,1))},localToWorld:function(a){return this.matrixWorld.multiplyVector3(a)},worldToLocal:function(a){return THREE.Object3D.__m1.getInverse(this.matrixWorld).multiplyVector3(a)},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);this.rotationAutoUpdate&&this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)},add:function(a){if(a===this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");
else if(a instanceof THREE.Object3D){void 0!==a.parent&&a.parent.remove(a);a.parent=this;this.children.push(a);for(var b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(-1!==b){a.parent=void 0;this.children.splice(b,1);for(b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__removeObject(a)}},traverse:function(a){a(this);for(var b=0,c=this.children.length;b<c;b++)this.children[b].traverse(a)},
getChildByName:function(a,b){for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c];if(e.name===a||!0===b&&(e=e.getChildByName(a,b),void 0!==e))return e}},getDescendants:function(a){void 0===a&&(a=[]);Array.prototype.push.apply(a,this.children);for(var b=0,c=this.children.length;b<c;b++)this.children[b].getDescendants(a);return a},updateMatrix:function(){this.matrix.setPosition(this.position);!1===this.useQuaternion?this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder):this.matrix.setRotationFromQuaternion(this.quaternion);
if(1!==this.scale.x||1!==this.scale.y||1!==this.scale.z)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z));this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<
c;b++)this.children[b].updateMatrixWorld(a)},clone:function(a){void 0===a&&(a=new THREE.Object3D);a.name=this.name;a.up.copy(this.up);a.position.copy(this.position);a.rotation instanceof THREE.Vector3&&a.rotation.copy(this.rotation);a.eulerOrder=this.eulerOrder;a.scale.copy(this.scale);a.renderDepth=this.renderDepth;a.rotationAutoUpdate=this.rotationAutoUpdate;a.matrix.copy(this.matrix);a.matrixWorld.copy(this.matrixWorld);a.matrixRotationWorld.copy(this.matrixRotationWorld);a.matrixAutoUpdate=this.matrixAutoUpdate;
a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;a.quaternion.copy(this.quaternion);a.useQuaternion=this.useQuaternion;a.boundRadius=this.boundRadius;a.boundRadiusScale=this.boundRadiusScale;a.visible=this.visible;a.castShadow=this.castShadow;a.receiveShadow=this.receiveShadow;a.frustumCulled=this.frustumCulled;return a},deallocate:function(){var a=THREE.Object3DLibrary.indexOf(this);-1!==a&&THREE.Object3DLibrary.splice(a,1)}};THREE.Object3D.__m1=new THREE.Matrix4;
THREE.Object3D.defaultEulerOrder="XYZ";THREE.Object3DIdCount=0;THREE.Object3DLibrary=[];
THREE.Projector=function(){function a(){if(f===h){var a=new THREE.RenderableObject;g.push(a);h++;f++;return a}return g[f++]}function b(){if(k===p){var a=new THREE.RenderableVertex;m.push(a);p++;k++;return a}return m[k++]}function c(a,b){return b.z-a.z}function d(a,b){var c=0,d=1,e=a.z+a.w,f=b.z+b.w,g=-a.z+a.w,h=-b.z+b.w;if(0<=e&&0<=f&&0<=g&&0<=h)return!0;if(0>e&&0>f||0>g&&0>h)return!1;0>e?c=Math.max(c,e/(e-f)):0>f&&(d=Math.min(d,e/(e-f)));0>g?c=Math.max(c,g/(g-h)):0>h&&(d=Math.min(d,g/(g-h)));if(d<
c)return!1;a.lerpSelf(b,c);b.lerpSelf(a,1-d);return!0}var e,f,g=[],h=0,j,k,m=[],p=0,n,r,q=[],s=0,u,v=[],B=0,w,t,D=[],C=0,x,z,F=[],E=0,I={objects:[],sprites:[],lights:[],elements:[]},L=new THREE.Vector3,J=new THREE.Vector4,O=new THREE.Matrix4,M=new THREE.Matrix4,H=new THREE.Frustum,K=new THREE.Vector4,N=new THREE.Vector4;this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);O.multiply(b.projectionMatrix,b.matrixWorldInverse);O.multiplyVector3(a);return a};this.unprojectVector=
function(a,b){b.projectionMatrixInverse.getInverse(b.projectionMatrix);O.multiply(b.matrixWorld,b.projectionMatrixInverse);O.multiplyVector3(a);return a};this.pickingRay=function(a,b){var c;a.z=-1;c=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.subSelf(a).normalize();return new THREE.Ray(a,c)};this.projectScene=function(g,h,p,P){var ga=h.near,S=h.far,ta=!1,oa,Q,ha,Y,X,ka,aa,ea,Ja,Sa,La,Xa,qa,Ya,lb,Ua;z=t=u=r=0;I.elements.length=0;g.updateMatrixWorld();void 0===
h.parent&&h.updateMatrixWorld();h.matrixWorldInverse.getInverse(h.matrixWorld);O.multiply(h.projectionMatrix,h.matrixWorldInverse);H.setFromMatrix(O);f=0;I.objects.length=0;I.sprites.length=0;I.lights.length=0;var hb=function(b){for(var c=0,d=b.children.length;c<d;c++){var f=b.children[c];if(!1!==f.visible){if(f instanceof THREE.Light)I.lights.push(f);else if(f instanceof THREE.Mesh||f instanceof THREE.Line){if(!1===f.frustumCulled||!0===H.contains(f))e=a(),e.object=f,null!==f.renderDepth?e.z=f.renderDepth:
(L.copy(f.matrixWorld.getPosition()),O.multiplyVector3(L),e.z=L.z),I.objects.push(e)}else f instanceof THREE.Sprite||f instanceof THREE.Particle?(e=a(),e.object=f,null!==f.renderDepth?e.z=f.renderDepth:(L.copy(f.matrixWorld.getPosition()),O.multiplyVector3(L),e.z=L.z),I.sprites.push(e)):(e=a(),e.object=f,null!==f.renderDepth?e.z=f.renderDepth:(L.copy(f.matrixWorld.getPosition()),O.multiplyVector3(L),e.z=L.z),I.objects.push(e));hb(f)}}};hb(g);!0===p&&I.objects.sort(c);g=0;for(p=I.objects.length;g<
p;g++)if(ea=I.objects[g].object,Ja=ea.matrixWorld,k=0,ea instanceof THREE.Mesh){Sa=ea.geometry;La=ea.geometry.materials;ha=Sa.vertices;Xa=Sa.faces;Ya=Sa.faceVertexUvs;Sa=ea.matrixRotationWorld.extractRotation(Ja);lb=ea.material instanceof THREE.MeshFaceMaterial;oa=0;for(Q=ha.length;oa<Q;oa++)j=b(),j.positionWorld.copy(ha[oa]),Ja.multiplyVector3(j.positionWorld),j.positionScreen.copy(j.positionWorld),O.multiplyVector4(j.positionScreen),j.positionScreen.x/=j.positionScreen.w,j.positionScreen.y/=j.positionScreen.w,
j.visible=j.positionScreen.z>ga&&j.positionScreen.z<S;ha=0;for(oa=Xa.length;ha<oa;ha++)if(Q=Xa[ha],Ua=!0===lb?La[Q.materialIndex]:ea.material,void 0!==Ua){ka=Ua.side;if(Q instanceof THREE.Face3)if(Y=m[Q.a],X=m[Q.b],aa=m[Q.c],!0===Y.visible&&!0===X.visible&&!0===aa.visible)if(ta=0>(aa.positionScreen.x-Y.positionScreen.x)*(X.positionScreen.y-Y.positionScreen.y)-(aa.positionScreen.y-Y.positionScreen.y)*(X.positionScreen.x-Y.positionScreen.x),ka===THREE.DoubleSide||ta===(ka===THREE.FrontSide))r===s?(qa=
new THREE.RenderableFace3,q.push(qa),s++,r++,n=qa):n=q[r++],n.v1.copy(Y),n.v2.copy(X),n.v3.copy(aa);else continue;else continue;else if(Q instanceof THREE.Face4)if(Y=m[Q.a],X=m[Q.b],aa=m[Q.c],qa=m[Q.d],!0===Y.visible&&!0===X.visible&&!0===aa.visible&&!0===qa.visible)if(ta=0>(qa.positionScreen.x-Y.positionScreen.x)*(X.positionScreen.y-Y.positionScreen.y)-(qa.positionScreen.y-Y.positionScreen.y)*(X.positionScreen.x-Y.positionScreen.x)||0>(X.positionScreen.x-aa.positionScreen.x)*(qa.positionScreen.y-
aa.positionScreen.y)-(X.positionScreen.y-aa.positionScreen.y)*(qa.positionScreen.x-aa.positionScreen.x),ka===THREE.DoubleSide||ta===(ka===THREE.FrontSide)){if(u===B){var sb=new THREE.RenderableFace4;v.push(sb);B++;u++;n=sb}else n=v[u++];n.v1.copy(Y);n.v2.copy(X);n.v3.copy(aa);n.v4.copy(qa)}else continue;else continue;n.normalWorld.copy(Q.normal);!1===ta&&(ka===THREE.BackSide||ka===THREE.DoubleSide)&&n.normalWorld.negate();Sa.multiplyVector3(n.normalWorld);n.centroidWorld.copy(Q.centroid);Ja.multiplyVector3(n.centroidWorld);
n.centroidScreen.copy(n.centroidWorld);O.multiplyVector3(n.centroidScreen);aa=Q.vertexNormals;Y=0;for(X=aa.length;Y<X;Y++)qa=n.vertexNormalsWorld[Y],qa.copy(aa[Y]),!1===ta&&(ka===THREE.BackSide||ka===THREE.DoubleSide)&&qa.negate(),Sa.multiplyVector3(qa);n.vertexNormalsLength=aa.length;Y=0;for(X=Ya.length;Y<X;Y++)if(qa=Ya[Y][ha],void 0!==qa){ka=0;for(aa=qa.length;ka<aa;ka++)n.uvs[Y][ka]=qa[ka]}n.color=Q.color;n.material=Ua;n.z=n.centroidScreen.z;I.elements.push(n)}}else if(ea instanceof THREE.Line){M.multiply(O,
Ja);ha=ea.geometry.vertices;Y=b();Y.positionScreen.copy(ha[0]);M.multiplyVector4(Y.positionScreen);Ja=ea.type===THREE.LinePieces?2:1;oa=1;for(Q=ha.length;oa<Q;oa++)Y=b(),Y.positionScreen.copy(ha[oa]),M.multiplyVector4(Y.positionScreen),0<(oa+1)%Ja||(X=m[k-2],K.copy(Y.positionScreen),N.copy(X.positionScreen),!0===d(K,N)&&(K.multiplyScalar(1/K.w),N.multiplyScalar(1/N.w),t===C?(La=new THREE.RenderableLine,D.push(La),C++,t++,w=La):w=D[t++],w.v1.positionScreen.copy(K),w.v2.positionScreen.copy(N),w.z=Math.max(K.z,
N.z),w.material=ea.material,I.elements.push(w)))}g=0;for(p=I.sprites.length;g<p;g++)ea=I.sprites[g].object,Ja=ea.matrixWorld,ea instanceof THREE.Particle&&(J.set(Ja.elements[12],Ja.elements[13],Ja.elements[14],1),O.multiplyVector4(J),J.z/=J.w,0<J.z&&1>J.z&&(z===E?(ga=new THREE.RenderableParticle,F.push(ga),E++,z++,x=ga):x=F[z++],x.object=ea,x.x=J.x/J.w,x.y=J.y/J.w,x.z=J.z,x.rotation=ea.rotation.z,x.scale.x=ea.scale.x*Math.abs(x.x-(J.x+h.projectionMatrix.elements[0])/(J.w+h.projectionMatrix.elements[12])),
x.scale.y=ea.scale.y*Math.abs(x.y-(J.y+h.projectionMatrix.elements[5])/(J.w+h.projectionMatrix.elements[13])),x.material=ea.material,I.elements.push(x)));!0===P&&I.elements.sort(c);return I}};THREE.Quaternion=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},setFromEuler:function(a,b){var c=Math.cos(a.x/2),d=Math.cos(a.y/2),e=Math.cos(a.z/2),f=Math.sin(a.x/2),g=Math.sin(a.y/2),h=Math.sin(a.z/2);void 0===b||"XYZ"===b?(this.x=f*d*e+c*g*h,this.y=c*g*e-f*d*h,this.z=c*d*h+f*g*e,this.w=c*d*e-f*g*h):"YXZ"===b?(this.x=f*d*e+c*g*h,this.y=c*g*e-f*d*h,this.z=c*d*
h-f*g*e,this.w=c*d*e+f*g*h):"ZXY"===b?(this.x=f*d*e-c*g*h,this.y=c*g*e+f*d*h,this.z=c*d*h+f*g*e,this.w=c*d*e-f*g*h):"ZYX"===b?(this.x=f*d*e-c*g*h,this.y=c*g*e+f*d*h,this.z=c*d*h-f*g*e,this.w=c*d*e+f*g*h):"YZX"===b?(this.x=f*d*e+c*g*h,this.y=c*g*e+f*d*h,this.z=c*d*h-f*g*e,this.w=c*d*e-f*g*h):"XZY"===b&&(this.x=f*d*e-c*g*h,this.y=c*g*e-f*d*h,this.z=c*d*h+f*g*e,this.w=c*d*e+f*g*h);return this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);this.x=a.x*d;this.y=a.y*d;this.z=a.z*d;this.w=Math.cos(c);
return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0];a=b[4];var d=b[8],e=b[1],f=b[5],g=b[9],h=b[2],j=b[6],b=b[10],k=c+f+b;0<k?(c=0.5/Math.sqrt(k+1),this.w=0.25/c,this.x=(j-g)*c,this.y=(d-h)*c,this.z=(e-a)*c):c>f&&c>b?(c=2*Math.sqrt(1+c-f-b),this.w=(j-g)/c,this.x=0.25*c,this.y=(a+e)/c,this.z=(d+h)/c):f>b?(c=2*Math.sqrt(1+f-c-b),this.w=(d-h)/c,this.x=(a+e)/c,this.y=0.25*c,this.z=(g+j)/c):(c=2*Math.sqrt(1+b-c-f),this.w=(e-a)/c,this.x=(d+h)/c,this.y=(g+j)/c,this.z=0.25*c);return this},
calculateW:function(){this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z));return this},inverse:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);0===a?this.w=this.z=this.y=this.x=0:(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a);return this},multiply:function(a,b){var c=a.x,d=a.y,e=a.z,
f=a.w,g=b.x,h=b.y,j=b.z,k=b.w;this.x=c*k+d*j-e*h+f*g;this.y=-c*j+d*k+e*g+f*h;this.z=c*h-d*g+e*k+f*j;this.w=-c*g-d*h-e*j+f*k;return this},multiplySelf:function(a){var b=this.x,c=this.y,d=this.z,e=this.w,f=a.x,g=a.y,h=a.z;a=a.w;this.x=b*a+e*f+c*h-d*g;this.y=c*a+e*g+d*f-b*h;this.z=d*a+e*h+b*g-c*f;this.w=e*a-b*f-c*g-d*h;return this},multiplyVector3:function(a,b){b||(b=a);var c=a.x,d=a.y,e=a.z,f=this.x,g=this.y,h=this.z,j=this.w,k=j*c+g*e-h*d,m=j*d+h*c-f*e,p=j*e+f*d-g*c,c=-f*c-g*d-h*e;b.x=k*j+c*-f+m*-h-
p*-g;b.y=m*j+c*-g+p*-f-k*-h;b.z=p*j+c*-h+k*-g-m*-f;return b},slerpSelf:function(a,b){var c=this.x,d=this.y,e=this.z,f=this.w,g=f*a.w+c*a.x+d*a.y+e*a.z;0>g?(this.w=-a.w,this.x=-a.x,this.y=-a.y,this.z=-a.z,g=-g):this.copy(a);if(1<=g)return this.w=f,this.x=c,this.y=d,this.z=e,this;var h=Math.acos(g),j=Math.sqrt(1-g*g);if(0.001>Math.abs(j))return this.w=0.5*(f+this.w),this.x=0.5*(c+this.x),this.y=0.5*(d+this.y),this.z=0.5*(e+this.z),this;g=Math.sin((1-b)*h)/j;h=Math.sin(b*h)/j;this.w=f*g+this.w*h;this.x=
c*g+this.x*h;this.y=d*g+this.y*h;this.z=e*g+this.z*h;return this},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}};
THREE.Quaternion.slerp=function(a,b,c,d){var e=a.w*b.w+a.x*b.x+a.y*b.y+a.z*b.z;0>e?(c.w=-b.w,c.x=-b.x,c.y=-b.y,c.z=-b.z,e=-e):c.copy(b);if(1<=Math.abs(e))return c.w=a.w,c.x=a.x,c.y=a.y,c.z=a.z,c;b=Math.acos(e);var f=Math.sqrt(1-e*e);if(0.001>Math.abs(f))return c.w=0.5*(a.w+c.w),c.x=0.5*(a.x+c.x),c.y=0.5*(a.y+c.y),c.z=0.5*(a.z+c.z),c;e=Math.sin((1-d)*b)/f;d=Math.sin(d*b)/f;c.w=a.w*e+c.w*d;c.x=a.x*e+c.x*d;c.y=a.y*e+c.y*d;c.z=a.z*e+c.z*d;return c};
THREE.Vertex=function(a){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.");return a};THREE.Face3=function(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=e instanceof Array?e:[];this.vertexTangents=[];this.materialIndex=f;this.centroid=new THREE.Vector3};
THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.Face4=function(a,b,c,d,e,f,g){this.a=a;this.b=b;this.c=c;this.d=d;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.color=f instanceof THREE.Color?f:new THREE.Color;this.vertexColors=f instanceof Array?f:[];this.vertexTangents=[];this.materialIndex=g;this.centroid=new THREE.Vector3};
THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var a=new THREE.Face4(this.a,this.b,this.c,this.d);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};THREE.UV.prototype={constructor:THREE.UV,set:function(a,b){this.u=a;this.v=b;return this},copy:function(a){this.u=a.u;this.v=a.v;return this},lerpSelf:function(a,b){this.u+=(a.u-this.u)*b;this.v+=(a.v-this.v)*b;return this},clone:function(){return new THREE.UV(this.u,this.v)}};
THREE.Geometry=function(){THREE.GeometryLibrary.push(this);this.id=THREE.GeometryIdCount++;this.name="";this.vertices=[];this.colors=[];this.materials=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=
this.verticesNeedUpdate=!1};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){var b=new THREE.Matrix4;b.extractRotation(a);for(var c=0,d=this.vertices.length;c<d;c++)a.multiplyVector3(this.vertices[c]);c=0;for(d=this.faces.length;c<d;c++){var e=this.faces[c];b.multiplyVector3(e.normal);for(var f=0,g=e.vertexNormals.length;f<g;f++)b.multiplyVector3(e.vertexNormals[f]);a.multiplyVector3(e.centroid)}},computeCentroids:function(){var a,b,c;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c.centroid.set(0,
0,0),c instanceof THREE.Face3?(c.centroid.addSelf(this.vertices[c.a]),c.centroid.addSelf(this.vertices[c.b]),c.centroid.addSelf(this.vertices[c.c]),c.centroid.divideScalar(3)):c instanceof THREE.Face4&&(c.centroid.addSelf(this.vertices[c.a]),c.centroid.addSelf(this.vertices[c.b]),c.centroid.addSelf(this.vertices[c.c]),c.centroid.addSelf(this.vertices[c.d]),c.centroid.divideScalar(4))},computeFaceNormals:function(){var a,b,c,d,e,f,g=new THREE.Vector3,h=new THREE.Vector3;a=0;for(b=this.faces.length;a<
b;a++)c=this.faces[a],d=this.vertices[c.a],e=this.vertices[c.b],f=this.vertices[c.c],g.sub(f,e),h.sub(d,e),g.crossSelf(h),g.isZero()||g.normalize(),c.normal.copy(g)},computeVertexNormals:function(){var a,b,c,d;if(void 0===this.__tmpVertices){d=this.__tmpVertices=Array(this.vertices.length);a=0;for(b=this.vertices.length;a<b;a++)d[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:
c instanceof THREE.Face4&&(c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else{d=this.__tmpVertices;a=0;for(b=this.vertices.length;a<b;a++)d[a].set(0,0,0)}a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(d[c.a].addSelf(c.normal),d[c.b].addSelf(c.normal),d[c.c].addSelf(c.normal)):c instanceof THREE.Face4&&(d[c.a].addSelf(c.normal),d[c.b].addSelf(c.normal),d[c.c].addSelf(c.normal),d[c.d].addSelf(c.normal));a=0;for(b=this.vertices.length;a<
b;a++)d[a].normalize();a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(c.vertexNormals[0].copy(d[c.a]),c.vertexNormals[1].copy(d[c.b]),c.vertexNormals[2].copy(d[c.c])):c instanceof THREE.Face4&&(c.vertexNormals[0].copy(d[c.a]),c.vertexNormals[1].copy(d[c.b]),c.vertexNormals[2].copy(d[c.c]),c.vertexNormals[3].copy(d[c.d]))},computeMorphNormals:function(){var a,b,c,d,e;c=0;for(d=this.faces.length;c<d;c++){e=this.faces[c];e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):
e.__originalFaceNormal=e.normal.clone();e.__originalVertexNormals||(e.__originalVertexNormals=[]);a=0;for(b=e.vertexNormals.length;a<b;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone()}var f=new THREE.Geometry;f.faces=this.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];var g=this.morphNormals[a].faceNormals,
h=this.morphNormals[a].vertexNormals,j,k;c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],j=new THREE.Vector3,k=e instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},g.push(j),h.push(k)}g=this.morphNormals[a];f.vertices=this.morphTargets[a].vertices;f.computeFaceNormals();f.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],j=g.faceNormals[c],k=g.vertexNormals[c],
j.copy(e.normal),e instanceof THREE.Face3?(k.a.copy(e.vertexNormals[0]),k.b.copy(e.vertexNormals[1]),k.c.copy(e.vertexNormals[2])):(k.a.copy(e.vertexNormals[0]),k.b.copy(e.vertexNormals[1]),k.c.copy(e.vertexNormals[2]),k.d.copy(e.vertexNormals[3]))}c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){function a(a,b,c,d,e,f,z){h=a.vertices[b];j=a.vertices[c];k=a.vertices[d];m=g[e];p=g[f];n=g[z];r=j.x-
h.x;q=k.x-h.x;s=j.y-h.y;u=k.y-h.y;v=j.z-h.z;B=k.z-h.z;w=p.u-m.u;t=n.u-m.u;D=p.v-m.v;C=n.v-m.v;x=1/(w*C-t*D);I.set((C*r-D*q)*x,(C*s-D*u)*x,(C*v-D*B)*x);L.set((w*q-t*r)*x,(w*u-t*s)*x,(w*B-t*v)*x);F[b].addSelf(I);F[c].addSelf(I);F[d].addSelf(I);E[b].addSelf(L);E[c].addSelf(L);E[d].addSelf(L)}var b,c,d,e,f,g,h,j,k,m,p,n,r,q,s,u,v,B,w,t,D,C,x,z,F=[],E=[],I=new THREE.Vector3,L=new THREE.Vector3,J=new THREE.Vector3,O=new THREE.Vector3,M=new THREE.Vector3;b=0;for(c=this.vertices.length;b<c;b++)F[b]=new THREE.Vector3,
E[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)f=this.faces[b],g=this.faceVertexUvs[0][b],f instanceof THREE.Face3?a(this,f.a,f.b,f.c,0,1,2):f instanceof THREE.Face4&&(a(this,f.a,f.b,f.d,0,1,3),a(this,f.b,f.c,f.d,1,2,3));var H=["a","b","c","d"];b=0;for(c=this.faces.length;b<c;b++){f=this.faces[b];for(d=0;d<f.vertexNormals.length;d++)M.copy(f.vertexNormals[d]),e=f[H[d]],z=F[e],J.copy(z),J.subSelf(M.multiplyScalar(M.dot(z))).normalize(),O.cross(f.vertexNormals[d],z),e=O.dot(E[e]),e=0>e?
-1:1,f.vertexTangents[d]=new THREE.Vector4(J.x,J.y,J.z,e)}this.hasTangents=!0},computeBoundingBox:function(){this.boundingBox||(this.boundingBox={min:new THREE.Vector3,max:new THREE.Vector3});if(0<this.vertices.length){var a;a=this.vertices[0];this.boundingBox.min.copy(a);this.boundingBox.max.copy(a);for(var b=this.boundingBox.min,c=this.boundingBox.max,d=1,e=this.vertices.length;d<e;d++)a=this.vertices[d],a.x<b.x?b.x=a.x:a.x>c.x&&(c.x=a.x),a.y<b.y?b.y=a.y:a.y>c.y&&(c.y=a.y),a.z<b.z?b.z=a.z:a.z>c.z&&
(c.z=a.z)}else this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){var a=0;null===this.boundingSphere&&(this.boundingSphere={radius:0});for(var b=0,c=this.vertices.length;b<c;b++){var d=this.vertices[b].lengthSq();d>a&&(a=d)}this.boundingSphere.radius=Math.sqrt(a)},mergeVertices:function(){var a={},b=[],c=[],d,e=Math.pow(10,4),f,g,h,j;f=0;for(g=this.vertices.length;f<g;f++)d=this.vertices[f],d=[Math.round(d.x*e),Math.round(d.y*e),Math.round(d.z*e)].join("_"),
void 0===a[d]?(a[d]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[d]];f=0;for(g=this.faces.length;f<g;f++)if(a=this.faces[f],a instanceof THREE.Face3)a.a=c[a.a],a.b=c[a.b],a.c=c[a.c];else if(a instanceof THREE.Face4){a.a=c[a.a];a.b=c[a.b];a.c=c[a.c];a.d=c[a.d];d=[a.a,a.b,a.c,a.d];for(e=3;0<e;e--)if(d.indexOf(a["abcd"[e]])!==e){d.splice(e,1);this.faces[f]=new THREE.Face3(d[0],d[1],d[2],a.normal,a.color,a.materialIndex);d=0;for(h=this.faceVertexUvs.length;d<h;d++)(j=this.faceVertexUvs[d][f])&&
j.splice(e,1);this.faces[f].vertexColors=a.vertexColors;break}}c=this.vertices.length-b.length;this.vertices=b;return c},clone:function(){},deallocate:function(){var a=THREE.GeometryLibrary.indexOf(this);-1!==a&&THREE.GeometryLibrary.splice(a,1)}};THREE.GeometryIdCount=0;THREE.GeometryLibrary=[];
THREE.BufferGeometry=function(){THREE.GeometryLibrary.push(this);this.id=THREE.GeometryIdCount++;this.attributes={};this.dynamic=!1;this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.morphTargets=[]};
THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(a){var b,c;this.attributes.position&&(b=this.attributes.position.array);this.attributes.normal&&(c=this.attributes.normal.array);void 0!==b&&(a.multiplyVector3Array(b),this.verticesNeedUpdate=!0);void 0!==c&&(b=new THREE.Matrix4,b.extractRotation(a),b.multiplyVector3Array(c),this.normalsNeedUpdate=!0)},computeBoundingBox:function(){this.boundingBox||(this.boundingBox={min:new THREE.Vector3(Infinity,Infinity,Infinity),
max:new THREE.Vector3(-Infinity,-Infinity,-Infinity)});var a=this.attributes.position.array;if(a)for(var b=this.boundingBox,c,d,e,f=0,g=a.length;f<g;f+=3)c=a[f],d=a[f+1],e=a[f+2],c<b.min.x?b.min.x=c:c>b.max.x&&(b.max.x=c),d<b.min.y?b.min.y=d:d>b.max.y&&(b.max.y=d),e<b.min.z?b.min.z=e:e>b.max.z&&(b.max.z=e);if(void 0===a||0===a.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){this.boundingSphere||(this.boundingSphere={radius:0});var a=this.attributes.position.array;
if(a){for(var b,c=0,d,e,f=0,g=a.length;f<g;f+=3)b=a[f],d=a[f+1],e=a[f+2],b=b*b+d*d+e*e,b>c&&(c=b);this.boundingSphere.radius=Math.sqrt(c)}},computeVertexNormals:function(){if(this.attributes.position&&this.attributes.index){var a,b,c,d;a=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(a),numItems:a};else{a=0;for(b=this.attributes.normal.array.length;a<b;a++)this.attributes.normal.array[a]=0}var e=this.offsets,f=this.attributes.index.array,
g=this.attributes.position.array,h=this.attributes.normal.array,j,k,m,p,n,r,q=new THREE.Vector3,s=new THREE.Vector3,u=new THREE.Vector3,v=new THREE.Vector3,B=new THREE.Vector3;c=0;for(d=e.length;c<d;++c){b=e[c].start;j=e[c].count;var w=e[c].index;a=b;for(b+=j;a<b;a+=3)j=w+f[a],k=w+f[a+1],m=w+f[a+2],p=g[3*j],n=g[3*j+1],r=g[3*j+2],q.set(p,n,r),p=g[3*k],n=g[3*k+1],r=g[3*k+2],s.set(p,n,r),p=g[3*m],n=g[3*m+1],r=g[3*m+2],u.set(p,n,r),v.sub(u,s),B.sub(q,s),v.crossSelf(B),h[3*j]+=v.x,h[3*j+1]+=v.y,h[3*j+
2]+=v.z,h[3*k]+=v.x,h[3*k+1]+=v.y,h[3*k+2]+=v.z,h[3*m]+=v.x,h[3*m+1]+=v.y,h[3*m+2]+=v.z}a=0;for(b=h.length;a<b;a+=3)p=h[a],n=h[a+1],r=h[a+2],c=1/Math.sqrt(p*p+n*n+r*r),h[a]*=c,h[a+1]*=c,h[a+2]*=c;this.normalsNeedUpdate=!0}},computeTangents:function(){function a(a){ba.x=d[3*a];ba.y=d[3*a+1];ba.z=d[3*a+2];$.copy(ba);ga=j[a];N.copy(ga);N.subSelf(ba.multiplyScalar(ba.dot(ga))).normalize();T.cross($,ga);S=T.dot(k[a]);P=0>S?-1:1;h[4*a]=N.x;h[4*a+1]=N.y;h[4*a+2]=N.z;h[4*a+3]=P}if(void 0===this.attributes.index||
void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var b=this.attributes.index.array,c=this.attributes.position.array,d=this.attributes.normal.array,e=this.attributes.uv.array,f=c.length/3;if(void 0===this.attributes.tangent){var g=4*f;this.attributes.tangent={itemSize:4,array:new Float32Array(g),numItems:g}}for(var h=this.attributes.tangent.array,
j=[],k=[],g=0;g<f;g++)j[g]=new THREE.Vector3,k[g]=new THREE.Vector3;var m,p,n,r,q,s,u,v,B,w,t,D,C,x,z,f=new THREE.Vector3,g=new THREE.Vector3,F,E,I,L,J,O,M,H=this.offsets;I=0;for(L=H.length;I<L;++I){E=H[I].start;J=H[I].count;var K=H[I].index;F=E;for(E+=J;F<E;F+=3)J=K+b[F],O=K+b[F+1],M=K+b[F+2],m=c[3*J],p=c[3*J+1],n=c[3*J+2],r=c[3*O],q=c[3*O+1],s=c[3*O+2],u=c[3*M],v=c[3*M+1],B=c[3*M+2],w=e[2*J],t=e[2*J+1],D=e[2*O],C=e[2*O+1],x=e[2*M],z=e[2*M+1],r-=m,m=u-m,q-=p,p=v-p,s-=n,n=B-n,D-=w,w=x-w,C-=t,t=z-
t,z=1/(D*t-w*C),f.set((t*r-C*m)*z,(t*q-C*p)*z,(t*s-C*n)*z),g.set((D*m-w*r)*z,(D*p-w*q)*z,(D*n-w*s)*z),j[J].addSelf(f),j[O].addSelf(f),j[M].addSelf(f),k[J].addSelf(g),k[O].addSelf(g),k[M].addSelf(g)}var N=new THREE.Vector3,T=new THREE.Vector3,ba=new THREE.Vector3,$=new THREE.Vector3,P,ga,S;I=0;for(L=H.length;I<L;++I){E=H[I].start;J=H[I].count;K=H[I].index;F=E;for(E+=J;F<E;F+=3)J=K+b[F],O=K+b[F+1],M=K+b[F+2],a(J),a(O),a(M)}this.tangentsNeedUpdate=this.hasTangents=!0}}};
THREE.Spline=function(a){function b(a,b,c,d,e,f,g){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b}this.points=a;var c=[],d={x:0,y:0,z:0},e,f,g,h,j,k,m,p,n;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){e=(this.points.length-1)*a;f=Math.floor(e);g=e-f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>this.points.length-2?this.points.length-1:f+1;c[3]=f>this.points.length-3?this.points.length-1:
f+2;k=this.points[c[0]];m=this.points[c[1]];p=this.points[c[2]];n=this.points[c[3]];h=g*g;j=g*h;d.x=b(k.x,m.x,p.x,n.x,g,h,j);d.y=b(k.y,m.y,p.y,n.y,g,h,j);d.z=b(k.z,m.z,p.z,n.z,g,h,j);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,e=b=b=0,f=new THREE.Vector3,g=new THREE.Vector3,h=[],j=0;h[0]=0;a||(a=100);c=this.points.length*a;f.copy(this.points[0]);for(a=1;a<c;a++)b=
a/c,d=this.getPoint(b),g.copy(d),j+=g.distanceTo(f),f.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=e&&(h[b]=j,e=b);h[h.length]=j;return{chunks:h,total:j}};this.reparametrizeByArcLength=function(a){var b,c,d,e,f,g,h=[],j=new THREE.Vector3,m=this.getLength();h.push(j.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=m.chunks[b]-m.chunks[b-1];g=Math.ceil(a*c/m.total);e=(b-1)/(this.points.length-1);f=b/(this.points.length-1);for(c=1;c<g-1;c++)d=e+c*(1/g)*(f-e),d=this.getPoint(d),
h.push(j.copy(d).clone());h.push(j.copy(this.points[b]).clone())}this.points=h}};THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);!0===this.rotationAutoUpdate&&this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)};
THREE.OrthographicCamera=function(a,b,c,d,e,f){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==e?e:0.1;this.far=void 0!==f?f:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};
THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.fov=void 0!==a?a:50;this.aspect=void 0!==b?b:1;this.near=void 0!==c?c:0.1;this.far=void 0!==d?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);this.fov=2*Math.atan(b/(2*a))*(180/Math.PI);this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,f){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=e;this.height=f;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(this.fov*Math.PI/360)*this.near,c=-b,d=a*c,a=Math.abs(a*b-d),c=Math.abs(b-c);this.projectionMatrix.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)};
THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);
THREE.DirectionalLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=
!1;this.shadowCascadeOffset=new THREE.Vector3(0,0,-1E3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);
THREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a);this.groundColor=new THREE.Color(b);this.position=new THREE.Vector3(0,100,0);this.intensity=void 0!==c?c:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,0,0);this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);
THREE.SpotLight=function(a,b,c,d,e){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI/2;this.exponent=void 0!==e?e:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=
this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};
THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var a=document.createElement("div");a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="rgba(0,0,0,0.25)";a.style.color="#fff";a.style.width="120px";a.style.padding="0.5em 0.5em 0.5em 0.5em";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ",b=a.total?b+((100*a.loaded/
a.total).toFixed(0)+"%"):b+((a.loaded/1E3).toFixed(2)+" KB");this.statusDomElement.innerHTML=b},extractUrlBase:function(a){a=a.split("/");a.pop();return(1>a.length?".":a.join("/"))+"/"},initMaterials:function(a,b,c){a.materials=[];for(var d=0;d<b.length;++d)a.materials[d]=THREE.Loader.prototype.createMaterial(b[d],c)},hasNormals:function(a){var b,c,d=a.materials.length;for(c=0;c<d;c++)if(b=a.materials[c],b instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(a,b){function c(a){a=
Math.log(a)/Math.LN2;return Math.floor(a)==a}function d(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))}function e(a,e,f,h,j,k,u){var v=f.toLowerCase().endsWith(".dds"),B=b+"/"+f;if(v){var w=THREE.ImageUtils.loadCompressedTexture(B);a[e]=w}else w=document.createElement("canvas"),a[e]=new THREE.Texture(w);a[e].sourceFile=f;h&&(a[e].repeat.set(h[0],h[1]),1!==h[0]&&(a[e].wrapS=THREE.RepeatWrapping),1!==h[1]&&(a[e].wrapT=THREE.RepeatWrapping));j&&a[e].offset.set(j[0],j[1]);k&&(f={repeat:THREE.RepeatWrapping,
mirror:THREE.MirroredRepeatWrapping},void 0!==f[k[0]]&&(a[e].wrapS=f[k[0]]),void 0!==f[k[1]]&&(a[e].wrapT=f[k[1]]));u&&(a[e].anisotropy=u);if(!v){var t=a[e];a=new Image;a.onload=function(){if(!c(this.width)||!c(this.height)){var a=d(this.width),b=d(this.height);t.image.width=a;t.image.height=b;t.image.getContext("2d").drawImage(this,0,0,a,b)}else t.image=this;t.needsUpdate=!0};a.crossOrigin=g.crossOrigin;a.src=B}}function f(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var g=this,h="MeshLambertMaterial",
j={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(a.shading){var k=a.shading.toLowerCase();"phong"===k?h="MeshPhongMaterial":"basic"===k&&(h="MeshBasicMaterial")}void 0!==a.blending&&void 0!==THREE[a.blending]&&(j.blending=THREE[a.blending]);if(void 0!==a.transparent||1>a.opacity)j.transparent=a.transparent;void 0!==a.depthTest&&(j.depthTest=a.depthTest);void 0!==a.depthWrite&&(j.depthWrite=a.depthWrite);void 0!==a.visible&&(j.visible=a.visible);void 0!==
a.flipSided&&(j.side=THREE.BackSide);void 0!==a.doubleSided&&(j.side=THREE.DoubleSide);void 0!==a.wireframe&&(j.wireframe=a.wireframe);void 0!==a.vertexColors&&("face"===a.vertexColors?j.vertexColors=THREE.FaceColors:a.vertexColors&&(j.vertexColors=THREE.VertexColors));a.colorDiffuse?j.color=f(a.colorDiffuse):a.DbgColor&&(j.color=a.DbgColor);a.colorSpecular&&(j.specular=f(a.colorSpecular));a.colorAmbient&&(j.ambient=f(a.colorAmbient));a.transparency&&(j.opacity=a.transparency);a.specularCoef&&(j.shininess=
a.specularCoef);a.mapDiffuse&&b&&e(j,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,a.mapDiffuseAnisotropy);a.mapLight&&b&&e(j,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy);a.mapBump&&b&&e(j,"bumpMap",a.mapBump,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy);a.mapNormal&&b&&e(j,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy);a.mapSpecular&&b&&e(j,"specularMap",
a.mapSpecular,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy);a.mapBumpScale&&(j.bumpScale=a.mapBumpScale);a.mapNormal?(h=THREE.ShaderUtils.lib.normal,k=THREE.UniformsUtils.clone(h.uniforms),k.tNormal.value=j.normalMap,a.mapNormalFactor&&k.uNormalScale.value.set(a.mapNormalFactor,a.mapNormalFactor),j.map&&(k.tDiffuse.value=j.map,k.enableDiffuse.value=!0),j.specularMap&&(k.tSpecular.value=j.specularMap,k.enableSpecular.value=!0),j.lightMap&&(k.tAO.value=j.lightMap,
k.enableAO.value=!0),k.uDiffuseColor.value.setHex(j.color),k.uSpecularColor.value.setHex(j.specular),k.uAmbientColor.value.setHex(j.ambient),k.uShininess.value=j.shininess,void 0!==j.opacity&&(k.uOpacity.value=j.opacity),j=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:k,lights:!0,fog:!0})):j=new THREE[h](j);void 0!==a.DbgName&&(j.name=a.DbgName);return j}};THREE.BinaryLoader=function(a){THREE.Loader.call(this,a)};THREE.BinaryLoader.prototype=Object.create(THREE.Loader.prototype);
THREE.BinaryLoader.prototype.load=function(a,b,c,d){c=c?c:this.extractUrlBase(a);d=d?d:this.extractUrlBase(a);var e=this.showProgress?THREE.Loader.prototype.updateProgress:null;this.onLoadStart();this.loadAjaxJSON(this,a,b,c,d,e)};
THREE.BinaryLoader.prototype.loadAjaxJSON=function(a,b,c,d,e,f){var g=new XMLHttpRequest;g.onreadystatechange=function(){if(4==g.readyState)if(200==g.status||0==g.status){var h=JSON.parse(g.responseText);a.loadAjaxBuffers(h,c,e,d,f)}else console.error("THREE.BinaryLoader: Couldn't load ["+b+"] ["+g.status+"]")};g.open("GET",b,!0);g.send(null)};
THREE.BinaryLoader.prototype.loadAjaxBuffers=function(a,b,c,d,e){var f=new XMLHttpRequest,g=c+"/"+a.buffers,h=0;f.onreadystatechange=function(){if(4==f.readyState)if(200==f.status||0==f.status){var c=f.response;void 0===c&&(c=(new Uint8Array(f.responseBody)).buffer);THREE.BinaryLoader.prototype.createBinModel(c,b,d,a.materials)}else console.error("THREE.BinaryLoader: Couldn't load ["+g+"] ["+f.status+"]");else 3==f.readyState?e&&(0==h&&(h=f.getResponseHeader("Content-Length")),e({total:h,loaded:f.responseText.length})):
2==f.readyState&&(h=f.getResponseHeader("Content-Length"))};f.open("GET",g,!0);f.responseType="arraybuffer";f.send(null)};
THREE.BinaryLoader.prototype.createBinModel=function(a,b,c,d){var e=function(b){var c,e,j,k,m,p,n,r,q,s,u,v,B,w,t;function D(a){return a%4?4-a%4:0}function C(a,b){return(new Uint8Array(a,b,1))[0]}function x(a,b){return(new Uint32Array(a,b,1))[0]}function z(b,c){var d,e,f,g,h,j,m,k,p=new Uint32Array(a,c,3*b);for(d=0;d<b;d++){e=p[3*d];f=p[3*d+1];g=p[3*d+2];h=K[2*e];e=K[2*e+1];j=K[2*f];m=K[2*f+1];f=K[2*g];k=K[2*g+1];g=O.faceVertexUvs[0];var n=[];n.push(new THREE.UV(h,e));n.push(new THREE.UV(j,m));n.push(new THREE.UV(f,
k));g.push(n)}}function F(b,c){var d,e,f,g,h,j,m,k,p,n,q=new Uint32Array(a,c,4*b);for(d=0;d<b;d++){e=q[4*d];f=q[4*d+1];g=q[4*d+2];h=q[4*d+3];j=K[2*e];e=K[2*e+1];m=K[2*f];p=K[2*f+1];k=K[2*g];n=K[2*g+1];g=K[2*h];f=K[2*h+1];h=O.faceVertexUvs[0];var r=[];r.push(new THREE.UV(j,e));r.push(new THREE.UV(m,p));r.push(new THREE.UV(k,n));r.push(new THREE.UV(g,f));h.push(r)}}function E(b,c,d){var e,f,g,h;c=new Uint32Array(a,c,3*b);var j=new Uint16Array(a,d,b);for(d=0;d<b;d++)e=c[3*d],f=c[3*d+1],g=c[3*d+2],h=
j[d],O.faces.push(new THREE.Face3(e,f,g,null,null,h))}function I(b,c,d){var e,f,g,h,j;c=new Uint32Array(a,c,4*b);var m=new Uint16Array(a,d,b);for(d=0;d<b;d++)e=c[4*d],f=c[4*d+1],g=c[4*d+2],h=c[4*d+3],j=m[d],O.faces.push(new THREE.Face4(e,f,g,h,null,null,j))}function L(b,c,d,e){var f,g,h,j,m,k,p;c=new Uint32Array(a,c,3*b);d=new Uint32Array(a,d,3*b);var n=new Uint16Array(a,e,b);for(e=0;e<b;e++){f=c[3*e];g=c[3*e+1];h=c[3*e+2];m=d[3*e];k=d[3*e+1];p=d[3*e+2];j=n[e];var q=H[3*k],r=H[3*k+1];k=H[3*k+2];var s=
H[3*p],u=H[3*p+1];p=H[3*p+2];O.faces.push(new THREE.Face3(f,g,h,[new THREE.Vector3(H[3*m],H[3*m+1],H[3*m+2]),new THREE.Vector3(q,r,k),new THREE.Vector3(s,u,p)],null,j))}}function J(b,c,d,e){var f,g,h,j,m,k,p,n,q;c=new Uint32Array(a,c,4*b);d=new Uint32Array(a,d,4*b);var r=new Uint16Array(a,e,b);for(e=0;e<b;e++){f=c[4*e];g=c[4*e+1];h=c[4*e+2];j=c[4*e+3];k=d[4*e];p=d[4*e+1];n=d[4*e+2];q=d[4*e+3];m=r[e];var s=H[3*p],u=H[3*p+1];p=H[3*p+2];var t=H[3*n],v=H[3*n+1];n=H[3*n+2];var w=H[3*q],x=H[3*q+1];q=H[3*
q+2];O.faces.push(new THREE.Face4(f,g,h,j,[new THREE.Vector3(H[3*k],H[3*k+1],H[3*k+2]),new THREE.Vector3(s,u,p),new THREE.Vector3(t,v,n),new THREE.Vector3(w,x,q)],null,m))}}var O=this,M=0,H=[],K=[],N,T,ba;THREE.Geometry.call(this);THREE.Loader.prototype.initMaterials(O,d,b);t=a;T=M;b=new Uint8Array(t,T,12);s="";for(B=0;12>B;B++)s+=String.fromCharCode(b[T+B]);c=C(t,T+12);C(t,T+13);C(t,T+14);C(t,T+15);e=C(t,T+16);j=C(t,T+17);k=C(t,T+18);m=C(t,T+19);p=x(t,T+20);n=x(t,T+20+4);r=x(t,T+20+8);q=x(t,T+20+
12);s=x(t,T+20+16);u=x(t,T+20+20);v=x(t,T+20+24);B=x(t,T+20+28);b=x(t,T+20+32);w=x(t,T+20+36);t=x(t,T+20+40);M+=c;T=3*e+m;ba=4*e+m;N=q*T;c=s*(T+3*j);e=u*(T+3*k);m=v*(T+3*j+3*k);T=B*ba;j=b*(ba+4*j);k=w*(ba+4*k);ba=M;var M=new Float32Array(a,M,3*p),$,P,ga,S;for($=0;$<p;$++)P=M[3*$],ga=M[3*$+1],S=M[3*$+2],O.vertices.push(new THREE.Vector3(P,ga,S));p=M=ba+3*p*Float32Array.BYTES_PER_ELEMENT;if(n){M=new Int8Array(a,M,3*n);for(ba=0;ba<n;ba++)$=M[3*ba],P=M[3*ba+1],ga=M[3*ba+2],H.push($/127,P/127,ga/127)}M=
p+3*n*Int8Array.BYTES_PER_ELEMENT;n=M+=D(3*n);if(r){M=new Float32Array(a,M,2*r);for(p=0;p<r;p++)ba=M[2*p],$=M[2*p+1],K.push(ba,$)}r=M=n+2*r*Float32Array.BYTES_PER_ELEMENT;N=r+N+D(2*q);n=N+c+D(2*s);c=n+e+D(2*u);e=c+m+D(2*v);T=e+T+D(2*B);m=T+j+D(2*b);j=m+k+D(2*w);u&&(k=n+3*u*Uint32Array.BYTES_PER_ELEMENT,E(u,n,k+3*u*Uint32Array.BYTES_PER_ELEMENT),z(u,k));v&&(u=c+3*v*Uint32Array.BYTES_PER_ELEMENT,k=u+3*v*Uint32Array.BYTES_PER_ELEMENT,L(v,c,u,k+3*v*Uint32Array.BYTES_PER_ELEMENT),z(v,k));w&&(v=m+4*w*Uint32Array.BYTES_PER_ELEMENT,
I(w,m,v+4*w*Uint32Array.BYTES_PER_ELEMENT),F(w,v));t&&(w=j+4*t*Uint32Array.BYTES_PER_ELEMENT,v=w+4*t*Uint32Array.BYTES_PER_ELEMENT,J(t,j,w,v+4*t*Uint32Array.BYTES_PER_ELEMENT),F(t,v));q&&E(q,r,r+3*q*Uint32Array.BYTES_PER_ELEMENT);s&&(q=N+3*s*Uint32Array.BYTES_PER_ELEMENT,L(s,N,q,q+3*s*Uint32Array.BYTES_PER_ELEMENT));B&&I(B,e,e+4*B*Uint32Array.BYTES_PER_ELEMENT);b&&(s=T+4*b*Uint32Array.BYTES_PER_ELEMENT,J(b,T,s,s+4*b*Uint32Array.BYTES_PER_ELEMENT));this.computeCentroids();this.computeFaceNormals();
THREE.Loader.prototype.hasNormals(this)&&this.computeTangents()};e.prototype=Object.create(THREE.Geometry.prototype);b(new e(c))};THREE.ImageLoader=function(){THREE.EventTarget.call(this);this.crossOrigin=null};
THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,b){var c=this;void 0===b&&(b=new Image);b.addEventListener("load",function(){c.dispatchEvent({type:"load",content:b})},!1);b.addEventListener("error",function(){c.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);c.crossOrigin&&(b.crossOrigin=c.crossOrigin);b.src=a}};THREE.JSONLoader=function(a){THREE.Loader.call(this,a)};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);
THREE.JSONLoader.prototype.load=function(a,b,c){c=c?c:this.extractUrlBase(a);this.onLoadStart();this.loadAjaxJSON(this,a,b,c)};
THREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,e){var f=new XMLHttpRequest,g=0;f.onreadystatechange=function(){if(f.readyState===f.DONE)if(200===f.status||0===f.status){if(f.responseText){var h=JSON.parse(f.responseText);a.createModel(h,c,d)}else console.warn("THREE.JSONLoader: ["+b+"] seems to be unreachable or file there is empty");a.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+b+"] ["+f.status+"]");else f.readyState===f.LOADING?e&&(0===g&&(g=f.getResponseHeader("Content-Length")),
e({total:g,loaded:f.responseText.length})):f.readyState===f.HEADERS_RECEIVED&&(g=f.getResponseHeader("Content-Length"))};f.open("GET",b,!0);f.send(null)};
THREE.JSONLoader.prototype.createModel=function(a,b,c){var d=new THREE.Geometry,e=void 0!==a.scale?1/a.scale:1;this.initMaterials(d,a.materials,c);var f,g,h,j,k,m,p,n,r,q,s,u,v,B,w=a.faces;r=a.vertices;var t=a.normals,D=a.colors,C=0;for(f=0;f<a.uvs.length;f++)a.uvs[f].length&&C++;for(f=0;f<C;f++)d.faceUvs[f]=[],d.faceVertexUvs[f]=[];c=0;for(j=r.length;c<j;)k=new THREE.Vector3,k.x=r[c++]*e,k.y=r[c++]*e,k.z=r[c++]*e,d.vertices.push(k);c=0;for(j=w.length;c<j;){r=w[c++];k=r&1;h=r&2;f=r&4;g=r&8;p=r&16;
m=r&32;q=r&64;r&=128;k?(s=new THREE.Face4,s.a=w[c++],s.b=w[c++],s.c=w[c++],s.d=w[c++],k=4):(s=new THREE.Face3,s.a=w[c++],s.b=w[c++],s.c=w[c++],k=3);h&&(h=w[c++],s.materialIndex=h);h=d.faces.length;if(f)for(f=0;f<C;f++)u=a.uvs[f],n=w[c++],B=u[2*n],n=u[2*n+1],d.faceUvs[f][h]=new THREE.UV(B,n);if(g)for(f=0;f<C;f++){u=a.uvs[f];v=[];for(g=0;g<k;g++)n=w[c++],B=u[2*n],n=u[2*n+1],v[g]=new THREE.UV(B,n);d.faceVertexUvs[f][h]=v}p&&(p=3*w[c++],g=new THREE.Vector3,g.x=t[p++],g.y=t[p++],g.z=t[p],s.normal=g);if(m)for(f=
0;f<k;f++)p=3*w[c++],g=new THREE.Vector3,g.x=t[p++],g.y=t[p++],g.z=t[p],s.vertexNormals.push(g);q&&(m=w[c++],m=new THREE.Color(D[m]),s.color=m);if(r)for(f=0;f<k;f++)m=w[c++],m=new THREE.Color(D[m]),s.vertexColors.push(m);d.faces.push(s)}if(a.skinWeights){c=0;for(j=a.skinWeights.length;c<j;c+=2)w=a.skinWeights[c],t=a.skinWeights[c+1],d.skinWeights.push(new THREE.Vector4(w,t,0,0))}if(a.skinIndices){c=0;for(j=a.skinIndices.length;c<j;c+=2)w=a.skinIndices[c],t=a.skinIndices[c+1],d.skinIndices.push(new THREE.Vector4(w,
t,0,0))}d.bones=a.bones;d.animation=a.animation;if(void 0!==a.morphTargets){c=0;for(j=a.morphTargets.length;c<j;c++){d.morphTargets[c]={};d.morphTargets[c].name=a.morphTargets[c].name;d.morphTargets[c].vertices=[];D=d.morphTargets[c].vertices;C=a.morphTargets[c].vertices;w=0;for(t=C.length;w<t;w+=3)r=new THREE.Vector3,r.x=C[w]*e,r.y=C[w+1]*e,r.z=C[w+2]*e,D.push(r)}}if(void 0!==a.morphColors){c=0;for(j=a.morphColors.length;c<j;c++){d.morphColors[c]={};d.morphColors[c].name=a.morphColors[c].name;d.morphColors[c].colors=
[];t=d.morphColors[c].colors;D=a.morphColors[c].colors;e=0;for(w=D.length;e<w;e+=3)C=new THREE.Color(16755200),C.setRGB(D[e],D[e+1],D[e+2]),t.push(C)}}d.computeCentroids();d.computeFaceNormals();this.hasNormals(d)&&d.computeTangents();b(d)};THREE.LoadingMonitor=function(){THREE.EventTarget.call(this);var a=this,b=0,c=0,d=function(){b++;a.dispatchEvent({type:"progress",loaded:b,total:c});b===c&&a.dispatchEvent({type:"load"})};this.add=function(a){c++;a.addEventListener("load",d,!1)}};
THREE.GeometryLoader=function(){THREE.EventTarget.call(this);this.path=this.crossOrigin=null};
THREE.GeometryLoader.prototype={constructor:THREE.GeometryLoader,load:function(a){var b=this,c=null;if(null===b.path){var d=a.split("/");d.pop();b.path=1>d.length?".":d.join("/")}d=new XMLHttpRequest;d.addEventListener("load",function(d){d.target.responseText?c=b.parse(JSON.parse(d.target.responseText),e):b.dispatchEvent({type:"error",message:"Invalid file ["+a+"]"})},!1);d.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);d.open("GET",a,
!0);d.send(null);var e=new THREE.LoadingMonitor;e.addEventListener("load",function(){b.dispatchEvent({type:"load",content:c})});e.add(d)},parse:function(a,b){var c=this,d=new THREE.Geometry,e=void 0!==a.scale?1/a.scale:1;if(a.materials){d.materials=[];for(var f=0;f<a.materials.length;++f){var g=a.materials[f],h=function(a){a=Math.log(a)/Math.LN2;return Math.floor(a)==a},j=function(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))},k=function(a,d,e,f,g,m){a[d]=new THREE.Texture;a[d].sourceFile=
e;f&&(a[d].repeat.set(f[0],f[1]),1!==f[0]&&(a[d].wrapS=THREE.RepeatWrapping),1!==f[1]&&(a[d].wrapT=THREE.RepeatWrapping));g&&a[d].offset.set(g[0],g[1]);m&&(f={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==f[m[0]]&&(a[d].wrapS=f[m[0]]),void 0!==f[m[1]]&&(a[d].wrapT=f[m[1]]));var k=a[d];a=new THREE.ImageLoader;a.addEventListener("load",function(a){a=a.content;if(!h(a.width)||!h(a.height)){var b=j(a.width),c=j(a.height);k.image=document.createElement("canvas");k.image.width=
b;k.image.height=c;k.image.getContext("2d").drawImage(a,0,0,b,c)}else k.image=a;k.needsUpdate=!0});a.crossOrigin=c.crossOrigin;a.load(c.path+"/"+e);b&&b.add(a)},m=function(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]},p="MeshLambertMaterial",n={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(g.shading){var r=g.shading.toLowerCase();"phong"===r?p="MeshPhongMaterial":"basic"===r&&(p="MeshBasicMaterial")}void 0!==g.blending&&void 0!==THREE[g.blending]&&
(n.blending=THREE[g.blending]);if(void 0!==g.transparent||1>g.opacity)n.transparent=g.transparent;void 0!==g.depthTest&&(n.depthTest=g.depthTest);void 0!==g.depthWrite&&(n.depthWrite=g.depthWrite);void 0!==g.vertexColors&&("face"==g.vertexColors?n.vertexColors=THREE.FaceColors:g.vertexColors&&(n.vertexColors=THREE.VertexColors));g.colorDiffuse?n.color=m(g.colorDiffuse):g.DbgColor&&(n.color=g.DbgColor);g.colorSpecular&&(n.specular=m(g.colorSpecular));g.colorAmbient&&(n.ambient=m(g.colorAmbient));g.transparency&&
(n.opacity=g.transparency);g.specularCoef&&(n.shininess=g.specularCoef);void 0!==g.visible&&(n.visible=g.visible);void 0!==g.flipSided&&(n.side=THREE.BackSide);void 0!==g.doubleSided&&(n.side=THREE.DoubleSide);void 0!==g.wireframe&&(n.wireframe=g.wireframe);g.mapDiffuse&&k(n,"map",g.mapDiffuse,g.mapDiffuseRepeat,g.mapDiffuseOffset,g.mapDiffuseWrap);g.mapLight&&k(n,"lightMap",g.mapLight,g.mapLightRepeat,g.mapLightOffset,g.mapLightWrap);g.mapBump&&k(n,"bumpMap",g.mapBump,g.mapBumpRepeat,g.mapBumpOffset,
g.mapBumpWrap);g.mapNormal&&k(n,"normalMap",g.mapNormal,g.mapNormalRepeat,g.mapNormalOffset,g.mapNormalWrap);g.mapSpecular&&k(n,"specularMap",g.mapSpecular,g.mapSpecularRepeat,g.mapSpecularOffset,g.mapSpecularWrap);g.mapNormal?(k=THREE.ShaderUtils.lib.normal,m=THREE.UniformsUtils.clone(k.uniforms),m.tNormal.value=n.normalMap,g.mapNormalFactor&&m.uNormalScale.value.set(g.mapNormalFactor,g.mapNormalFactor),n.map&&(m.tDiffuse.value=n.map,m.enableDiffuse.value=!0),n.specularMap&&(m.tSpecular.value=n.specularMap,
m.enableSpecular.value=!0),n.lightMap&&(m.tAO.value=n.lightMap,m.enableAO.value=!0),m.uDiffuseColor.value.setHex(n.color),m.uSpecularColor.value.setHex(n.specular),m.uAmbientColor.value.setHex(n.ambient),m.uShininess.value=n.shininess,void 0!==n.opacity&&(m.uOpacity.value=n.opacity),n=new THREE.ShaderMaterial({fragmentShader:k.fragmentShader,vertexShader:k.vertexShader,uniforms:m,lights:!0,fog:!0})):n=new THREE[p](n);void 0!==g.DbgName&&(n.name=g.DbgName);d.materials[f]=n}}var g=a.faces,q=a.vertices,
n=a.normals,k=a.colors,m=0;if(a.uvs)for(f=0;f<a.uvs.length;f++)a.uvs[f].length&&m++;for(f=0;f<m;f++)d.faceUvs[f]=[],d.faceVertexUvs[f]=[];p=0;for(r=q.length;p<r;){var s=new THREE.Vector3;s.x=q[p++]*e;s.y=q[p++]*e;s.z=q[p++]*e;d.vertices.push(s)}p=0;for(r=g.length;p<r;){var u=g[p++],v=u&2,f=u&4,B=u&8,w=u&16,q=u&32,t=u&64,s=u&128;if(u&1){u=new THREE.Face4;u.a=g[p++];u.b=g[p++];u.c=g[p++];u.d=g[p++];var D=4}else u=new THREE.Face3,u.a=g[p++],u.b=g[p++],u.c=g[p++],D=3;v&&(v=g[p++],u.materialIndex=v);var C=
d.faces.length;if(f)for(f=0;f<m;f++){var x=a.uvs[f],v=g[p++],z=x[2*v],v=x[2*v+1];d.faceUvs[f][C]=new THREE.UV(z,v)}if(B)for(f=0;f<m;f++){for(var x=a.uvs[f],B=[],F=0;F<D;F++)v=g[p++],z=x[2*v],v=x[2*v+1],B[F]=new THREE.UV(z,v);d.faceVertexUvs[f][C]=B}w&&(w=3*g[p++],v=new THREE.Vector3,v.x=n[w++],v.y=n[w++],v.z=n[w],u.normal=v);if(q)for(f=0;f<D;f++)w=3*g[p++],v=new THREE.Vector3,v.x=n[w++],v.y=n[w++],v.z=n[w],u.vertexNormals.push(v);t&&(q=g[p++],u.color=new THREE.Color(k[q]));if(s)for(f=0;f<D;f++)q=
g[p++],u.vertexColors.push(new THREE.Color(k[q]));d.faces.push(u)}if(a.skinWeights){f=0;for(g=a.skinWeights.length;f<g;f+=2)d.skinWeights.push(new THREE.Vector4(a.skinWeights[f],a.skinWeights[f+1],0,0))}if(a.skinIndices){f=0;for(g=a.skinIndices.length;f<g;f+=2)n=0,d.skinIndices.push(new THREE.Vector4(a.skinIndices[f],a.skinIndices[f+1],n,0))}d.bones=a.bones;d.animation=a.animation;if(a.morphTargets){f=0;for(g=a.morphTargets.length;f<g;f++){d.morphTargets[f]={};d.morphTargets[f].name=a.morphTargets[f].name;
d.morphTargets[f].vertices=[];n=d.morphTargets[f].vertices;k=a.morphTargets[f].vertices;v=0;for(m=k.length;v<m;v+=3)s=new THREE.Vector3,s.x=k[v]*e,s.y=k[v+1]*e,s.z=k[v+2]*e,n.push(s)}}if(a.morphColors){f=0;for(g=a.morphColors.length;f<g;f++){d.morphColors[f]={};d.morphColors[f].name=a.morphColors[f].name;d.morphColors[f].colors=[];e=d.morphColors[f].colors;k=a.morphColors[f].colors;n=0;for(m=k.length;n<m;n+=3)p=new THREE.Color(16755200),p.setRGB(k[n],k[n+1],k[n+2]),e.push(p)}}d.computeCentroids();
d.computeFaceNormals();return d}};THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlerMap={};this.addGeometryHandler("ascii",THREE.JSONLoader);this.addGeometryHandler("binary",THREE.BinaryLoader)};THREE.SceneLoader.prototype.constructor=THREE.SceneLoader;
THREE.SceneLoader.prototype.load=function(a,b){var c=this,d=new XMLHttpRequest;d.onreadystatechange=function(){if(4===d.readyState)if(200===d.status||0===d.status){var e=JSON.parse(d.responseText);c.parse(e,b,a)}else console.error("THREE.SceneLoader: Couldn't load ["+a+"] ["+d.status+"]")};d.open("GET",a,!0);d.send(null)};THREE.SceneLoader.prototype.addGeometryHandler=function(a,b){this.geometryHandlerMap[a]={loaderClass:b}};
THREE.SceneLoader.prototype.parse=function(a,b,c){function d(a,b){return"relativeToHTML"==b?a:k+"/"+a}function e(a,b){for(var c in b)if(void 0===K.objects[c]){var d=b[c],f=null;if(void 0!==d.geometry){if(z=K.geometries[d.geometry])f=!1,F=K.materials[d.materials[0]],(f=F instanceof THREE.ShaderMaterial)&&z.computeTangents(),B=d.position,w=d.rotation,t=d.quaternion,D=d.scale,u=d.matrix,t=0,0===d.materials.length&&(F=new THREE.MeshFaceMaterial),1<d.materials.length&&(F=new THREE.MeshFaceMaterial),d.morph?
(f=new THREE.MorphAnimMesh(z,F),void 0!==d.duration&&(f.duration=d.duration),void 0!==d.time&&(f.time=d.time),void 0!==d.mirroredLoop&&(f.mirroredLoop=d.mirroredLoop),F.morphNormals&&z.computeMorphNormals()):f=new THREE.Mesh(z,F),f.name=c,u?(f.matrixAutoUpdate=!1,f.matrix.set(u[0],u[1],u[2],u[3],u[4],u[5],u[6],u[7],u[8],u[9],u[10],u[11],u[12],u[13],u[14],u[15])):(f.position.set(B[0],B[1],B[2]),t?(f.quaternion.set(t[0],t[1],t[2],t[3]),f.useQuaternion=!0):f.rotation.set(w[0],w[1],w[2]),f.scale.set(D[0],
D[1],D[2])),f.visible=d.visible,f.castShadow=d.castShadow,f.receiveShadow=d.receiveShadow,a.add(f),K.objects[c]=f}else B=d.position,w=d.rotation,t=d.quaternion,D=d.scale,t=0,f=new THREE.Object3D,f.name=c,f.position.set(B[0],B[1],B[2]),t?(f.quaternion.set(t[0],t[1],t[2],t[3]),f.useQuaternion=!0):f.rotation.set(w[0],w[1],w[2]),f.scale.set(D[0],D[1],D[2]),f.visible=void 0!==d.visible?d.visible:!1,a.add(f),K.objects[c]=f,K.empties[c]=f;if(f){if(void 0!==d.properties)for(var g in d.properties)f.properties[g]=
d.properties[g];void 0!==d.children&&e(f,d.children)}}}function f(a){return function(b){K.geometries[a]=b;e(K.scene,N.objects);J-=1;j.onLoadComplete();h()}}function g(a){return function(b){K.geometries[a]=b}}function h(){j.callbackProgress({totalModels:M,totalTextures:H,loadedModels:M-J,loadedTextures:H-O},K);j.onLoadProgress();0===J&&0===O&&b(K)}var j=this,k=THREE.Loader.prototype.extractUrlBase(c),m,p,n,r,q,s,u,v,B,w,t,D,C,x,z,F,E,I,L,J,O,M,H,K,N=a;for(C in this.geometryHandlerMap)this.geometryHandlerMap[C].loaderObject=
new this.geometryHandlerMap[C].loaderClass;O=J=0;K={scene:new THREE.Scene,geometries:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{}};if(N.transform&&(a=N.transform.position,c=N.transform.rotation,C=N.transform.scale,a&&K.scene.position.set(a[0],a[1],a[2]),c&&K.scene.rotation.set(c[0],c[1],c[2]),C&&K.scene.scale.set(C[0],C[1],C[2]),a||c||C))K.scene.updateMatrix(),K.scene.updateMatrixWorld();a=function(a){return function(){O-=a;h();j.onLoadComplete()}};for(r in N.cameras)C=
N.cameras[r],"perspective"===C.type?E=new THREE.PerspectiveCamera(C.fov,C.aspect,C.near,C.far):"ortho"===C.type&&(E=new THREE.OrthographicCamera(C.left,C.right,C.top,C.bottom,C.near,C.far)),B=C.position,c=C.target,C=C.up,E.position.set(B[0],B[1],B[2]),E.target=new THREE.Vector3(c[0],c[1],c[2]),C&&E.up.set(C[0],C[1],C[2]),K.cameras[r]=E;for(n in N.lights)c=N.lights[n],r=void 0!==c.color?c.color:16777215,E=void 0!==c.intensity?c.intensity:1,"directional"===c.type?(B=c.direction,v=new THREE.DirectionalLight(r,
E),v.position.set(B[0],B[1],B[2]),v.position.normalize()):"point"===c.type?(B=c.position,v=c.distance,v=new THREE.PointLight(r,E,v),v.position.set(B[0],B[1],B[2])):"ambient"===c.type&&(v=new THREE.AmbientLight(r)),K.scene.add(v),K.lights[n]=v;for(q in N.fogs)n=N.fogs[q],"linear"===n.type?I=new THREE.Fog(0,n.near,n.far):"exp2"===n.type&&(I=new THREE.FogExp2(0,n.density)),C=n.color,I.color.setRGB(C[0],C[1],C[2]),K.fogs[q]=I;K.cameras&&N.defaults.camera&&(K.currentCamera=K.cameras[N.defaults.camera]);
K.fogs&&N.defaults.fog&&(K.scene.fog=K.fogs[N.defaults.fog]);C=N.defaults.bgcolor;K.bgColor=new THREE.Color;K.bgColor.setRGB(C[0],C[1],C[2]);K.bgColorAlpha=N.defaults.bgalpha;for(m in N.geometries)q=N.geometries[m],q.type in this.geometryHandlerMap&&(J+=1,j.onLoadStart());M=J;for(m in N.geometries)if(q=N.geometries[m],"cube"===q.type)z=new THREE.CubeGeometry(q.width,q.height,q.depth,q.segmentsWidth,q.segmentsHeight,q.segmentsDepth,null,q.flipped,q.sides),K.geometries[m]=z;else if("plane"===q.type)z=
new THREE.PlaneGeometry(q.width,q.height,q.segmentsWidth,q.segmentsHeight),K.geometries[m]=z;else if("sphere"===q.type)z=new THREE.SphereGeometry(q.radius,q.segmentsWidth,q.segmentsHeight),K.geometries[m]=z;else if("cylinder"===q.type)z=new THREE.CylinderGeometry(q.topRad,q.botRad,q.height,q.radSegs,q.heightSegs),K.geometries[m]=z;else if("torus"===q.type)z=new THREE.TorusGeometry(q.radius,q.tube,q.segmentsR,q.segmentsT),K.geometries[m]=z;else if("icosahedron"===q.type)z=new THREE.IcosahedronGeometry(q.radius,
q.subdivisions),K.geometries[m]=z;else if(q.type in this.geometryHandlerMap){I={};for(L in q)"type"!==L&&"url"!==L&&(I[L]=q[L]);this.geometryHandlerMap[q.type].loaderObject.load(d(q.url,N.urlBaseType),f(m),I)}else"embedded"===q.type&&(q=N.embeds[q.id],q.metadata=N.metadata,q&&this.geometryHandlerMap.ascii.loaderObject.createModel(q,g(m),""));for(s in N.textures)if(m=N.textures[s],m.url instanceof Array){O+=m.url.length;for(L=0;L<m.url.length;L++)j.onLoadStart()}else O+=1,j.onLoadStart();H=O;for(s in N.textures){m=
N.textures[s];void 0!==m.mapping&&void 0!==THREE[m.mapping]&&(m.mapping=new THREE[m.mapping]);if(m.url instanceof Array){q=m.url.length;I=[];for(L=0;L<q;L++)I[L]=d(m.url[L],N.urlBaseType);L=(L=I[0].endsWith(".dds"))?THREE.ImageUtils.loadCompressedTextureCube(I,m.mapping,a(q)):THREE.ImageUtils.loadTextureCube(I,m.mapping,a(q))}else L=m.url.toLowerCase().endsWith(".dds"),q=d(m.url,N.urlBaseType),I=a(1),L=L?THREE.ImageUtils.loadCompressedTexture(q,m.mapping,I):THREE.ImageUtils.loadTexture(q,m.mapping,
I),void 0!==THREE[m.minFilter]&&(L.minFilter=THREE[m.minFilter]),void 0!==THREE[m.magFilter]&&(L.magFilter=THREE[m.magFilter]),m.anisotropy&&(L.anisotropy=m.anisotropy),m.repeat&&(L.repeat.set(m.repeat[0],m.repeat[1]),1!==m.repeat[0]&&(L.wrapS=THREE.RepeatWrapping),1!==m.repeat[1]&&(L.wrapT=THREE.RepeatWrapping)),m.offset&&L.offset.set(m.offset[0],m.offset[1]),m.wrap&&(q={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==q[m.wrap[0]]&&(L.wrapS=q[m.wrap[0]]),void 0!==q[m.wrap[1]]&&
(L.wrapT=q[m.wrap[1]]));K.textures[s]=L}for(p in N.materials){u=N.materials[p];for(x in u.parameters)"envMap"===x||"map"===x||"lightMap"===x||"bumpMap"===x?u.parameters[x]=K.textures[u.parameters[x]]:"shading"===x?u.parameters[x]="flat"===u.parameters[x]?THREE.FlatShading:THREE.SmoothShading:"side"===x?u.parameters[x]="double"==u.parameters[x]?THREE.DoubleSide:"back"==u.parameters[x]?THREE.BackSide:THREE.FrontSide:"blending"===x?u.parameters[x]=u.parameters[x]in THREE?THREE[u.parameters[x]]:THREE.NormalBlending:
"combine"===x?u.parameters[x]="MixOperation"==u.parameters[x]?THREE.MixOperation:THREE.MultiplyOperation:"vertexColors"===x?"face"==u.parameters[x]?u.parameters[x]=THREE.FaceColors:u.parameters[x]&&(u.parameters[x]=THREE.VertexColors):"wrapRGB"===x&&(s=u.parameters[x],u.parameters[x]=new THREE.Vector3(s[0],s[1],s[2]));void 0!==u.parameters.opacity&&1>u.parameters.opacity&&(u.parameters.transparent=!0);u.parameters.normalMap?(s=THREE.ShaderUtils.lib.normal,a=THREE.UniformsUtils.clone(s.uniforms),m=
u.parameters.color,L=u.parameters.specular,q=u.parameters.ambient,I=u.parameters.shininess,a.tNormal.value=K.textures[u.parameters.normalMap],u.parameters.normalScale&&a.uNormalScale.value.set(u.parameters.normalScale[0],u.parameters.normalScale[1]),u.parameters.map&&(a.tDiffuse.value=u.parameters.map,a.enableDiffuse.value=!0),u.parameters.envMap&&(a.tCube.value=u.parameters.envMap,a.enableReflection.value=!0,a.uReflectivity.value=u.parameters.reflectivity),u.parameters.lightMap&&(a.tAO.value=u.parameters.lightMap,
a.enableAO.value=!0),u.parameters.specularMap&&(a.tSpecular.value=K.textures[u.parameters.specularMap],a.enableSpecular.value=!0),u.parameters.displacementMap&&(a.tDisplacement.value=K.textures[u.parameters.displacementMap],a.enableDisplacement.value=!0,a.uDisplacementBias.value=u.parameters.displacementBias,a.uDisplacementScale.value=u.parameters.displacementScale),a.uDiffuseColor.value.setHex(m),a.uSpecularColor.value.setHex(L),a.uAmbientColor.value.setHex(q),a.uShininess.value=I,u.parameters.opacity&&
(a.uOpacity.value=u.parameters.opacity),F=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:a,lights:!0,fog:!0})):F=new THREE[u.type](u.parameters);K.materials[p]=F}e(K.scene,N.objects);j.callbackSync(K);h()};THREE.TextureLoader=function(){THREE.EventTarget.call(this);this.crossOrigin=null};
THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a){var b=this,c=new Image;c.addEventListener("load",function(){var a=new THREE.Texture(c);a.needsUpdate=!0;b.dispatchEvent({type:"load",content:a})},!1);c.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);b.crossOrigin&&(c.crossOrigin=b.crossOrigin);c.src=a}};
THREE.Material=function(){THREE.MaterialLibrary.push(this);this.id=THREE.MaterialIdCount++;this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.overdraw=!1;this.needsUpdate=this.visible=!0};
THREE.Material.prototype.setValues=function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn("THREE.Material: '"+b+"' parameter is undefined.");else if(b in this){var d=this[b];d instanceof THREE.Color&&c instanceof THREE.Color?d.copy(c):d instanceof THREE.Color&&"number"===typeof c?d.setHex(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):this[b]=c}}};
THREE.Material.prototype.clone=function(a){void 0===a&&(a=new THREE.Material);a.name=this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;a.blending=this.blending;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=this.blendEquation;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=this.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.overdraw=this.overdraw;
a.visible=this.visible;return a};THREE.Material.prototype.deallocate=function(){var a=THREE.MaterialLibrary.indexOf(this);-1!==a&&THREE.MaterialLibrary.splice(a,1)};THREE.MaterialIdCount=0;THREE.MaterialLibrary=[];THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.linecap=this.linecap;a.linejoin=this.linejoin;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};
THREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(a)};
THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=
this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;return a};
THREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=
"round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;
a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.wrapAround=this.perPixel=this.metal=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=
1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.specular.copy(this.specular);a.shininess=this.shininess;a.metal=this.metal;a.perPixel=this.perPixel;a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.bumpMap=this.bumpMap;a.bumpScale=this.bumpScale;a.normalMap=this.normalMap;a.normalScale.copy(this.normalScale);
a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};
THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,a);a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshFaceMaterial=function(){};
THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial};THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ParticleBasicMaterial.prototype.clone=function(){var a=new THREE.ParticleBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.size=this.size;a.sizeAttenuation=this.sizeAttenuation;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.ParticleCanvasMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(){};this.setValues(a)};THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ParticleCanvasMaterial.prototype.clone=function(){var a=new THREE.ParticleCanvasMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.program=this.program;return a};THREE.ParticleDOMMaterial=function(a){this.element=a};THREE.ParticleDOMMaterial.prototype.clone=function(){return new THREE.ParticleDOMMaterial(this.element)};
THREE.ShaderMaterial=function(a){THREE.Material.call(this);this.vertexShader=this.fragmentShader="void main() {}";this.uniforms={};this.defines={};this.attributes=null;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,a);a.fragmentShader=this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=this.uniforms;a.attributes=this.attributes;a.defines=this.defines;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=
this.morphNormals;return a};
THREE.Texture=function(a,b,c,d,e,f,g,h,j){THREE.TextureLibrary.push(this);this.id=THREE.TextureIdCount++;this.image=a;this.mapping=void 0!==b?b:new THREE.UVMapping;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==e?e:THREE.LinearFilter;this.minFilter=void 0!==f?f:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==j?j:1;this.format=void 0!==g?g:THREE.RGBAFormat;this.type=void 0!==h?h:THREE.UnsignedByteType;this.offset=
new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.needsUpdate=!1;this.onUpdate=null};
THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var a=new THREE.Texture;a.image=this.image;a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.generateMipmaps=this.generateMipmaps;a.premultiplyAlpha=this.premultiplyAlpha;a.flipY=this.flipY;return a},deallocate:function(){var a=THREE.TextureLibrary.indexOf(this);
-1!==a&&THREE.TextureLibrary.splice(a,1)}};THREE.TextureIdCount=0;THREE.TextureLibrary=[];THREE.CompressedTexture=function(a,b,c,d,e,f,g,h,j,k){THREE.Texture.call(this,null,f,g,h,j,k,d,e);this.image={width:b,height:c};this.mipmaps=a};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);
THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture;a.image=this.image;a.mipmaps=this.mipmaps;a.format=this.format;a.type=this.type;a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.DataTexture=function(a,b,c,d,e,f,g,h,j,k){THREE.Texture.call(this,null,f,g,h,j,k,d,e);this.image={data:a,width:b,height:c}};
THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture(this.image.data,this.image.width,this.image.height,this.format,this.type,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=Object.create(THREE.Object3D.prototype);
THREE.Particle.prototype.clone=function(a){void 0===a&&(a=new THREE.Particle(this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.ParticleBasicMaterial({color:16777215*Math.random()});this.sortParticles=!1;this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius);this.frustumCulled=!1};
THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);THREE.ParticleSystem.prototype.clone=function(a){void 0===a&&(a=new THREE.ParticleSystem(this.geometry,this.material));a.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,a);return a};
THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==c?c:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);
THREE.Line.prototype.clone=function(a){void 0===a&&(a=new THREE.Line(this.geometry,this.material,this.type));THREE.Object3D.prototype.clone.call(this,a);return a};
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0});if(this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var c=0;c<this.geometry.morphTargets.length;c++)this.morphTargetInfluences.push(0),
this.morphTargetDictionary[this.geometry.morphTargets[c].name]=c}};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};
THREE.Mesh.prototype.clone=function(a){void 0===a&&(a=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);
THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix());if(b||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiply(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0;var c,d=this.children.length;for(c=0;c<d;c++)this.children[c].update(this.skinMatrix,b)};
THREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b);this.useVertexTexture=void 0!==c?c:!0;this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var d,e,f;if(void 0!==this.geometry.bones){for(a=0;a<this.geometry.bones.length;a++)c=this.geometry.bones[a],d=c.pos,e=c.rotq,f=c.scl,b=this.addBone(),b.name=c.name,b.position.set(d[0],d[1],d[2]),b.quaternion.set(e[0],e[1],e[2],e[3]),b.useQuaternion=!0,void 0!==f?b.scale.set(f[0],f[1],f[2]):b.scale.set(1,1,1);for(a=0;a<this.bones.length;a++)c=
this.geometry.bones[a],b=this.bones[a],-1===c.parent?this.add(b):this.bones[c.parent].add(b);a=this.bones.length;this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=a=256<a?64:64<a?32:16<a?16:8,this.boneMatrices=new Float32Array(4*this.boneTextureWidth*this.boneTextureHeight),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=
THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*a);this.pose()}};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.addBone=function(a){void 0===a&&(a=new THREE.Bone(this));this.bones.push(a);return a};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;a=0;for(var b=this.children.length;a<b;a++){var c=this.children[a];c instanceof THREE.Bone?c.update(this.identityMatrix,!1):c.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];a=0;for(b=this.bones.length;a<
b;a++)c=new THREE.Matrix4,c.getInverse(this.bones[a].skinMatrix),this.boneInverses.push(c)}a=0;for(b=this.bones.length;a<b;a++)THREE.SkinnedMesh.offsetMatrix.multiply(this.bones[a].skinMatrix,this.boneInverses[a]),THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,16*a);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)};
THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();Infinity!==c?b.multiplyScalar(c):b.set(1)}};THREE.SkinnedMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,a);return a};THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4;
THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b);this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};
THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};
THREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)(\d+)/,e=0,f=a.morphTargets.length;e<f;e++){var g=a.morphTargets[e].name.match(d);if(g&&1<g.length){g=g[1];c[g]||(c[g]={start:Infinity,end:-Infinity});var h=c[g];e<h.start&&(h.start=e);e>h.end&&(h.end=e);b||(b=g)}}a.firstAnimation=b};
THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[a]={start:b,end:c}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=1E3*((c.end-c.start)/b),this.time=0):console.warn("animation["+a+"] undefined")};
THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);a!==this.currentKeyframe&&
(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a);b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};
THREE.MorphAnimMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.MorphAnimMesh(this.geometry,this.material));a.duration=this.duration;a.mirroredLoop=this.mirroredLoop;a.time=this.time;a.lastKeyframe=this.lastKeyframe;a.currentKeyframe=this.currentKeyframe;a.direction=this.direction;a.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,a);return a};THREE.Ribbon=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b};THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype);
THREE.Ribbon.prototype.clone=function(a){void 0===a&&(a=new THREE.Ribbon(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0);b=Math.abs(b);for(var c=0;c<this.LODs.length&&!(b<this.LODs[c].visibleAtDistance);c++);this.LODs.splice(c,0,{visibleAtDistance:b,object3D:a});this.add(a)};
THREE.LOD.prototype.update=function(a){if(1<this.LODs.length){a.matrixWorldInverse.getInverse(a.matrixWorld);a=a.matrixWorldInverse;a=-(a.elements[2]*this.matrixWorld.elements[12]+a.elements[6]*this.matrixWorld.elements[13]+a.elements[10]*this.matrixWorld.elements[14]+a.elements[14]);this.LODs[0].object3D.visible=!0;for(var b=1;b<this.LODs.length;b++)if(a>=this.LODs[b].visibleAtDistance)this.LODs[b-1].object3D.visible=!1,this.LODs[b].object3D.visible=!0;else break;for(;b<this.LODs.length;b++)this.LODs[b].object3D.visible=
!1}};THREE.LOD.prototype.clone=function(){};
THREE.Sprite=function(a){THREE.Object3D.call(this);this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.map=void 0!==a.map?a.map:new THREE.Texture;this.blending=void 0!==a.blending?a.blending:THREE.NormalBlending;this.blendSrc=void 0!==a.blendSrc?a.blendSrc:THREE.SrcAlphaFactor;this.blendDst=void 0!==a.blendDst?a.blendDst:THREE.OneMinusSrcAlphaFactor;this.blendEquation=void 0!==a.blendEquation?a.blendEquation:THREE.AddEquation;this.useScreenCoordinates=void 0!==a.useScreenCoordinates?
a.useScreenCoordinates:!0;this.mergeWith3D=void 0!==a.mergeWith3D?a.mergeWith3D:!this.useScreenCoordinates;this.affectedByDistance=void 0!==a.affectedByDistance?a.affectedByDistance:!this.useScreenCoordinates;this.scaleByViewport=void 0!==a.scaleByViewport?a.scaleByViewport:!this.affectedByDistance;this.alignment=a.alignment instanceof THREE.Vector2?a.alignment:THREE.SpriteAlignment.center;this.rotation3d=this.rotation;this.rotation=0;this.opacity=1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=
new THREE.Vector2(1,1)};THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(1!==this.scale.x||1!==this.scale.y)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y);this.matrixWorldNeedsUpdate=!0};
THREE.Sprite.prototype.clone=function(a){void 0===a&&(a=new THREE.Sprite({}));a.color.copy(this.color);a.map=this.map;a.blending=this.blending;a.useScreenCoordinates=this.useScreenCoordinates;a.mergeWith3D=this.mergeWith3D;a.affectedByDistance=this.affectedByDistance;a.scaleByViewport=this.scaleByViewport;a.alignment=this.alignment;a.rotation3d.copy(this.rotation3d);a.rotation=this.rotation;a.opacity=this.opacity;a.uvOffset.copy(this.uvOffset);a.uvScale.copy(this.uvScale);THREE.Object3D.prototype.clone.call(this,
a);return a};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);
THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=!1;this.__objects=[];this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);
THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light)-1===this.__lights.indexOf(a)&&this.__lights.push(a),a.target&&void 0===a.target.parent&&this.add(a.target);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&-1===this.__objects.indexOf(a)){this.__objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);-1!==b&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.__addObject(a.children[b])};
THREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);-1!==b&&this.__lights.splice(b,1)}else a instanceof THREE.Camera||(b=this.__objects.indexOf(a),-1!==b&&(this.__objects.splice(b,1),this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),-1!==b&&this.__objectsAdded.splice(b,1)));for(b=0;b<a.children.length;b++)this.__removeObject(a.children[b])};
THREE.Fog=function(a,b,c){this.color=new THREE.Color(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};
THREE.CanvasRenderer=function(a){function b(a){B!==a&&(B=s.globalAlpha=a)}function c(a){w!==a&&(a===THREE.NormalBlending?s.globalCompositeOperation="source-over":a===THREE.AdditiveBlending?s.globalCompositeOperation="lighter":a===THREE.SubtractiveBlending&&(s.globalCompositeOperation="darker"),w=a)}function d(a){t!==a&&(t=s.strokeStyle=a)}function e(a){D!==a&&(D=s.fillStyle=a)}console.log("THREE.CanvasRenderer",THREE.REVISION);a=a||{};var f=this,g,h,j,k=new THREE.Projector,m=void 0!==a.canvas?a.canvas:
document.createElement("canvas"),p,n,r,q,s=m.getContext("2d"),u=new THREE.Color(0),v=0,B=1,w=0,t=null,D=null,C=null,x=null,z=null,F,E,I,L,J=new THREE.RenderableVertex,O=new THREE.RenderableVertex,M,H,K,N,T,ba,$,P,ga,S,ta,oa,Q=new THREE.Color,ha=new THREE.Color,Y=new THREE.Color,X=new THREE.Color,ka=new THREE.Color,aa=new THREE.Color,ea=new THREE.Color,Ja={},Sa={},La,Xa,qa,Ya,lb,Ua,hb,sb,Sb,gb,cb=new THREE.Rectangle,Ma=new THREE.Rectangle,za=new THREE.Rectangle,zb=!1,Ga=new THREE.Color,tb=new THREE.Color,
ib=new THREE.Color,ua=new THREE.Vector3,jb,bb,Za,Ha,Ab,l;a=16;jb=document.createElement("canvas");jb.width=jb.height=2;bb=jb.getContext("2d");bb.fillStyle="rgba(0,0,0,1)";bb.fillRect(0,0,2,2);Za=bb.getImageData(0,0,2,2);Ha=Za.data;Ab=document.createElement("canvas");Ab.width=Ab.height=a;l=Ab.getContext("2d");l.translate(-a/2,-a/2);l.scale(a,a);a--;this.domElement=m;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.setSize=function(a,b){p=a;n=b;r=Math.floor(p/
2);q=Math.floor(n/2);m.width=p;m.height=n;cb.set(-r,-q,r,q);Ma.set(-r,-q,r,q);B=1;w=0;z=x=C=D=t=null};this.setClearColor=function(a,b){u.copy(a);v=void 0!==b?b:1;Ma.set(-r,-q,r,q)};this.setClearColorHex=function(a,b){u.setHex(a);v=void 0!==b?b:1;Ma.set(-r,-q,r,q)};this.getMaxAnisotropy=function(){return 0};this.clear=function(){s.setTransform(1,0,0,-1,r,q);!1===Ma.isEmpty()&&(Ma.minSelf(cb),Ma.inflate(2),1>v&&s.clearRect(Math.floor(Ma.getX()),Math.floor(Ma.getY()),Math.floor(Ma.getWidth()),Math.floor(Ma.getHeight())),
0<v&&(c(THREE.NormalBlending),b(1),e("rgba("+Math.floor(255*u.r)+","+Math.floor(255*u.g)+","+Math.floor(255*u.b)+","+v+")"),s.fillRect(Math.floor(Ma.getX()),Math.floor(Ma.getY()),Math.floor(Ma.getWidth()),Math.floor(Ma.getHeight()))),Ma.empty())};this.render=function(a,m){function p(a,b,c){for(var d=0,e=j.length;d<e;d++){var f=j[d],g=f.color;if(f instanceof THREE.DirectionalLight){var h=f.matrixWorld.getPosition().normalize(),l=b.dot(h);0>=l||(l*=f.intensity,c.r+=g.r*l,c.g+=g.g*l,c.b+=g.b*l)}else f instanceof
THREE.PointLight&&(h=f.matrixWorld.getPosition(),l=b.dot(ua.sub(h,a).normalize()),0>=l||(l*=0==f.distance?1:1-Math.min(a.distanceTo(h)/f.distance,1),0!=l&&(l*=f.intensity,c.r+=g.r*l,c.g+=g.g*l,c.b+=g.b*l)))}}function n(a,d,e,g,h,l,j,k){f.info.render.vertices+=3;f.info.render.faces++;b(k.opacity);c(k.blending);M=a.positionScreen.x;H=a.positionScreen.y;K=d.positionScreen.x;N=d.positionScreen.y;T=e.positionScreen.x;ba=e.positionScreen.y;u(M,H,K,N,T,ba);(k instanceof THREE.MeshLambertMaterial||k instanceof
THREE.MeshPhongMaterial)&&null===k.map&&null===k.map?(aa.copy(k.color),ea.copy(k.emissive),k.vertexColors===THREE.FaceColors&&(aa.r*=j.color.r,aa.g*=j.color.g,aa.b*=j.color.b),!0===zb?!1===k.wireframe&&k.shading==THREE.SmoothShading&&3==j.vertexNormalsLength?(ha.r=Y.r=X.r=Ga.r,ha.g=Y.g=X.g=Ga.g,ha.b=Y.b=X.b=Ga.b,p(j.v1.positionWorld,j.vertexNormalsWorld[0],ha),p(j.v2.positionWorld,j.vertexNormalsWorld[1],Y),p(j.v3.positionWorld,j.vertexNormalsWorld[2],X),ha.r=ha.r*aa.r+ea.r,ha.g=ha.g*aa.g+ea.g,ha.b=
ha.b*aa.b+ea.b,Y.r=Y.r*aa.r+ea.r,Y.g=Y.g*aa.g+ea.g,Y.b=Y.b*aa.b+ea.b,X.r=X.r*aa.r+ea.r,X.g=X.g*aa.g+ea.g,X.b=X.b*aa.b+ea.b,ka.r=0.5*(Y.r+X.r),ka.g=0.5*(Y.g+X.g),ka.b=0.5*(Y.b+X.b),qa=Gc(ha,Y,X,ka),jc(M,H,K,N,T,ba,0,0,1,0,0,1,qa)):(Q.r=Ga.r,Q.g=Ga.g,Q.b=Ga.b,p(j.centroidWorld,j.normalWorld,Q),Q.r=Q.r*aa.r+ea.r,Q.g=Q.g*aa.g+ea.g,Q.b=Q.b*aa.b+ea.b,!0===k.wireframe?v(Q,k.wireframeLinewidth,k.wireframeLinecap,k.wireframeLinejoin):w(Q)):!0===k.wireframe?v(k.color,k.wireframeLinewidth,k.wireframeLinecap,
k.wireframeLinejoin):w(k.color)):k instanceof THREE.MeshBasicMaterial||k instanceof THREE.MeshLambertMaterial||k instanceof THREE.MeshPhongMaterial?null!==k.map?k.map.mapping instanceof THREE.UVMapping&&(Ya=j.uvs[0],Ea(M,H,K,N,T,ba,Ya[g].u,Ya[g].v,Ya[h].u,Ya[h].v,Ya[l].u,Ya[l].v,k.map)):null!==k.envMap?k.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(a=m.matrixWorldInverse,ua.copy(j.vertexNormalsWorld[g]),lb=0.5*(ua.x*a.elements[0]+ua.y*a.elements[4]+ua.z*a.elements[8])+0.5,Ua=0.5*(ua.x*
a.elements[1]+ua.y*a.elements[5]+ua.z*a.elements[9])+0.5,ua.copy(j.vertexNormalsWorld[h]),hb=0.5*(ua.x*a.elements[0]+ua.y*a.elements[4]+ua.z*a.elements[8])+0.5,sb=0.5*(ua.x*a.elements[1]+ua.y*a.elements[5]+ua.z*a.elements[9])+0.5,ua.copy(j.vertexNormalsWorld[l]),Sb=0.5*(ua.x*a.elements[0]+ua.y*a.elements[4]+ua.z*a.elements[8])+0.5,gb=0.5*(ua.x*a.elements[1]+ua.y*a.elements[5]+ua.z*a.elements[9])+0.5,Ea(M,H,K,N,T,ba,lb,Ua,hb,sb,Sb,gb,k.envMap)):(Q.copy(k.color),k.vertexColors===THREE.FaceColors&&(Q.r*=
j.color.r,Q.g*=j.color.g,Q.b*=j.color.b),!0===k.wireframe?v(Q,k.wireframeLinewidth,k.wireframeLinecap,k.wireframeLinejoin):w(Q)):k instanceof THREE.MeshDepthMaterial?(La=m.near,Xa=m.far,ha.r=ha.g=ha.b=1-wb(a.positionScreen.z,La,Xa),Y.r=Y.g=Y.b=1-wb(d.positionScreen.z,La,Xa),X.r=X.g=X.b=1-wb(e.positionScreen.z,La,Xa),ka.r=0.5*(Y.r+X.r),ka.g=0.5*(Y.g+X.g),ka.b=0.5*(Y.b+X.b),qa=Gc(ha,Y,X,ka),jc(M,H,K,N,T,ba,0,0,1,0,0,1,qa)):k instanceof THREE.MeshNormalMaterial&&(Q.r=mc(j.normalWorld.x),Q.g=mc(j.normalWorld.y),
Q.b=mc(j.normalWorld.z),!0===k.wireframe?v(Q,k.wireframeLinewidth,k.wireframeLinecap,k.wireframeLinejoin):w(Q))}function u(a,b,c,d,e,f){s.beginPath();s.moveTo(a,b);s.lineTo(c,d);s.lineTo(e,f);s.closePath()}function t(a,b,c,d,e,f,g,h){s.beginPath();s.moveTo(a,b);s.lineTo(c,d);s.lineTo(e,f);s.lineTo(g,h);s.closePath()}function v(a,b,c,e){C!==b&&(C=s.lineWidth=b);x!==c&&(x=s.lineCap=c);z!==e&&(z=s.lineJoin=e);d(a.getContextStyle());s.stroke();za.inflate(2*b)}function w(a){e(a.getContextStyle());s.fill()}
function Ea(a,b,c,d,f,g,h,j,l,k,m,p,n){if(!(n instanceof THREE.DataTexture||void 0===n.image||0==n.image.width)){if(!0===n.needsUpdate){var Ea=n.wrapS==THREE.RepeatWrapping,q=n.wrapT==THREE.RepeatWrapping;Ja[n.id]=s.createPattern(n.image,!0===Ea&&!0===q?"repeat":!0===Ea&&!1===q?"repeat-x":!1===Ea&&!0===q?"repeat-y":"no-repeat");n.needsUpdate=!1}void 0===Ja[n.id]?e("rgba(0,0,0,1)"):e(Ja[n.id]);var Ea=n.offset.x/n.repeat.x,q=n.offset.y/n.repeat.y,r=n.image.width*n.repeat.x,wb=n.image.height*n.repeat.y;
h=(h+Ea)*r;j=(1-j+q)*wb;c-=a;d-=b;f-=a;g-=b;l=(l+Ea)*r-h;k=(1-k+q)*wb-j;m=(m+Ea)*r-h;p=(1-p+q)*wb-j;Ea=l*p-m*k;0===Ea?(void 0===Sa[n.id]&&(b=document.createElement("canvas"),b.width=n.image.width,b.height=n.image.height,b=b.getContext("2d"),b.drawImage(n.image,0,0),Sa[n.id]=b.getImageData(0,0,n.image.width,n.image.height).data),b=Sa[n.id],h=4*(Math.floor(h)+Math.floor(j)*n.image.width),Q.setRGB(b[h]/255,b[h+1]/255,b[h+2]/255),w(Q)):(Ea=1/Ea,n=(p*c-k*f)*Ea,k=(p*d-k*g)*Ea,c=(l*f-m*c)*Ea,d=(l*g-m*d)*
Ea,a=a-n*h-c*j,h=b-k*h-d*j,s.save(),s.transform(n,k,c,d,a,h),s.fill(),s.restore())}}function jc(a,b,c,d,e,f,g,h,j,l,k,m,n){var p,Ea;p=n.width-1;Ea=n.height-1;g*=p;h*=Ea;c-=a;d-=b;e-=a;f-=b;j=j*p-g;l=l*Ea-h;k=k*p-g;m=m*Ea-h;Ea=1/(j*m-k*l);p=(m*c-l*e)*Ea;l=(m*d-l*f)*Ea;c=(j*e-k*c)*Ea;d=(j*f-k*d)*Ea;a=a-p*g-c*h;b=b-l*g-d*h;s.save();s.transform(p,l,c,d,a,b);s.clip();s.drawImage(n,0,0);s.restore()}function Gc(a,b,c,d){Ha[0]=255*a.r|0;Ha[1]=255*a.g|0;Ha[2]=255*a.b|0;Ha[4]=255*b.r|0;Ha[5]=255*b.g|0;Ha[6]=
255*b.b|0;Ha[8]=255*c.r|0;Ha[9]=255*c.g|0;Ha[10]=255*c.b|0;Ha[12]=255*d.r|0;Ha[13]=255*d.g|0;Ha[14]=255*d.b|0;bb.putImageData(Za,0,0);l.drawImage(jb,0,0);return Ab}function wb(a,b,c){a=(a-b)/(c-b);return a*a*(3-2*a)}function mc(a){a=0.5*(a+1);return 0>a?0:1<a?1:a}function Zb(a,b){var c=b.x-a.x,d=b.y-a.y,e=c*c+d*d;0!==e&&(e=1/Math.sqrt(e),c*=e,d*=e,b.x+=c,b.y+=d,a.x-=c,a.y-=d)}if(!1===m instanceof THREE.Camera)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");
else{var B,D,la,ca;!0===this.autoClear?this.clear():s.setTransform(1,0,0,-1,r,q);f.info.render.vertices=0;f.info.render.faces=0;g=k.projectScene(a,m,this.sortObjects,this.sortElements);h=g.elements;j=g.lights;zb=0<j.length;if(!0===zb){Ga.setRGB(0,0,0);tb.setRGB(0,0,0);ib.setRGB(0,0,0);B=0;for(D=j.length;B<D;B++){ca=j[B];var ma=ca.color;ca instanceof THREE.AmbientLight?(Ga.r+=ma.r,Ga.g+=ma.g,Ga.b+=ma.b):ca instanceof THREE.DirectionalLight?(tb.r+=ma.r,tb.g+=ma.g,tb.b+=ma.b):ca instanceof THREE.PointLight&&
(ib.r+=ma.r,ib.g+=ma.g,ib.b+=ma.b)}}B=0;for(D=h.length;B<D;B++)if(la=h[B],ca=la.material,!(void 0===ca||!1===ca.visible)){za.empty();if(la instanceof THREE.RenderableParticle){F=la;F.x*=r;F.y*=q;var ma=F,$a=la;b(ca.opacity);c(ca.blending);var ub=void 0,vb=void 0,mb=void 0,nb=void 0,nc=la=void 0,Wc=void 0;ca instanceof THREE.ParticleBasicMaterial?null===ca.map?(mb=$a.object.scale.x,nb=$a.object.scale.y,mb*=$a.scale.x*r,nb*=$a.scale.y*q,za.set(ma.x-mb,ma.y-nb,ma.x+mb,ma.y+nb),!1!==cb.intersects(za)&&
(e(ca.color.getContextStyle()),s.save(),s.translate(ma.x,ma.y),s.rotate(-$a.rotation),s.scale(mb,nb),s.fillRect(-1,-1,2,2),s.restore())):(la=ca.map.image,nc=la.width>>1,Wc=la.height>>1,mb=$a.scale.x*r,nb=$a.scale.y*q,ub=mb*nc,vb=nb*Wc,za.set(ma.x-ub,ma.y-vb,ma.x+ub,ma.y+vb),!1!==cb.intersects(za)&&(s.save(),s.translate(ma.x,ma.y),s.rotate(-$a.rotation),s.scale(mb,-nb),s.translate(-nc,-Wc),s.drawImage(la,0,0),s.restore())):ca instanceof THREE.ParticleCanvasMaterial&&(ub=$a.scale.x*r,vb=$a.scale.y*
q,za.set(ma.x-ub,ma.y-vb,ma.x+ub,ma.y+vb),!1!==cb.intersects(za)&&(d(ca.color.getContextStyle()),e(ca.color.getContextStyle()),s.save(),s.translate(ma.x,ma.y),s.rotate(-$a.rotation),s.scale(ub,vb),ca.program(s),s.restore()))}else la instanceof THREE.RenderableLine?(F=la.v1,E=la.v2,F.positionScreen.x*=r,F.positionScreen.y*=q,E.positionScreen.x*=r,E.positionScreen.y*=q,za.addPoint(F.positionScreen.x,F.positionScreen.y),za.addPoint(E.positionScreen.x,E.positionScreen.y),!0===cb.intersects(za)&&(ma=F,
$a=E,b(ca.opacity),c(ca.blending),s.beginPath(),s.moveTo(ma.positionScreen.x,ma.positionScreen.y),s.lineTo($a.positionScreen.x,$a.positionScreen.y),ca instanceof THREE.LineBasicMaterial&&(ma=ca.linewidth,C!==ma&&(C=s.lineWidth=ma),ma=ca.linecap,x!==ma&&(x=s.lineCap=ma),ma=ca.linejoin,z!==ma&&(z=s.lineJoin=ma),d(ca.color.getContextStyle()),s.stroke(),za.inflate(2*ca.linewidth)))):la instanceof THREE.RenderableFace3?(F=la.v1,E=la.v2,I=la.v3,F.positionScreen.x*=r,F.positionScreen.y*=q,E.positionScreen.x*=
r,E.positionScreen.y*=q,I.positionScreen.x*=r,I.positionScreen.y*=q,!0===ca.overdraw&&(Zb(F.positionScreen,E.positionScreen),Zb(E.positionScreen,I.positionScreen),Zb(I.positionScreen,F.positionScreen)),za.add3Points(F.positionScreen.x,F.positionScreen.y,E.positionScreen.x,E.positionScreen.y,I.positionScreen.x,I.positionScreen.y),!0===cb.intersects(za)&&n(F,E,I,0,1,2,la,ca,a)):la instanceof THREE.RenderableFace4&&(F=la.v1,E=la.v2,I=la.v3,L=la.v4,F.positionScreen.x*=r,F.positionScreen.y*=q,E.positionScreen.x*=
r,E.positionScreen.y*=q,I.positionScreen.x*=r,I.positionScreen.y*=q,L.positionScreen.x*=r,L.positionScreen.y*=q,J.positionScreen.copy(E.positionScreen),O.positionScreen.copy(L.positionScreen),!0===ca.overdraw&&(Zb(F.positionScreen,E.positionScreen),Zb(E.positionScreen,L.positionScreen),Zb(L.positionScreen,F.positionScreen),Zb(I.positionScreen,J.positionScreen),Zb(I.positionScreen,O.positionScreen)),za.addPoint(F.positionScreen.x,F.positionScreen.y),za.addPoint(E.positionScreen.x,E.positionScreen.y),
za.addPoint(I.positionScreen.x,I.positionScreen.y),za.addPoint(L.positionScreen.x,L.positionScreen.y),!0===cb.intersects(za)&&(ma=F,$a=E,ub=I,vb=L,mb=J,nb=O,nc=a,f.info.render.vertices+=4,f.info.render.faces++,b(ca.opacity),c(ca.blending),void 0!==ca.map&&null!==ca.map||void 0!==ca.envMap&&null!==ca.envMap?(n(ma,$a,vb,0,1,3,la,ca,nc),n(mb,ub,nb,1,2,3,la,ca,nc)):(M=ma.positionScreen.x,H=ma.positionScreen.y,K=$a.positionScreen.x,N=$a.positionScreen.y,T=ub.positionScreen.x,ba=ub.positionScreen.y,$=vb.positionScreen.x,
P=vb.positionScreen.y,ga=mb.positionScreen.x,S=mb.positionScreen.y,ta=nb.positionScreen.x,oa=nb.positionScreen.y,ca instanceof THREE.MeshLambertMaterial||ca instanceof THREE.MeshPhongMaterial?(aa.copy(ca.color),ea.copy(ca.emissive),ca.vertexColors===THREE.FaceColors&&(aa.r*=la.color.r,aa.g*=la.color.g,aa.b*=la.color.b),!0===zb?!1===ca.wireframe&&ca.shading==THREE.SmoothShading&&4==la.vertexNormalsLength?(ha.r=Y.r=X.r=ka.r=Ga.r,ha.g=Y.g=X.g=ka.g=Ga.g,ha.b=Y.b=X.b=ka.b=Ga.b,p(la.v1.positionWorld,la.vertexNormalsWorld[0],
ha),p(la.v2.positionWorld,la.vertexNormalsWorld[1],Y),p(la.v4.positionWorld,la.vertexNormalsWorld[3],X),p(la.v3.positionWorld,la.vertexNormalsWorld[2],ka),ha.r=ha.r*aa.r+ea.r,ha.g=ha.g*aa.g+ea.g,ha.b=ha.b*aa.b+ea.b,Y.r=Y.r*aa.r+ea.r,Y.g=Y.g*aa.g+ea.g,Y.b=Y.b*aa.b+ea.b,X.r=X.r*aa.r+ea.r,X.g=X.g*aa.g+ea.g,X.b=X.b*aa.b+ea.b,ka.r=ka.r*aa.r+ea.r,ka.g=ka.g*aa.g+ea.g,ka.b=ka.b*aa.b+ea.b,qa=Gc(ha,Y,X,ka),u(M,H,K,N,$,P),jc(M,H,K,N,$,P,0,0,1,0,0,1,qa),u(ga,S,T,ba,ta,oa),jc(ga,S,T,ba,ta,oa,1,0,1,1,0,1,qa)):
(Q.r=Ga.r,Q.g=Ga.g,Q.b=Ga.b,p(la.centroidWorld,la.normalWorld,Q),Q.r=Q.r*aa.r+ea.r,Q.g=Q.g*aa.g+ea.g,Q.b=Q.b*aa.b+ea.b,t(M,H,K,N,T,ba,$,P),!0===ca.wireframe?v(Q,ca.wireframeLinewidth,ca.wireframeLinecap,ca.wireframeLinejoin):w(Q)):(Q.r=aa.r+ea.r,Q.g=aa.g+ea.g,Q.b=aa.b+ea.b,t(M,H,K,N,T,ba,$,P),!0===ca.wireframe?v(Q,ca.wireframeLinewidth,ca.wireframeLinecap,ca.wireframeLinejoin):w(Q))):ca instanceof THREE.MeshBasicMaterial?(Q.copy(ca.color),ca.vertexColors===THREE.FaceColors&&(Q.r*=la.color.r,Q.g*=
la.color.g,Q.b*=la.color.b),t(M,H,K,N,T,ba,$,P),!0===ca.wireframe?v(Q,ca.wireframeLinewidth,ca.wireframeLinecap,ca.wireframeLinejoin):w(Q)):ca instanceof THREE.MeshNormalMaterial?(Q.r=mc(la.normalWorld.x),Q.g=mc(la.normalWorld.y),Q.b=mc(la.normalWorld.z),t(M,H,K,N,T,ba,$,P),!0===ca.wireframe?v(Q,ca.wireframeLinewidth,ca.wireframeLinecap,ca.wireframeLinejoin):w(Q)):ca instanceof THREE.MeshDepthMaterial&&(La=m.near,Xa=m.far,ha.r=ha.g=ha.b=1-wb(ma.positionScreen.z,La,Xa),Y.r=Y.g=Y.b=1-wb($a.positionScreen.z,
La,Xa),X.r=X.g=X.b=1-wb(vb.positionScreen.z,La,Xa),ka.r=ka.g=ka.b=1-wb(ub.positionScreen.z,La,Xa),qa=Gc(ha,Y,X,ka),u(M,H,K,N,$,P),jc(M,H,K,N,$,P,0,0,1,0,0,1,qa),u(ga,S,T,ba,ta,oa),jc(ga,S,T,ba,ta,oa,1,0,1,1,0,1,qa)))));Ma.addRectangle(za)}s.setTransform(1,0,0,1,0,0)}}};
THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",
envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 mPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 mPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 mPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",
envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 nWorld = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( map, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",
lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",
normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",
specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",
lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nlVector = normalize( lVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - mPosition.xyz ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",
lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",
lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = mPosition.xyz;\n#endif",
lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -viewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\nvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, N_BONE_PIXEL_X );\nfloat y = floor( j / N_BONE_PIXEL_X );\nconst float dx = 1.0 / N_BONE_PIXEL_X;\nconst float dy = 1.0 / N_BONE_PIXEL_Y;\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",
skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",
morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",
default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",
skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix \t+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",
shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#ifdef SHADOWMAP_SOFT\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * mPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};
THREE.UniformsUtils={merge:function(a){var b,c,d,e={};for(b=0;b<a.length;b++)for(c in d=this.clone(a[b]),d)e[c]=d[c];return e},clone:function(a){var b,c,d,e={};for(b in a)for(c in e[b]={},a[b])d=a[b][c],e[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d;return e}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",
value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightPosition:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",
value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngle:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",
value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",
value:1}},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalMatrix * normal;\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,
"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,
THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,
THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,
THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,
"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,
THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,
THREE.ShaderChunk.defaultnormal_vertex,"vNormal = transformedNormal;",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",
THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,
THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,
THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",
THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};
THREE.WebGLRenderer=function(a){function b(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var e in d.attributes){var f=d.attributes[e];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var g=1;"v2"===f.type?g=2:"v3"===f.type?g=3:"v4"===f.type?g=4:"c"===f.type&&(g=3);f.size=g;f.array=new Float32Array(c*g);f.buffer=l.createBuffer();f.buffer.belongsToAttribute=e;f.needsUpdate=!0}a.__webglCustomAttributesList.push(f)}}}
function c(a,b){if(a.material&&!(a.material instanceof THREE.MeshFaceMaterial))return a.material;if(0<=b.materialIndex)return a.geometry.materials[b.materialIndex]}function d(a){return a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial?!1:a&&void 0!==a.shading&&a.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function e(a){return a.map||a.lightMap||a.bumpMap||a.normalMap||a.specularMap||a instanceof THREE.ShaderMaterial?!0:!1}function f(a){var b,
c,d;for(b in a.attributes)d="index"===b?l.ELEMENT_ARRAY_BUFFER:l.ARRAY_BUFFER,c=a.attributes[b],c.buffer=l.createBuffer(),l.bindBuffer(d,c.buffer),l.bufferData(d,c.array,l.STATIC_DRAW)}function g(a,b,c){var d,e,f,g,h=a.vertices;g=h.length;var j=a.colors,k=j.length,m=a.__vertexArray,n=a.__colorArray,p=a.__sortArray,q=a.verticesNeedUpdate,r=a.colorsNeedUpdate,s=a.__webglCustomAttributesList;if(c.sortParticles){jb.copy(ua);jb.multiplySelf(c.matrixWorld);for(d=0;d<g;d++)e=h[d],bb.copy(e),jb.multiplyVector3(bb),
p[d]=[bb.z,d];p.sort(function(a,b){return b[0]-a[0]});for(d=0;d<g;d++)e=h[p[d][1]],f=3*d,m[f]=e.x,m[f+1]=e.y,m[f+2]=e.z;for(d=0;d<k;d++)f=3*d,e=j[p[d][1]],n[f]=e.r,n[f+1]=e.g,n[f+2]=e.b;if(s){j=0;for(k=s.length;j<k;j++)if(h=s[j],void 0===h.boundTo||"vertices"===h.boundTo)if(f=0,e=h.value.length,1===h.size)for(d=0;d<e;d++)g=p[d][1],h.array[d]=h.value[g];else if(2===h.size)for(d=0;d<e;d++)g=p[d][1],g=h.value[g],h.array[f]=g.x,h.array[f+1]=g.y,f+=2;else if(3===h.size)if("c"===h.type)for(d=0;d<e;d++)g=
p[d][1],g=h.value[g],h.array[f]=g.r,h.array[f+1]=g.g,h.array[f+2]=g.b,f+=3;else for(d=0;d<e;d++)g=p[d][1],g=h.value[g],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,f+=3;else if(4===h.size)for(d=0;d<e;d++)g=p[d][1],g=h.value[g],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,h.array[f+3]=g.w,f+=4}}else{if(q)for(d=0;d<g;d++)e=h[d],f=3*d,m[f]=e.x,m[f+1]=e.y,m[f+2]=e.z;if(r)for(d=0;d<k;d++)e=j[d],f=3*d,n[f]=e.r,n[f+1]=e.g,n[f+2]=e.b;if(s){j=0;for(k=s.length;j<k;j++)if(h=s[j],h.needsUpdate&&(void 0===
h.boundTo||"vertices"===h.boundTo))if(e=h.value.length,f=0,1===h.size)for(d=0;d<e;d++)h.array[d]=h.value[d];else if(2===h.size)for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.x,h.array[f+1]=g.y,f+=2;else if(3===h.size)if("c"===h.type)for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.r,h.array[f+1]=g.g,h.array[f+2]=g.b,f+=3;else for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,f+=3;else if(4===h.size)for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,h.array[f+
3]=g.w,f+=4}}if(q||c.sortParticles)l.bindBuffer(l.ARRAY_BUFFER,a.__webglVertexBuffer),l.bufferData(l.ARRAY_BUFFER,m,b);if(r||c.sortParticles)l.bindBuffer(l.ARRAY_BUFFER,a.__webglColorBuffer),l.bufferData(l.ARRAY_BUFFER,n,b);if(s){j=0;for(k=s.length;j<k;j++)if(h=s[j],h.needsUpdate||c.sortParticles)l.bindBuffer(l.ARRAY_BUFFER,h.buffer),l.bufferData(l.ARRAY_BUFFER,h.array,b)}}function h(a,b,c){var d=a.attributes,f=d.index,e=d.position,g=d.normal,h=d.uv,j=d.color,d=d.tangent;a.elementsNeedUpdate&&void 0!==
f&&(l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,f.buffer),l.bufferData(l.ELEMENT_ARRAY_BUFFER,f.array,b));a.verticesNeedUpdate&&void 0!==e&&(l.bindBuffer(l.ARRAY_BUFFER,e.buffer),l.bufferData(l.ARRAY_BUFFER,e.array,b));a.normalsNeedUpdate&&void 0!==g&&(l.bindBuffer(l.ARRAY_BUFFER,g.buffer),l.bufferData(l.ARRAY_BUFFER,g.array,b));a.uvsNeedUpdate&&void 0!==h&&(l.bindBuffer(l.ARRAY_BUFFER,h.buffer),l.bufferData(l.ARRAY_BUFFER,h.array,b));a.colorsNeedUpdate&&void 0!==j&&(l.bindBuffer(l.ARRAY_BUFFER,j.buffer),
l.bufferData(l.ARRAY_BUFFER,j.array,b));a.tangentsNeedUpdate&&void 0!==d&&(l.bindBuffer(l.ARRAY_BUFFER,d.buffer),l.bufferData(l.ARRAY_BUFFER,d.array,b));if(c)for(var k in a.attributes)delete a.attributes[k].array}function j(a,b){return b.z-a.z}function k(a,b){return b[1]-a[1]}function m(a,b,c){if(a.length)for(var d=0,f=a.length;d<f;d++)ka=Q=null,Y=X=Sa=Ja=Ua=lb=La=-1,Ha=!0,a[d].render(b,c,Ga,tb),ka=Q=null,Y=X=Sa=Ja=Ua=lb=La=-1,Ha=!0}function p(a,b,c,d,f,e,g,h){var j,l,k,m;b?(l=a.length-1,m=b=-1):
(l=0,b=a.length,m=1);for(var n=l;n!==b;n+=m)if(j=a[n],j.render){l=j.object;k=j.buffer;if(h)j=h;else{j=j[c];if(!j)continue;g&&S.setBlending(j.blending,j.blendEquation,j.blendSrc,j.blendDst);S.setDepthTest(j.depthTest);S.setDepthWrite(j.depthWrite);x(j.polygonOffset,j.polygonOffsetFactor,j.polygonOffsetUnits)}S.setMaterialFaces(j);k instanceof THREE.BufferGeometry?S.renderBufferDirect(d,f,e,j,k,l):S.renderBuffer(d,f,e,j,k,l)}}function n(a,b,c,d,f,e,g){for(var h,j,l=0,k=a.length;l<k;l++)if(h=a[l],j=
h.object,j.visible){if(g)h=g;else{h=h[b];if(!h)continue;e&&S.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst);S.setDepthTest(h.depthTest);S.setDepthWrite(h.depthWrite);x(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}S.renderImmediateObject(c,d,f,h,j)}}function r(a,b,c){a.push({buffer:b,object:c,opaque:null,transparent:null})}function q(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function s(a){for(var b in a.attributes)a.attributes[b].needsUpdate=
!1}function u(a,b){for(var c=a.length-1;0<=c;c--)a[c].object===b&&a.splice(c,1)}function v(a,b){for(var c=a.length-1;0<=c;c--)a[c]===b&&a.splice(c,1)}function B(a,b,c,d,f){ea=0;d.needsUpdate&&(d.program&&S.deallocateMaterial(d),S.initMaterial(d,b,c,f),d.needsUpdate=!1);d.morphTargets&&!f.__webglMorphTargetInfluences&&(f.__webglMorphTargetInfluences=new Float32Array(S.maxMorphTargets));var e=!1,g=d.program,h=g.uniforms,j=d.uniforms;g!==Q&&(l.useProgram(g),Q=g,e=!0);d.id!==Y&&(Y=d.id,e=!0);if(e||a!==
ka)l.uniformMatrix4fv(h.projectionMatrix,!1,a._projectionMatrixArray),a!==ka&&(ka=a);if(d.skinning)if(lc&&f.useVertexTexture){if(null!==h.boneTexture){var k=w();l.uniform1i(h.boneTexture,k);S.setTexture(f.boneTexture,k)}}else null!==h.boneGlobalMatrices&&l.uniformMatrix4fv(h.boneGlobalMatrices,!1,f.boneMatrices);if(e){c&&d.fog&&(j.fogColor.value=c.color,c instanceof THREE.Fog?(j.fogNear.value=c.near,j.fogFar.value=c.far):c instanceof THREE.FogExp2&&(j.fogDensity.value=c.density));if(d instanceof THREE.MeshPhongMaterial||
d instanceof THREE.MeshLambertMaterial||d.lights){if(Ha){var m=0,n=0,p=0,q,r,s,u,t=Ab,v=t.directional.colors,x=t.directional.positions,z=t.point.colors,B=t.point.positions,F=t.point.distances,L=t.spot.colors,I=t.spot.positions,K=t.spot.distances,M=t.spot.directions,H=t.spot.angles,N=t.spot.exponents,P=t.hemi.skyColors,X=t.hemi.groundColors,aa=t.hemi.positions,ha=0,T=0,ga=0,ba=0;c=q=s=s=r=0;for(e=b.length;c<e;c++)k=b[c],!k.onlyShadow&&k.visible&&(q=k.color,u=k.intensity,r=k.distance,k instanceof THREE.AmbientLight?
S.gammaInput?(m+=q.r*q.r,n+=q.g*q.g,p+=q.b*q.b):(m+=q.r,n+=q.g,p+=q.b):k instanceof THREE.DirectionalLight?(r=3*ha,S.gammaInput?D(v,r,q,u*u):C(v,r,q,u),Za.copy(k.matrixWorld.getPosition()),Za.subSelf(k.target.matrixWorld.getPosition()),Za.normalize(),x[r]=Za.x,x[r+1]=Za.y,x[r+2]=Za.z,ha+=1):k instanceof THREE.PointLight?(s=3*T,S.gammaInput?D(z,s,q,u*u):C(z,s,q,u),u=k.matrixWorld.getPosition(),B[s]=u.x,B[s+1]=u.y,B[s+2]=u.z,F[T]=r,T+=1):k instanceof THREE.SpotLight?(s=3*ga,S.gammaInput?D(L,s,q,u*u):
C(L,s,q,u),u=k.matrixWorld.getPosition(),I[s]=u.x,I[s+1]=u.y,I[s+2]=u.z,K[ga]=r,Za.copy(u),Za.subSelf(k.target.matrixWorld.getPosition()),Za.normalize(),M[s]=Za.x,M[s+1]=Za.y,M[s+2]=Za.z,H[ga]=Math.cos(k.angle),N[ga]=k.exponent,ga+=1):k instanceof THREE.HemisphereLight&&(r=k.color,s=k.groundColor,q=3*ba,S.gammaInput?(u*=u,D(P,q,r,u),D(X,q,s,u)):(C(P,q,r,u),C(X,q,s,u)),u=k.matrixWorld.getPosition(),aa[q]=u.x,aa[q+1]=u.y,aa[q+2]=u.z,ba+=1));c=3*ha;for(e=v.length;c<e;c++)v[c]=0;c=3*T;for(e=z.length;c<
e;c++)z[c]=0;c=3*ga;for(e=L.length;c<e;c++)L[c]=0;c=3*ba;for(e=P.length;c<e;c++)P[c]=0;c=3*ba;for(e=X.length;c<e;c++)X[c]=0;t.directional.length=ha;t.point.length=T;t.spot.length=ga;t.hemi.length=ba;t.ambient[0]=m;t.ambient[1]=n;t.ambient[2]=p;Ha=!1}c=Ab;j.ambientLightColor.value=c.ambient;j.directionalLightColor.value=c.directional.colors;j.directionalLightDirection.value=c.directional.positions;j.pointLightColor.value=c.point.colors;j.pointLightPosition.value=c.point.positions;j.pointLightDistance.value=
c.point.distances;j.spotLightColor.value=c.spot.colors;j.spotLightPosition.value=c.spot.positions;j.spotLightDistance.value=c.spot.distances;j.spotLightDirection.value=c.spot.directions;j.spotLightAngle.value=c.spot.angles;j.spotLightExponent.value=c.spot.exponents;j.hemisphereLightSkyColor.value=c.hemi.skyColors;j.hemisphereLightGroundColor.value=c.hemi.groundColors;j.hemisphereLightPosition.value=c.hemi.positions}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof
THREE.MeshPhongMaterial){j.opacity.value=d.opacity;S.gammaInput?j.diffuse.value.copyGammaToLinear(d.color):j.diffuse.value=d.color;j.map.value=d.map;j.lightMap.value=d.lightMap;j.specularMap.value=d.specularMap;d.bumpMap&&(j.bumpMap.value=d.bumpMap,j.bumpScale.value=d.bumpScale);d.normalMap&&(j.normalMap.value=d.normalMap,j.normalScale.value.copy(d.normalScale));var $;d.map?$=d.map:d.specularMap?$=d.specularMap:d.normalMap?$=d.normalMap:d.bumpMap&&($=d.bumpMap);void 0!==$&&(c=$.offset,$=$.repeat,
j.offsetRepeat.value.set(c.x,c.y,$.x,$.y));j.envMap.value=d.envMap;j.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;j.reflectivity.value=d.reflectivity;j.refractionRatio.value=d.refractionRatio;j.combine.value=d.combine;j.useRefract.value=d.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping}d instanceof THREE.LineBasicMaterial?(j.diffuse.value=d.color,j.opacity.value=d.opacity):d instanceof THREE.ParticleBasicMaterial?(j.psColor.value=d.color,j.opacity.value=d.opacity,
j.size.value=d.size,j.scale.value=O.height/2,j.map.value=d.map):d instanceof THREE.MeshPhongMaterial?(j.shininess.value=d.shininess,S.gammaInput?(j.ambient.value.copyGammaToLinear(d.ambient),j.emissive.value.copyGammaToLinear(d.emissive),j.specular.value.copyGammaToLinear(d.specular)):(j.ambient.value=d.ambient,j.emissive.value=d.emissive,j.specular.value=d.specular),d.wrapAround&&j.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshLambertMaterial?(S.gammaInput?(j.ambient.value.copyGammaToLinear(d.ambient),
j.emissive.value.copyGammaToLinear(d.emissive)):(j.ambient.value=d.ambient,j.emissive.value=d.emissive),d.wrapAround&&j.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshDepthMaterial?(j.mNear.value=a.near,j.mFar.value=a.far,j.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(j.opacity.value=d.opacity);if(f.receiveShadow&&!d._shadowPass&&j.shadowMatrix){c=$=0;for(e=b.length;c<e;c++)if(k=b[c],k.castShadow&&(k instanceof THREE.SpotLight||k instanceof THREE.DirectionalLight&&!k.shadowCascade))j.shadowMap.value[$]=
k.shadowMap,j.shadowMapSize.value[$]=k.shadowMapSize,j.shadowMatrix.value[$]=k.shadowMatrix,j.shadowDarkness.value[$]=k.shadowDarkness,j.shadowBias.value[$]=k.shadowBias,$++}b=d.uniformsList;j=0;for($=b.length;j<$;j++)if(e=g.uniforms[b[j][1]])if(c=b[j][0],m=c.type,k=c.value,"i"===m)l.uniform1i(e,k);else if("f"===m)l.uniform1f(e,k);else if("v2"===m)l.uniform2f(e,k.x,k.y);else if("v3"===m)l.uniform3f(e,k.x,k.y,k.z);else if("v4"===m)l.uniform4f(e,k.x,k.y,k.z,k.w);else if("c"===m)l.uniform3f(e,k.r,k.g,
k.b);else if("iv1"===m)l.uniform1iv(e,k);else if("iv"===m)l.uniform3iv(e,k);else if("fv1"===m)l.uniform1fv(e,k);else if("fv"===m)l.uniform3fv(e,k);else if("v2v"===m){void 0===c._array&&(c._array=new Float32Array(2*k.length));m=0;for(n=k.length;m<n;m++)p=2*m,c._array[p]=k[m].x,c._array[p+1]=k[m].y;l.uniform2fv(e,c._array)}else if("v3v"===m){void 0===c._array&&(c._array=new Float32Array(3*k.length));m=0;for(n=k.length;m<n;m++)p=3*m,c._array[p]=k[m].x,c._array[p+1]=k[m].y,c._array[p+2]=k[m].z;l.uniform3fv(e,
c._array)}else if("v4v"===m){void 0===c._array&&(c._array=new Float32Array(4*k.length));m=0;for(n=k.length;m<n;m++)p=4*m,c._array[p]=k[m].x,c._array[p+1]=k[m].y,c._array[p+2]=k[m].z,c._array[p+3]=k[m].w;l.uniform4fv(e,c._array)}else if("m4"===m)void 0===c._array&&(c._array=new Float32Array(16)),k.flattenToArray(c._array),l.uniformMatrix4fv(e,!1,c._array);else if("m4v"===m){void 0===c._array&&(c._array=new Float32Array(16*k.length));m=0;for(n=k.length;m<n;m++)k[m].flattenToArrayOffset(c._array,16*
m);l.uniformMatrix4fv(e,!1,c._array)}else if("t"===m){if(p=k,k=w(),l.uniform1i(e,k),p)if(p.image instanceof Array&&6===p.image.length){if(c=p,e=k,6===c.image.length)if(c.needsUpdate){c.image.__webglTextureCube||(c.image.__webglTextureCube=l.createTexture());l.activeTexture(l.TEXTURE0+e);l.bindTexture(l.TEXTURE_CUBE_MAP,c.image.__webglTextureCube);l.pixelStorei(l.UNPACK_FLIP_Y_WEBGL,c.flipY);e=c instanceof THREE.CompressedTexture;k=[];for(m=0;6>m;m++)S.autoScaleCubemaps&&!e?(n=k,p=m,t=c.image[m],x=
Vc,t.width<=x&&t.height<=x||(z=Math.max(t.width,t.height),v=Math.floor(t.width*x/z),x=Math.floor(t.height*x/z),z=document.createElement("canvas"),z.width=v,z.height=x,z.getContext("2d").drawImage(t,0,0,t.width,t.height,0,0,v,x),t=z),n[p]=t):k[m]=c.image[m];m=k[0];n=0===(m.width&m.width-1)&&0===(m.height&m.height-1);p=J(c.format);t=J(c.type);E(l.TEXTURE_CUBE_MAP,c,n);for(m=0;6>m;m++)if(e){x=k[m].mipmaps;z=0;for(B=x.length;z<B;z++)v=x[z],l.compressedTexImage2D(l.TEXTURE_CUBE_MAP_POSITIVE_X+m,z,p,v.width,
v.height,0,v.data)}else l.texImage2D(l.TEXTURE_CUBE_MAP_POSITIVE_X+m,0,p,p,t,k[m]);c.generateMipmaps&&n&&l.generateMipmap(l.TEXTURE_CUBE_MAP);c.needsUpdate=!1;if(c.onUpdate)c.onUpdate()}else l.activeTexture(l.TEXTURE0+e),l.bindTexture(l.TEXTURE_CUBE_MAP,c.image.__webglTextureCube)}else p instanceof THREE.WebGLRenderTargetCube?(c=p,l.activeTexture(l.TEXTURE0+k),l.bindTexture(l.TEXTURE_CUBE_MAP,c.__webglTexture)):S.setTexture(p,k)}else if("tv"===m){void 0===c._array&&(c._array=[]);m=0;for(n=c.value.length;m<
n;m++)c._array[m]=w();l.uniform1iv(e,c._array);m=0;for(n=c.value.length;m<n;m++)p=c.value[m],k=c._array[m],p&&S.setTexture(p,k)}if((d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&null!==h.cameraPosition)b=a.matrixWorld.getPosition(),l.uniform3f(h.cameraPosition,b.x,b.y,b.z);(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&null!==h.viewMatrix&&l.uniformMatrix4fv(h.viewMatrix,!1,a._viewMatrixArray)}l.uniformMatrix4fv(h.modelViewMatrix,
!1,f._modelViewMatrix.elements);h.normalMatrix&&l.uniformMatrix3fv(h.normalMatrix,!1,f._normalMatrix.elements);null!==h.modelMatrix&&l.uniformMatrix4fv(h.modelMatrix,!1,f.matrixWorld.elements);return g}function w(){var a=ea;a>=uc&&console.warn("Trying to use "+a+" texture units while this GPU supports only "+uc);ea+=1;return a}function t(a,b){a._modelViewMatrix.multiply(b.matrixWorldInverse,a.matrixWorld);a._normalMatrix.getInverse(a._modelViewMatrix);a._normalMatrix.transpose()}function D(a,b,c,
d){a[b]=c.r*c.r*d;a[b+1]=c.g*c.g*d;a[b+2]=c.b*c.b*d}function C(a,b,c,d){a[b]=c.r*d;a[b+1]=c.g*d;a[b+2]=c.b*d}function x(a,b,c){hb!==a&&(a?l.enable(l.POLYGON_OFFSET_FILL):l.disable(l.POLYGON_OFFSET_FILL),hb=a);if(a&&(sb!==b||Sb!==c))l.polygonOffset(b,c),sb=b,Sb=c}function z(a){a=a.split("\n");for(var b=0,c=a.length;b<c;b++)a[b]=b+1+": "+a[b];return a.join("\n")}function F(a,b){var c;"fragment"===a?c=l.createShader(l.FRAGMENT_SHADER):"vertex"===a&&(c=l.createShader(l.VERTEX_SHADER));l.shaderSource(c,
b);l.compileShader(c);return!l.getShaderParameter(c,l.COMPILE_STATUS)?(console.error(l.getShaderInfoLog(c)),console.error(z(b)),null):c}function E(a,b,c){c?(l.texParameteri(a,l.TEXTURE_WRAP_S,J(b.wrapS)),l.texParameteri(a,l.TEXTURE_WRAP_T,J(b.wrapT)),l.texParameteri(a,l.TEXTURE_MAG_FILTER,J(b.magFilter)),l.texParameteri(a,l.TEXTURE_MIN_FILTER,J(b.minFilter))):(l.texParameteri(a,l.TEXTURE_WRAP_S,l.CLAMP_TO_EDGE),l.texParameteri(a,l.TEXTURE_WRAP_T,l.CLAMP_TO_EDGE),l.texParameteri(a,l.TEXTURE_MAG_FILTER,
L(b.magFilter)),l.texParameteri(a,l.TEXTURE_MIN_FILTER,L(b.minFilter)));if(Tb&&b.type!==THREE.FloatType&&(1<b.anisotropy||b.__oldAnisotropy))l.texParameterf(a,Tb.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,Hc)),b.__oldAnisotropy=b.anisotropy}function I(a,b){l.bindRenderbuffer(l.RENDERBUFFER,a);b.depthBuffer&&!b.stencilBuffer?(l.renderbufferStorage(l.RENDERBUFFER,l.DEPTH_COMPONENT16,b.width,b.height),l.framebufferRenderbuffer(l.FRAMEBUFFER,l.DEPTH_ATTACHMENT,l.RENDERBUFFER,a)):b.depthBuffer&&
b.stencilBuffer?(l.renderbufferStorage(l.RENDERBUFFER,l.DEPTH_STENCIL,b.width,b.height),l.framebufferRenderbuffer(l.FRAMEBUFFER,l.DEPTH_STENCIL_ATTACHMENT,l.RENDERBUFFER,a)):l.renderbufferStorage(l.RENDERBUFFER,l.RGBA4,b.width,b.height)}function L(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?l.NEAREST:l.LINEAR}function J(a){if(a===THREE.RepeatWrapping)return l.REPEAT;if(a===THREE.ClampToEdgeWrapping)return l.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return l.MIRRORED_REPEAT;
if(a===THREE.NearestFilter)return l.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return l.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return l.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return l.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return l.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return l.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return l.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return l.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return l.UNSIGNED_SHORT_5_5_5_1;
if(a===THREE.UnsignedShort565Type)return l.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return l.BYTE;if(a===THREE.ShortType)return l.SHORT;if(a===THREE.UnsignedShortType)return l.UNSIGNED_SHORT;if(a===THREE.IntType)return l.INT;if(a===THREE.UnsignedIntType)return l.UNSIGNED_INT;if(a===THREE.FloatType)return l.FLOAT;if(a===THREE.AlphaFormat)return l.ALPHA;if(a===THREE.RGBFormat)return l.RGB;if(a===THREE.RGBAFormat)return l.RGBA;if(a===THREE.LuminanceFormat)return l.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return l.LUMINANCE_ALPHA;
if(a===THREE.AddEquation)return l.FUNC_ADD;if(a===THREE.SubtractEquation)return l.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return l.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return l.ZERO;if(a===THREE.OneFactor)return l.ONE;if(a===THREE.SrcColorFactor)return l.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return l.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return l.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return l.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return l.DST_ALPHA;
if(a===THREE.OneMinusDstAlphaFactor)return l.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return l.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return l.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return l.SRC_ALPHA_SATURATE;if(void 0!==Bb){if(a===THREE.RGB_S3TC_DXT1_Format)return Bb.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return Bb.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return Bb.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return Bb.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}
console.log("THREE.WebGLRenderer",THREE.REVISION);a=a||{};var O=void 0!==a.canvas?a.canvas:document.createElement("canvas"),M=void 0!==a.precision?a.precision:"highp",H=void 0!==a.alpha?a.alpha:!0,K=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,N=void 0!==a.antialias?a.antialias:!1,T=void 0!==a.stencil?a.stencil:!0,ba=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,$=void 0!==a.clearColor?new THREE.Color(a.clearColor):new THREE.Color(0),P=void 0!==a.clearAlpha?a.clearAlpha:0,ga=
void 0!==a.maxLights?a.maxLights:4;this.domElement=O;this.context=null;this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapCullFrontFaces=this.shadowMapSoft=this.shadowMapAutoUpdate=!0;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=
[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var S=this,ta=[],oa=0,Q=null,ha=null,Y=-1,X=null,ka=null,aa=0,ea=0,Ja=-1,Sa=-1,La=-1,Xa=-1,qa=-1,Ya=-1,lb=-1,Ua=-1,hb=null,sb=null,Sb=null,gb=null,cb=0,Ma=0,za=0,zb=0,Ga=0,tb=0,ib=new THREE.Frustum,ua=new THREE.Matrix4,jb=new THREE.Matrix4,bb=new THREE.Vector4,Za=new THREE.Vector3,Ha=!0,Ab={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],
positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],angles:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},l,Tb,Bb;try{if(!(l=O.getContext("experimental-webgl",{alpha:H,premultipliedAlpha:K,antialias:N,stencil:T,preserveDrawingBuffer:ba})))throw"Error creating WebGL context.";}catch(Uc){console.error(Uc)}a=l.getExtension("OES_texture_float");H=l.getExtension("OES_standard_derivatives");Tb=l.getExtension("EXT_texture_filter_anisotropic")||
l.getExtension("MOZ_EXT_texture_filter_anisotropic")||l.getExtension("WEBKIT_EXT_texture_filter_anisotropic");Bb=l.getExtension("WEBGL_compressed_texture_s3tc")||l.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||l.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");a||console.log("THREE.WebGLRenderer: Float textures not supported.");H||console.log("THREE.WebGLRenderer: Standard derivatives not supported.");Tb||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");Bb||
console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");l.clearColor(0,0,0,1);l.clearDepth(1);l.clearStencil(0);l.enable(l.DEPTH_TEST);l.depthFunc(l.LEQUAL);l.frontFace(l.CCW);l.cullFace(l.BACK);l.enable(l.CULL_FACE);l.enable(l.BLEND);l.blendEquation(l.FUNC_ADD);l.blendFunc(l.SRC_ALPHA,l.ONE_MINUS_SRC_ALPHA);l.clearColor($.r,$.g,$.b,P);this.context=l;var uc=l.getParameter(l.MAX_TEXTURE_IMAGE_UNITS),H=l.getParameter(l.MAX_VERTEX_TEXTURE_IMAGE_UNITS);l.getParameter(l.MAX_TEXTURE_SIZE);
var Vc=l.getParameter(l.MAX_CUBE_MAP_TEXTURE_SIZE),Hc=Tb?l.getParameter(Tb.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,kc=0<H,lc=kc&&a;Bb&&l.getParameter(l.COMPRESSED_TEXTURE_FORMATS);this.getContext=function(){return l};this.supportsVertexTextures=function(){return kc};this.getMaxAnisotropy=function(){return Hc};this.setSize=function(a,b){O.width=a;O.height=b;this.setViewport(0,0,O.width,O.height)};this.setViewport=function(a,b,c,d){cb=void 0!==a?a:0;Ma=void 0!==b?b:0;za=void 0!==c?c:O.width;zb=void 0!==d?
d:O.height;l.viewport(cb,Ma,za,zb)};this.setScissor=function(a,b,c,d){l.scissor(a,b,c,d)};this.enableScissorTest=function(a){a?l.enable(l.SCISSOR_TEST):l.disable(l.SCISSOR_TEST)};this.setClearColorHex=function(a,b){$.setHex(a);P=b;l.clearColor($.r,$.g,$.b,P)};this.setClearColor=function(a,b){$.copy(a);P=b;l.clearColor($.r,$.g,$.b,P)};this.getClearColor=function(){return $};this.getClearAlpha=function(){return P};this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=l.COLOR_BUFFER_BIT;if(void 0===
b||b)d|=l.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=l.STENCIL_BUFFER_BIT;l.clear(d)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.addPostPlugin=function(a){a.init(this);this.renderPluginsPost.push(a)};this.addPrePlugin=function(a){a.init(this);this.renderPluginsPre.push(a)};this.deallocateObject=function(a){if(a.__webglInit)if(a.__webglInit=!1,delete a._modelViewMatrix,delete a._normalMatrix,delete a._normalMatrixArray,delete a._modelViewMatrixArray,delete a._modelMatrixArray,
a instanceof THREE.Mesh)for(var b in a.geometry.geometryGroups){var c=a.geometry.geometryGroups[b];l.deleteBuffer(c.__webglVertexBuffer);l.deleteBuffer(c.__webglNormalBuffer);l.deleteBuffer(c.__webglTangentBuffer);l.deleteBuffer(c.__webglColorBuffer);l.deleteBuffer(c.__webglUVBuffer);l.deleteBuffer(c.__webglUV2Buffer);l.deleteBuffer(c.__webglSkinIndicesBuffer);l.deleteBuffer(c.__webglSkinWeightsBuffer);l.deleteBuffer(c.__webglFaceBuffer);l.deleteBuffer(c.__webglLineBuffer);var d=void 0,e=void 0;if(c.numMorphTargets){d=
0;for(e=c.numMorphTargets;d<e;d++)l.deleteBuffer(c.__webglMorphTargetsBuffers[d])}if(c.numMorphNormals){d=0;for(e=c.numMorphNormals;d<e;d++)l.deleteBuffer(c.__webglMorphNormalsBuffers[d])}if(c.__webglCustomAttributesList)for(d in d=void 0,c.__webglCustomAttributesList)l.deleteBuffer(c.__webglCustomAttributesList[d].buffer);S.info.memory.geometries--}else a instanceof THREE.Ribbon?(a=a.geometry,l.deleteBuffer(a.__webglVertexBuffer),l.deleteBuffer(a.__webglColorBuffer),S.info.memory.geometries--):a instanceof
THREE.Line?(a=a.geometry,l.deleteBuffer(a.__webglVertexBuffer),l.deleteBuffer(a.__webglColorBuffer),S.info.memory.geometries--):a instanceof THREE.ParticleSystem&&(a=a.geometry,l.deleteBuffer(a.__webglVertexBuffer),l.deleteBuffer(a.__webglColorBuffer),S.info.memory.geometries--)};this.deallocateTexture=function(a){a.__webglInit&&(a.__webglInit=!1,l.deleteTexture(a.__webglTexture),S.info.memory.textures--)};this.deallocateRenderTarget=function(a){if(a&&a.__webglTexture)if(l.deleteTexture(a.__webglTexture),
a instanceof THREE.WebGLRenderTargetCube)for(var b=0;6>b;b++)l.deleteFramebuffer(a.__webglFramebuffer[b]),l.deleteRenderbuffer(a.__webglRenderbuffer[b]);else l.deleteFramebuffer(a.__webglFramebuffer),l.deleteRenderbuffer(a.__webglRenderbuffer)};this.deallocateMaterial=function(a){var b=a.program;if(b){a.program=void 0;var c,d,e=!1;a=0;for(c=ta.length;a<c;a++)if(d=ta[a],d.program===b){d.usedTimes--;0===d.usedTimes&&(e=!0);break}if(e){e=[];a=0;for(c=ta.length;a<c;a++)d=ta[a],d.program!==b&&e.push(d);
ta=e;l.deleteProgram(b);S.info.memory.programs--}}};this.updateShadowMap=function(a,b){Q=null;Y=X=Ua=lb=La=-1;Ha=!0;Sa=Ja=-1;this.shadowMapPlugin.update(a,b)};this.renderBufferImmediate=function(a,b,c){a.hasPositions&&!a.__webglVertexBuffer&&(a.__webglVertexBuffer=l.createBuffer());a.hasNormals&&!a.__webglNormalBuffer&&(a.__webglNormalBuffer=l.createBuffer());a.hasUvs&&!a.__webglUvBuffer&&(a.__webglUvBuffer=l.createBuffer());a.hasColors&&!a.__webglColorBuffer&&(a.__webglColorBuffer=l.createBuffer());
a.hasPositions&&(l.bindBuffer(l.ARRAY_BUFFER,a.__webglVertexBuffer),l.bufferData(l.ARRAY_BUFFER,a.positionArray,l.DYNAMIC_DRAW),l.enableVertexAttribArray(b.attributes.position),l.vertexAttribPointer(b.attributes.position,3,l.FLOAT,!1,0,0));if(a.hasNormals){l.bindBuffer(l.ARRAY_BUFFER,a.__webglNormalBuffer);if(c.shading===THREE.FlatShading){var d,e,f,g,h,j,k,m,p,n,q,r=3*a.count;for(q=0;q<r;q+=9)n=a.normalArray,d=n[q],e=n[q+1],f=n[q+2],g=n[q+3],j=n[q+4],m=n[q+5],h=n[q+6],k=n[q+7],p=n[q+8],d=(d+g+h)/
3,e=(e+j+k)/3,f=(f+m+p)/3,n[q]=d,n[q+1]=e,n[q+2]=f,n[q+3]=d,n[q+4]=e,n[q+5]=f,n[q+6]=d,n[q+7]=e,n[q+8]=f}l.bufferData(l.ARRAY_BUFFER,a.normalArray,l.DYNAMIC_DRAW);l.enableVertexAttribArray(b.attributes.normal);l.vertexAttribPointer(b.attributes.normal,3,l.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(l.bindBuffer(l.ARRAY_BUFFER,a.__webglUvBuffer),l.bufferData(l.ARRAY_BUFFER,a.uvArray,l.DYNAMIC_DRAW),l.enableVertexAttribArray(b.attributes.uv),l.vertexAttribPointer(b.attributes.uv,2,l.FLOAT,!1,0,0));a.hasColors&&
c.vertexColors!==THREE.NoColors&&(l.bindBuffer(l.ARRAY_BUFFER,a.__webglColorBuffer),l.bufferData(l.ARRAY_BUFFER,a.colorArray,l.DYNAMIC_DRAW),l.enableVertexAttribArray(b.attributes.color),l.vertexAttribPointer(b.attributes.color,3,l.FLOAT,!1,0,0));l.drawArrays(l.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,e,f){if(!1!==d.visible)if(c=B(a,b,c,d,f),a=c.attributes,b=!1,d=16777215*e.id+2*c.id+(d.wireframe?1:0),d!==X&&(X=d,b=!0),f instanceof THREE.Mesh){f=e.offsets;1<f.length&&
(b=!0);d=0;for(c=f.length;d<c;++d){var g=f[d].index;if(b){var h=e.attributes.position,j=h.itemSize;l.bindBuffer(l.ARRAY_BUFFER,h.buffer);l.vertexAttribPointer(a.position,j,l.FLOAT,!1,0,4*g*j);h=e.attributes.normal;0<=a.normal&&h&&(j=h.itemSize,l.bindBuffer(l.ARRAY_BUFFER,h.buffer),l.vertexAttribPointer(a.normal,j,l.FLOAT,!1,0,4*g*j));h=e.attributes.uv;0<=a.uv&&h&&(h.buffer?(j=h.itemSize,l.bindBuffer(l.ARRAY_BUFFER,h.buffer),l.vertexAttribPointer(a.uv,j,l.FLOAT,!1,0,4*g*j),l.enableVertexAttribArray(a.uv)):
l.disableVertexAttribArray(a.uv));j=e.attributes.color;if(0<=a.color&&j){var k=j.itemSize;l.bindBuffer(l.ARRAY_BUFFER,j.buffer);l.vertexAttribPointer(a.color,k,l.FLOAT,!1,0,4*g*k)}h=e.attributes.tangent;0<=a.tangent&&h&&(j=h.itemSize,l.bindBuffer(l.ARRAY_BUFFER,h.buffer),l.vertexAttribPointer(a.tangent,j,l.FLOAT,!1,0,4*g*j));l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,e.attributes.index.buffer)}l.drawElements(l.TRIANGLES,f[d].count,l.UNSIGNED_SHORT,2*f[d].start);S.info.render.calls++;S.info.render.vertices+=
f[d].count;S.info.render.faces+=f[d].count/3}}else f instanceof THREE.ParticleSystem&&b&&(h=e.attributes.position,j=h.itemSize,l.bindBuffer(l.ARRAY_BUFFER,h.buffer),l.vertexAttribPointer(a.position,j,l.FLOAT,!1,0,0),j=e.attributes.color,0<=a.color&&j&&(k=j.itemSize,l.bindBuffer(l.ARRAY_BUFFER,j.buffer),l.vertexAttribPointer(a.color,k,l.FLOAT,!1,0,0)),l.drawArrays(l.POINTS,0,h.numItems/3),S.info.render.calls++,S.info.render.points+=h.numItems/3)};this.renderBuffer=function(a,b,c,d,e,f){if(!1!==d.visible){var g,
h;c=B(a,b,c,d,f);b=c.attributes;a=!1;c=16777215*e.id+2*c.id+(d.wireframe?1:0);c!==X&&(X=c,a=!0);if(!d.morphTargets&&0<=b.position)a&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglVertexBuffer),l.vertexAttribPointer(b.position,3,l.FLOAT,!1,0,0));else if(f.morphTargetBase){c=d.program.attributes;-1!==f.morphTargetBase?(l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[f.morphTargetBase]),l.vertexAttribPointer(c.position,3,l.FLOAT,!1,0,0)):0<=c.position&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglVertexBuffer),
l.vertexAttribPointer(c.position,3,l.FLOAT,!1,0,0));if(f.morphTargetForcedOrder.length){var j=0;h=f.morphTargetForcedOrder;for(g=f.morphTargetInfluences;j<d.numSupportedMorphTargets&&j<h.length;)l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[h[j]]),l.vertexAttribPointer(c["morphTarget"+j],3,l.FLOAT,!1,0,0),d.morphNormals&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[h[j]]),l.vertexAttribPointer(c["morphNormal"+j],3,l.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[j]=g[h[j]],
j++}else{h=[];g=f.morphTargetInfluences;var m,n=g.length;for(m=0;m<n;m++)j=g[m],0<j&&h.push([m,j]);h.length>d.numSupportedMorphTargets?(h.sort(k),h.length=d.numSupportedMorphTargets):h.length>d.numSupportedMorphNormals?h.sort(k):0===h.length&&h.push([0,0]);for(j=0;j<d.numSupportedMorphTargets;)h[j]?(m=h[j][0],l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[m]),l.vertexAttribPointer(c["morphTarget"+j],3,l.FLOAT,!1,0,0),d.morphNormals&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[m]),
l.vertexAttribPointer(c["morphNormal"+j],3,l.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[j]=g[m]):(l.vertexAttribPointer(c["morphTarget"+j],3,l.FLOAT,!1,0,0),d.morphNormals&&l.vertexAttribPointer(c["morphNormal"+j],3,l.FLOAT,!1,0,0),f.__webglMorphTargetInfluences[j]=0),j++}null!==d.program.uniforms.morphTargetInfluences&&l.uniform1fv(d.program.uniforms.morphTargetInfluences,f.__webglMorphTargetInfluences)}if(a){if(e.__webglCustomAttributesList){g=0;for(h=e.__webglCustomAttributesList.length;g<h;g++)c=
e.__webglCustomAttributesList[g],0<=b[c.buffer.belongsToAttribute]&&(l.bindBuffer(l.ARRAY_BUFFER,c.buffer),l.vertexAttribPointer(b[c.buffer.belongsToAttribute],c.size,l.FLOAT,!1,0,0))}0<=b.color&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglColorBuffer),l.vertexAttribPointer(b.color,3,l.FLOAT,!1,0,0));0<=b.normal&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglNormalBuffer),l.vertexAttribPointer(b.normal,3,l.FLOAT,!1,0,0));0<=b.tangent&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglTangentBuffer),l.vertexAttribPointer(b.tangent,
4,l.FLOAT,!1,0,0));0<=b.uv&&(e.__webglUVBuffer?(l.bindBuffer(l.ARRAY_BUFFER,e.__webglUVBuffer),l.vertexAttribPointer(b.uv,2,l.FLOAT,!1,0,0),l.enableVertexAttribArray(b.uv)):l.disableVertexAttribArray(b.uv));0<=b.uv2&&(e.__webglUV2Buffer?(l.bindBuffer(l.ARRAY_BUFFER,e.__webglUV2Buffer),l.vertexAttribPointer(b.uv2,2,l.FLOAT,!1,0,0),l.enableVertexAttribArray(b.uv2)):l.disableVertexAttribArray(b.uv2));d.skinning&&(0<=b.skinIndex&&0<=b.skinWeight)&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),
l.vertexAttribPointer(b.skinIndex,4,l.FLOAT,!1,0,0),l.bindBuffer(l.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),l.vertexAttribPointer(b.skinWeight,4,l.FLOAT,!1,0,0))}f instanceof THREE.Mesh?(d.wireframe?(d=d.wireframeLinewidth,d!==gb&&(l.lineWidth(d),gb=d),a&&l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),l.drawElements(l.LINES,e.__webglLineCount,l.UNSIGNED_SHORT,0)):(a&&l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),l.drawElements(l.TRIANGLES,e.__webglFaceCount,l.UNSIGNED_SHORT,0)),
S.info.render.calls++,S.info.render.vertices+=e.__webglFaceCount,S.info.render.faces+=e.__webglFaceCount/3):f instanceof THREE.Line?(f=f.type===THREE.LineStrip?l.LINE_STRIP:l.LINES,d=d.linewidth,d!==gb&&(l.lineWidth(d),gb=d),l.drawArrays(f,0,e.__webglLineCount),S.info.render.calls++):f instanceof THREE.ParticleSystem?(l.drawArrays(l.POINTS,0,e.__webglParticleCount),S.info.render.calls++,S.info.render.points+=e.__webglParticleCount):f instanceof THREE.Ribbon&&(l.drawArrays(l.TRIANGLE_STRIP,0,e.__webglVertexCount),
S.info.render.calls++)}};this.render=function(a,b,c,d){if(!1===b instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var e,f,g,h,k=a.__lights,q=a.fog;Y=-1;Ha=!0;this.autoUpdateScene&&a.updateMatrixWorld();void 0===b.parent&&b.updateMatrixWorld();b._viewMatrixArray||(b._viewMatrixArray=new Float32Array(16));b._projectionMatrixArray||(b._projectionMatrixArray=new Float32Array(16));b.matrixWorldInverse.getInverse(b.matrixWorld);b.matrixWorldInverse.flattenToArray(b._viewMatrixArray);
b.projectionMatrix.flattenToArray(b._projectionMatrixArray);ua.multiply(b.projectionMatrix,b.matrixWorldInverse);ib.setFromMatrix(ua);this.autoUpdateObjects&&this.initWebGLObjects(a);m(this.renderPluginsPre,a,b);S.info.render.calls=0;S.info.render.vertices=0;S.info.render.faces=0;S.info.render.points=0;this.setRenderTarget(c);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);h=a.__webglObjects;d=0;for(e=h.length;d<e;d++){f=h[d];g=f.object;f.render=!1;if(g.visible&&
(!(g instanceof THREE.Mesh||g instanceof THREE.ParticleSystem)||!g.frustumCulled||ib.contains(g))){t(g,b);var r=f,s=r.object,u=r.buffer,v=void 0,v=v=void 0,v=s.material;v instanceof THREE.MeshFaceMaterial?(v=u.materialIndex,0<=v&&(v=s.geometry.materials[v],v.transparent?(r.transparent=v,r.opaque=null):(r.opaque=v,r.transparent=null))):v&&(v.transparent?(r.transparent=v,r.opaque=null):(r.opaque=v,r.transparent=null));f.render=!0;!0===this.sortObjects&&(null!==g.renderDepth?f.z=g.renderDepth:(bb.copy(g.matrixWorld.getPosition()),
ua.multiplyVector3(bb),f.z=bb.z))}f.z=f.z||0}this.sortObjects&&h.sort(j);h=a.__webglObjectsImmediate;d=0;for(e=h.length;d<e;d++)f=h[d],g=f.object,g.visible&&(t(g,b),g=f.object.material,g.transparent?(f.transparent=g,f.opaque=null):(f.opaque=g,f.transparent=null));a.overrideMaterial?(d=a.overrideMaterial,this.setBlending(d.blending,d.blendEquation,d.blendSrc,d.blendDst),this.setDepthTest(d.depthTest),this.setDepthWrite(d.depthWrite),x(d.polygonOffset,d.polygonOffsetFactor,d.polygonOffsetUnits),p(a.__webglObjects,
!1,"",b,k,q,!0,d),n(a.__webglObjectsImmediate,"",b,k,q,!1,d)):(this.setBlending(THREE.NormalBlending),p(a.__webglObjects,!0,"opaque",b,k,q,!1),n(a.__webglObjectsImmediate,"opaque",b,k,q,!1),p(a.__webglObjects,!1,"transparent",b,k,q,!0),n(a.__webglObjectsImmediate,"transparent",b,k,q,!0));m(this.renderPluginsPost,a,b);c&&(c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter)&&(c instanceof THREE.WebGLRenderTargetCube?(l.bindTexture(l.TEXTURE_CUBE_MAP,c.__webglTexture),
l.generateMipmap(l.TEXTURE_CUBE_MAP),l.bindTexture(l.TEXTURE_CUBE_MAP,null)):(l.bindTexture(l.TEXTURE_2D,c.__webglTexture),l.generateMipmap(l.TEXTURE_2D),l.bindTexture(l.TEXTURE_2D,null)));this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(a,b,c,d,e){var f=B(a,b,c,d,e);X=-1;S.setMaterialFaces(d);e.immediateRenderCallback?e.immediateRenderCallback(f,l,ib):e.render(function(a){S.renderBufferImmediate(a,f,d)})};this.initWebGLObjects=function(a){a.__webglObjects||(a.__webglObjects=
[],a.__webglObjectsImmediate=[],a.__webglSprites=[],a.__webglFlares=[]);for(;a.__objectsAdded.length;){var j=a.__objectsAdded[0],k=a,m=void 0,n=void 0,p=void 0;if(!j.__webglInit)if(j.__webglInit=!0,j._modelViewMatrix=new THREE.Matrix4,j._normalMatrix=new THREE.Matrix3,j instanceof THREE.Mesh)if(n=j.geometry,n instanceof THREE.Geometry){if(void 0===n.geometryGroups){var t=n,w=void 0,x=void 0,z=void 0,B=void 0,C=void 0,D=void 0,F=void 0,E={},J=t.morphTargets.length,L=t.morphNormals.length;t.geometryGroups=
{};w=0;for(x=t.faces.length;w<x;w++)z=t.faces[w],B=z.materialIndex,D=void 0!==B?B:-1,void 0===E[D]&&(E[D]={hash:D,counter:0}),F=E[D].hash+"_"+E[D].counter,void 0===t.geometryGroups[F]&&(t.geometryGroups[F]={faces3:[],faces4:[],materialIndex:B,vertices:0,numMorphTargets:J,numMorphNormals:L}),C=z instanceof THREE.Face3?3:4,65535<t.geometryGroups[F].vertices+C&&(E[D].counter+=1,F=E[D].hash+"_"+E[D].counter,void 0===t.geometryGroups[F]&&(t.geometryGroups[F]={faces3:[],faces4:[],materialIndex:B,vertices:0,
numMorphTargets:J,numMorphNormals:L})),z instanceof THREE.Face3?t.geometryGroups[F].faces3.push(w):t.geometryGroups[F].faces4.push(w),t.geometryGroups[F].vertices+=C;t.geometryGroupsList=[];var I=void 0;for(I in t.geometryGroups)t.geometryGroups[I].id=aa++,t.geometryGroupsList.push(t.geometryGroups[I])}for(m in n.geometryGroups)if(p=n.geometryGroups[m],!p.__webglVertexBuffer){var K=p;K.__webglVertexBuffer=l.createBuffer();K.__webglNormalBuffer=l.createBuffer();K.__webglTangentBuffer=l.createBuffer();
K.__webglColorBuffer=l.createBuffer();K.__webglUVBuffer=l.createBuffer();K.__webglUV2Buffer=l.createBuffer();K.__webglSkinIndicesBuffer=l.createBuffer();K.__webglSkinWeightsBuffer=l.createBuffer();K.__webglFaceBuffer=l.createBuffer();K.__webglLineBuffer=l.createBuffer();var Q=void 0,M=void 0;if(K.numMorphTargets){K.__webglMorphTargetsBuffers=[];Q=0;for(M=K.numMorphTargets;Q<M;Q++)K.__webglMorphTargetsBuffers.push(l.createBuffer())}if(K.numMorphNormals){K.__webglMorphNormalsBuffers=[];Q=0;for(M=K.numMorphNormals;Q<
M;Q++)K.__webglMorphNormalsBuffers.push(l.createBuffer())}S.info.memory.geometries++;var H=p,O=j,N=O.geometry,P=H.faces3,Y=H.faces4,X=3*P.length+4*Y.length,ha=1*P.length+2*Y.length,ea=3*P.length+4*Y.length,T=c(O,H),$=e(T),ga=d(T),ka=T.vertexColors?T.vertexColors:!1;H.__vertexArray=new Float32Array(3*X);ga&&(H.__normalArray=new Float32Array(3*X));N.hasTangents&&(H.__tangentArray=new Float32Array(4*X));ka&&(H.__colorArray=new Float32Array(3*X));if($){if(0<N.faceUvs.length||0<N.faceVertexUvs.length)H.__uvArray=
new Float32Array(2*X);if(1<N.faceUvs.length||1<N.faceVertexUvs.length)H.__uv2Array=new Float32Array(2*X)}O.geometry.skinWeights.length&&O.geometry.skinIndices.length&&(H.__skinIndexArray=new Float32Array(4*X),H.__skinWeightArray=new Float32Array(4*X));H.__faceArray=new Uint16Array(3*ha);H.__lineArray=new Uint16Array(2*ea);var ba=void 0,ta=void 0;if(H.numMorphTargets){H.__morphTargetsArrays=[];ba=0;for(ta=H.numMorphTargets;ba<ta;ba++)H.__morphTargetsArrays.push(new Float32Array(3*X))}if(H.numMorphNormals){H.__morphNormalsArrays=
[];ba=0;for(ta=H.numMorphNormals;ba<ta;ba++)H.__morphNormalsArrays.push(new Float32Array(3*X))}H.__webglFaceCount=3*ha;H.__webglLineCount=2*ea;if(T.attributes){void 0===H.__webglCustomAttributesList&&(H.__webglCustomAttributesList=[]);var Ja=void 0;for(Ja in T.attributes){var qa=T.attributes[Ja],oa={},Sa;for(Sa in qa)oa[Sa]=qa[Sa];if(!oa.__webglInitialized||oa.createUniqueBuffers){oa.__webglInitialized=!0;var ua=1;"v2"===oa.type?ua=2:"v3"===oa.type?ua=3:"v4"===oa.type?ua=4:"c"===oa.type&&(ua=3);oa.size=
ua;oa.array=new Float32Array(X*ua);oa.buffer=l.createBuffer();oa.buffer.belongsToAttribute=Ja;qa.needsUpdate=!0;oa.__original=qa}H.__webglCustomAttributesList.push(oa)}}H.__inittedArrays=!0;n.verticesNeedUpdate=!0;n.morphTargetsNeedUpdate=!0;n.elementsNeedUpdate=!0;n.uvsNeedUpdate=!0;n.normalsNeedUpdate=!0;n.tangentsNeedUpdate=!0;n.colorsNeedUpdate=!0}}else n instanceof THREE.BufferGeometry&&f(n);else if(j instanceof THREE.Ribbon){if(n=j.geometry,!n.__webglVertexBuffer){var La=n;La.__webglVertexBuffer=
l.createBuffer();La.__webglColorBuffer=l.createBuffer();S.info.memory.geometries++;var za=n,Ga=za.vertices.length;za.__vertexArray=new Float32Array(3*Ga);za.__colorArray=new Float32Array(3*Ga);za.__webglVertexCount=Ga;n.verticesNeedUpdate=!0;n.colorsNeedUpdate=!0}}else if(j instanceof THREE.Line){if(n=j.geometry,!n.__webglVertexBuffer){var Ma=n;Ma.__webglVertexBuffer=l.createBuffer();Ma.__webglColorBuffer=l.createBuffer();S.info.memory.geometries++;var Ha=n,Xa=j,Ya=Ha.vertices.length;Ha.__vertexArray=
new Float32Array(3*Ya);Ha.__colorArray=new Float32Array(3*Ya);Ha.__webglLineCount=Ya;b(Ha,Xa);n.verticesNeedUpdate=!0;n.colorsNeedUpdate=!0}}else if(j instanceof THREE.ParticleSystem&&(n=j.geometry,!n.__webglVertexBuffer))if(n instanceof THREE.Geometry){var Za=n;Za.__webglVertexBuffer=l.createBuffer();Za.__webglColorBuffer=l.createBuffer();S.info.memory.geometries++;var Ua=n,lb=j,cb=Ua.vertices.length;Ua.__vertexArray=new Float32Array(3*cb);Ua.__colorArray=new Float32Array(3*cb);Ua.__sortArray=[];
Ua.__webglParticleCount=cb;b(Ua,lb);n.verticesNeedUpdate=!0;n.colorsNeedUpdate=!0}else n instanceof THREE.BufferGeometry&&f(n);if(!j.__webglActive){if(j instanceof THREE.Mesh)if(n=j.geometry,n instanceof THREE.BufferGeometry)r(k.__webglObjects,n,j);else for(m in n.geometryGroups)p=n.geometryGroups[m],r(k.__webglObjects,p,j);else j instanceof THREE.Ribbon||j instanceof THREE.Line||j instanceof THREE.ParticleSystem?(n=j.geometry,r(k.__webglObjects,n,j)):j instanceof THREE.ImmediateRenderObject||j.immediateRenderCallback?
k.__webglObjectsImmediate.push({object:j,opaque:null,transparent:null}):j instanceof THREE.Sprite?k.__webglSprites.push(j):j instanceof THREE.LensFlare&&k.__webglFlares.push(j);j.__webglActive=!0}a.__objectsAdded.splice(0,1)}for(;a.__objectsRemoved.length;){var ob=a.__objectsRemoved[0],bb=a;ob instanceof THREE.Mesh||ob instanceof THREE.ParticleSystem||ob instanceof THREE.Ribbon||ob instanceof THREE.Line?u(bb.__webglObjects,ob):ob instanceof THREE.Sprite?v(bb.__webglSprites,ob):ob instanceof THREE.LensFlare?
v(bb.__webglFlares,ob):(ob instanceof THREE.ImmediateRenderObject||ob.immediateRenderCallback)&&u(bb.__webglObjectsImmediate,ob);ob.__webglActive=!1;a.__objectsRemoved.splice(0,1)}for(var ib=0,tb=a.__webglObjects.length;ib<tb;ib++){var xb=a.__webglObjects[ib].object,ia=xb.geometry,jb=void 0,hb=void 0,db=void 0;if(xb instanceof THREE.Mesh)if(ia instanceof THREE.BufferGeometry)(ia.verticesNeedUpdate||ia.elementsNeedUpdate||ia.uvsNeedUpdate||ia.normalsNeedUpdate||ia.colorsNeedUpdate||ia.tangentsNeedUpdate)&&
h(ia,l.DYNAMIC_DRAW,!ia.dynamic),ia.verticesNeedUpdate=!1,ia.elementsNeedUpdate=!1,ia.uvsNeedUpdate=!1,ia.normalsNeedUpdate=!1,ia.colorsNeedUpdate=!1,ia.tangentsNeedUpdate=!1;else{for(var sb=0,zb=ia.geometryGroupsList.length;sb<zb;sb++)if(jb=ia.geometryGroupsList[sb],db=c(xb,jb),hb=db.attributes&&q(db),ia.verticesNeedUpdate||ia.morphTargetsNeedUpdate||ia.elementsNeedUpdate||ia.uvsNeedUpdate||ia.normalsNeedUpdate||ia.colorsNeedUpdate||ia.tangentsNeedUpdate||hb){var pa=jb,Ab=xb,pb=l.DYNAMIC_DRAW,Bb=
!ia.dynamic,gb=db;if(pa.__inittedArrays){var Tb=d(gb),Sb=gb.vertexColors?gb.vertexColors:!1,kc=e(gb),Ic=Tb===THREE.SmoothShading,G=void 0,Z=void 0,$b=void 0,R=void 0,oc=void 0,ac=void 0,yb=void 0,Jc=void 0,Ub=void 0,pc=void 0,qc=void 0,U=void 0,V=void 0,W=void 0,na=void 0,Cb=void 0,Db=void 0,Eb=void 0,vc=void 0,Fb=void 0,Gb=void 0,Hb=void 0,wc=void 0,Ib=void 0,Jb=void 0,Kb=void 0,xc=void 0,Lb=void 0,Mb=void 0,Nb=void 0,yc=void 0,Ob=void 0,Pb=void 0,Qb=void 0,zc=void 0,va=void 0,lc=void 0,bc=void 0,
rc=void 0,sc=void 0,Pa=void 0,uc=void 0,Na=void 0,Oa=void 0,cc=void 0,Vb=void 0,Fa=0,Ka=0,Wb=0,Xb=0,qb=0,Va=0,xa=0,ab=0,Ia=0,fa=0,ja=0,A=0,wa=void 0,Qa=pa.__vertexArray,Ac=pa.__uvArray,Bc=pa.__uv2Array,rb=pa.__normalArray,Aa=pa.__tangentArray,Ra=pa.__colorArray,Ba=pa.__skinIndexArray,Ca=pa.__skinWeightArray,Xc=pa.__morphTargetsArrays,Yc=pa.__morphNormalsArrays,Zc=pa.__webglCustomAttributesList,y=void 0,Rb=pa.__faceArray,kb=pa.__lineArray,eb=Ab.geometry,Hc=eb.elementsNeedUpdate,dd=eb.uvsNeedUpdate,
Uc=eb.normalsNeedUpdate,Vc=eb.tangentsNeedUpdate,kd=eb.colorsNeedUpdate,ld=eb.morphTargetsNeedUpdate,hc=eb.vertices,ra=pa.faces3,sa=pa.faces4,Wa=eb.faces,$c=eb.faceVertexUvs[0],ad=eb.faceVertexUvs[1],ic=eb.skinIndices,dc=eb.skinWeights,ec=eb.morphTargets,Kc=eb.morphNormals;if(eb.verticesNeedUpdate){G=0;for(Z=ra.length;G<Z;G++)R=Wa[ra[G]],U=hc[R.a],V=hc[R.b],W=hc[R.c],Qa[Ka]=U.x,Qa[Ka+1]=U.y,Qa[Ka+2]=U.z,Qa[Ka+3]=V.x,Qa[Ka+4]=V.y,Qa[Ka+5]=V.z,Qa[Ka+6]=W.x,Qa[Ka+7]=W.y,Qa[Ka+8]=W.z,Ka+=9;G=0;for(Z=
sa.length;G<Z;G++)R=Wa[sa[G]],U=hc[R.a],V=hc[R.b],W=hc[R.c],na=hc[R.d],Qa[Ka]=U.x,Qa[Ka+1]=U.y,Qa[Ka+2]=U.z,Qa[Ka+3]=V.x,Qa[Ka+4]=V.y,Qa[Ka+5]=V.z,Qa[Ka+6]=W.x,Qa[Ka+7]=W.y,Qa[Ka+8]=W.z,Qa[Ka+9]=na.x,Qa[Ka+10]=na.y,Qa[Ka+11]=na.z,Ka+=12;l.bindBuffer(l.ARRAY_BUFFER,pa.__webglVertexBuffer);l.bufferData(l.ARRAY_BUFFER,Qa,pb)}if(ld){Pa=0;for(uc=ec.length;Pa<uc;Pa++){G=ja=0;for(Z=ra.length;G<Z;G++)cc=ra[G],R=Wa[cc],U=ec[Pa].vertices[R.a],V=ec[Pa].vertices[R.b],W=ec[Pa].vertices[R.c],Na=Xc[Pa],Na[ja]=U.x,
Na[ja+1]=U.y,Na[ja+2]=U.z,Na[ja+3]=V.x,Na[ja+4]=V.y,Na[ja+5]=V.z,Na[ja+6]=W.x,Na[ja+7]=W.y,Na[ja+8]=W.z,gb.morphNormals&&(Ic?(Vb=Kc[Pa].vertexNormals[cc],Fb=Vb.a,Gb=Vb.b,Hb=Vb.c):Hb=Gb=Fb=Kc[Pa].faceNormals[cc],Oa=Yc[Pa],Oa[ja]=Fb.x,Oa[ja+1]=Fb.y,Oa[ja+2]=Fb.z,Oa[ja+3]=Gb.x,Oa[ja+4]=Gb.y,Oa[ja+5]=Gb.z,Oa[ja+6]=Hb.x,Oa[ja+7]=Hb.y,Oa[ja+8]=Hb.z),ja+=9;G=0;for(Z=sa.length;G<Z;G++)cc=sa[G],R=Wa[cc],U=ec[Pa].vertices[R.a],V=ec[Pa].vertices[R.b],W=ec[Pa].vertices[R.c],na=ec[Pa].vertices[R.d],Na=Xc[Pa],
Na[ja]=U.x,Na[ja+1]=U.y,Na[ja+2]=U.z,Na[ja+3]=V.x,Na[ja+4]=V.y,Na[ja+5]=V.z,Na[ja+6]=W.x,Na[ja+7]=W.y,Na[ja+8]=W.z,Na[ja+9]=na.x,Na[ja+10]=na.y,Na[ja+11]=na.z,gb.morphNormals&&(Ic?(Vb=Kc[Pa].vertexNormals[cc],Fb=Vb.a,Gb=Vb.b,Hb=Vb.c,wc=Vb.d):wc=Hb=Gb=Fb=Kc[Pa].faceNormals[cc],Oa=Yc[Pa],Oa[ja]=Fb.x,Oa[ja+1]=Fb.y,Oa[ja+2]=Fb.z,Oa[ja+3]=Gb.x,Oa[ja+4]=Gb.y,Oa[ja+5]=Gb.z,Oa[ja+6]=Hb.x,Oa[ja+7]=Hb.y,Oa[ja+8]=Hb.z,Oa[ja+9]=wc.x,Oa[ja+10]=wc.y,Oa[ja+11]=wc.z),ja+=12;l.bindBuffer(l.ARRAY_BUFFER,pa.__webglMorphTargetsBuffers[Pa]);
l.bufferData(l.ARRAY_BUFFER,Xc[Pa],pb);gb.morphNormals&&(l.bindBuffer(l.ARRAY_BUFFER,pa.__webglMorphNormalsBuffers[Pa]),l.bufferData(l.ARRAY_BUFFER,Yc[Pa],pb))}}if(dc.length){G=0;for(Z=ra.length;G<Z;G++)R=Wa[ra[G]],Lb=dc[R.a],Mb=dc[R.b],Nb=dc[R.c],Ca[fa]=Lb.x,Ca[fa+1]=Lb.y,Ca[fa+2]=Lb.z,Ca[fa+3]=Lb.w,Ca[fa+4]=Mb.x,Ca[fa+5]=Mb.y,Ca[fa+6]=Mb.z,Ca[fa+7]=Mb.w,Ca[fa+8]=Nb.x,Ca[fa+9]=Nb.y,Ca[fa+10]=Nb.z,Ca[fa+11]=Nb.w,Ob=ic[R.a],Pb=ic[R.b],Qb=ic[R.c],Ba[fa]=Ob.x,Ba[fa+1]=Ob.y,Ba[fa+2]=Ob.z,Ba[fa+3]=Ob.w,
Ba[fa+4]=Pb.x,Ba[fa+5]=Pb.y,Ba[fa+6]=Pb.z,Ba[fa+7]=Pb.w,Ba[fa+8]=Qb.x,Ba[fa+9]=Qb.y,Ba[fa+10]=Qb.z,Ba[fa+11]=Qb.w,fa+=12;G=0;for(Z=sa.length;G<Z;G++)R=Wa[sa[G]],Lb=dc[R.a],Mb=dc[R.b],Nb=dc[R.c],yc=dc[R.d],Ca[fa]=Lb.x,Ca[fa+1]=Lb.y,Ca[fa+2]=Lb.z,Ca[fa+3]=Lb.w,Ca[fa+4]=Mb.x,Ca[fa+5]=Mb.y,Ca[fa+6]=Mb.z,Ca[fa+7]=Mb.w,Ca[fa+8]=Nb.x,Ca[fa+9]=Nb.y,Ca[fa+10]=Nb.z,Ca[fa+11]=Nb.w,Ca[fa+12]=yc.x,Ca[fa+13]=yc.y,Ca[fa+14]=yc.z,Ca[fa+15]=yc.w,Ob=ic[R.a],Pb=ic[R.b],Qb=ic[R.c],zc=ic[R.d],Ba[fa]=Ob.x,Ba[fa+1]=Ob.y,
Ba[fa+2]=Ob.z,Ba[fa+3]=Ob.w,Ba[fa+4]=Pb.x,Ba[fa+5]=Pb.y,Ba[fa+6]=Pb.z,Ba[fa+7]=Pb.w,Ba[fa+8]=Qb.x,Ba[fa+9]=Qb.y,Ba[fa+10]=Qb.z,Ba[fa+11]=Qb.w,Ba[fa+12]=zc.x,Ba[fa+13]=zc.y,Ba[fa+14]=zc.z,Ba[fa+15]=zc.w,fa+=16;0<fa&&(l.bindBuffer(l.ARRAY_BUFFER,pa.__webglSkinIndicesBuffer),l.bufferData(l.ARRAY_BUFFER,Ba,pb),l.bindBuffer(l.ARRAY_BUFFER,pa.__webglSkinWeightsBuffer),l.bufferData(l.ARRAY_BUFFER,Ca,pb))}if(kd&&Sb){G=0;for(Z=ra.length;G<Z;G++)R=Wa[ra[G]],yb=R.vertexColors,Jc=R.color,3===yb.length&&Sb===
THREE.VertexColors?(Ib=yb[0],Jb=yb[1],Kb=yb[2]):Kb=Jb=Ib=Jc,Ra[Ia]=Ib.r,Ra[Ia+1]=Ib.g,Ra[Ia+2]=Ib.b,Ra[Ia+3]=Jb.r,Ra[Ia+4]=Jb.g,Ra[Ia+5]=Jb.b,Ra[Ia+6]=Kb.r,Ra[Ia+7]=Kb.g,Ra[Ia+8]=Kb.b,Ia+=9;G=0;for(Z=sa.length;G<Z;G++)R=Wa[sa[G]],yb=R.vertexColors,Jc=R.color,4===yb.length&&Sb===THREE.VertexColors?(Ib=yb[0],Jb=yb[1],Kb=yb[2],xc=yb[3]):xc=Kb=Jb=Ib=Jc,Ra[Ia]=Ib.r,Ra[Ia+1]=Ib.g,Ra[Ia+2]=Ib.b,Ra[Ia+3]=Jb.r,Ra[Ia+4]=Jb.g,Ra[Ia+5]=Jb.b,Ra[Ia+6]=Kb.r,Ra[Ia+7]=Kb.g,Ra[Ia+8]=Kb.b,Ra[Ia+9]=xc.r,Ra[Ia+10]=xc.g,
Ra[Ia+11]=xc.b,Ia+=12;0<Ia&&(l.bindBuffer(l.ARRAY_BUFFER,pa.__webglColorBuffer),l.bufferData(l.ARRAY_BUFFER,Ra,pb))}if(Vc&&eb.hasTangents){G=0;for(Z=ra.length;G<Z;G++)R=Wa[ra[G]],Ub=R.vertexTangents,Cb=Ub[0],Db=Ub[1],Eb=Ub[2],Aa[xa]=Cb.x,Aa[xa+1]=Cb.y,Aa[xa+2]=Cb.z,Aa[xa+3]=Cb.w,Aa[xa+4]=Db.x,Aa[xa+5]=Db.y,Aa[xa+6]=Db.z,Aa[xa+7]=Db.w,Aa[xa+8]=Eb.x,Aa[xa+9]=Eb.y,Aa[xa+10]=Eb.z,Aa[xa+11]=Eb.w,xa+=12;G=0;for(Z=sa.length;G<Z;G++)R=Wa[sa[G]],Ub=R.vertexTangents,Cb=Ub[0],Db=Ub[1],Eb=Ub[2],vc=Ub[3],Aa[xa]=
Cb.x,Aa[xa+1]=Cb.y,Aa[xa+2]=Cb.z,Aa[xa+3]=Cb.w,Aa[xa+4]=Db.x,Aa[xa+5]=Db.y,Aa[xa+6]=Db.z,Aa[xa+7]=Db.w,Aa[xa+8]=Eb.x,Aa[xa+9]=Eb.y,Aa[xa+10]=Eb.z,Aa[xa+11]=Eb.w,Aa[xa+12]=vc.x,Aa[xa+13]=vc.y,Aa[xa+14]=vc.z,Aa[xa+15]=vc.w,xa+=16;l.bindBuffer(l.ARRAY_BUFFER,pa.__webglTangentBuffer);l.bufferData(l.ARRAY_BUFFER,Aa,pb)}if(Uc&&Tb){G=0;for(Z=ra.length;G<Z;G++)if(R=Wa[ra[G]],oc=R.vertexNormals,ac=R.normal,3===oc.length&&Ic)for(va=0;3>va;va++)bc=oc[va],rb[Va]=bc.x,rb[Va+1]=bc.y,rb[Va+2]=bc.z,Va+=3;else for(va=
0;3>va;va++)rb[Va]=ac.x,rb[Va+1]=ac.y,rb[Va+2]=ac.z,Va+=3;G=0;for(Z=sa.length;G<Z;G++)if(R=Wa[sa[G]],oc=R.vertexNormals,ac=R.normal,4===oc.length&&Ic)for(va=0;4>va;va++)bc=oc[va],rb[Va]=bc.x,rb[Va+1]=bc.y,rb[Va+2]=bc.z,Va+=3;else for(va=0;4>va;va++)rb[Va]=ac.x,rb[Va+1]=ac.y,rb[Va+2]=ac.z,Va+=3;l.bindBuffer(l.ARRAY_BUFFER,pa.__webglNormalBuffer);l.bufferData(l.ARRAY_BUFFER,rb,pb)}if(dd&&$c&&kc){G=0;for(Z=ra.length;G<Z;G++)if($b=ra[G],pc=$c[$b],void 0!==pc)for(va=0;3>va;va++)rc=pc[va],Ac[Wb]=rc.u,Ac[Wb+
1]=rc.v,Wb+=2;G=0;for(Z=sa.length;G<Z;G++)if($b=sa[G],pc=$c[$b],void 0!==pc)for(va=0;4>va;va++)rc=pc[va],Ac[Wb]=rc.u,Ac[Wb+1]=rc.v,Wb+=2;0<Wb&&(l.bindBuffer(l.ARRAY_BUFFER,pa.__webglUVBuffer),l.bufferData(l.ARRAY_BUFFER,Ac,pb))}if(dd&&ad&&kc){G=0;for(Z=ra.length;G<Z;G++)if($b=ra[G],qc=ad[$b],void 0!==qc)for(va=0;3>va;va++)sc=qc[va],Bc[Xb]=sc.u,Bc[Xb+1]=sc.v,Xb+=2;G=0;for(Z=sa.length;G<Z;G++)if($b=sa[G],qc=ad[$b],void 0!==qc)for(va=0;4>va;va++)sc=qc[va],Bc[Xb]=sc.u,Bc[Xb+1]=sc.v,Xb+=2;0<Xb&&(l.bindBuffer(l.ARRAY_BUFFER,
pa.__webglUV2Buffer),l.bufferData(l.ARRAY_BUFFER,Bc,pb))}if(Hc){G=0;for(Z=ra.length;G<Z;G++)Rb[qb]=Fa,Rb[qb+1]=Fa+1,Rb[qb+2]=Fa+2,qb+=3,kb[ab]=Fa,kb[ab+1]=Fa+1,kb[ab+2]=Fa,kb[ab+3]=Fa+2,kb[ab+4]=Fa+1,kb[ab+5]=Fa+2,ab+=6,Fa+=3;G=0;for(Z=sa.length;G<Z;G++)Rb[qb]=Fa,Rb[qb+1]=Fa+1,Rb[qb+2]=Fa+3,Rb[qb+3]=Fa+1,Rb[qb+4]=Fa+2,Rb[qb+5]=Fa+3,qb+=6,kb[ab]=Fa,kb[ab+1]=Fa+1,kb[ab+2]=Fa,kb[ab+3]=Fa+3,kb[ab+4]=Fa+1,kb[ab+5]=Fa+2,kb[ab+6]=Fa+2,kb[ab+7]=Fa+3,ab+=8,Fa+=4;l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,pa.__webglFaceBuffer);
l.bufferData(l.ELEMENT_ARRAY_BUFFER,Rb,pb);l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,pa.__webglLineBuffer);l.bufferData(l.ELEMENT_ARRAY_BUFFER,kb,pb)}if(Zc){va=0;for(lc=Zc.length;va<lc;va++)if(y=Zc[va],y.__original.needsUpdate){A=0;if(1===y.size)if(void 0===y.boundTo||"vertices"===y.boundTo){G=0;for(Z=ra.length;G<Z;G++)R=Wa[ra[G]],y.array[A]=y.value[R.a],y.array[A+1]=y.value[R.b],y.array[A+2]=y.value[R.c],A+=3;G=0;for(Z=sa.length;G<Z;G++)R=Wa[sa[G]],y.array[A]=y.value[R.a],y.array[A+1]=y.value[R.b],y.array[A+
2]=y.value[R.c],y.array[A+3]=y.value[R.d],A+=4}else{if("faces"===y.boundTo){G=0;for(Z=ra.length;G<Z;G++)wa=y.value[ra[G]],y.array[A]=wa,y.array[A+1]=wa,y.array[A+2]=wa,A+=3;G=0;for(Z=sa.length;G<Z;G++)wa=y.value[sa[G]],y.array[A]=wa,y.array[A+1]=wa,y.array[A+2]=wa,y.array[A+3]=wa,A+=4}}else if(2===y.size)if(void 0===y.boundTo||"vertices"===y.boundTo){G=0;for(Z=ra.length;G<Z;G++)R=Wa[ra[G]],U=y.value[R.a],V=y.value[R.b],W=y.value[R.c],y.array[A]=U.x,y.array[A+1]=U.y,y.array[A+2]=V.x,y.array[A+3]=V.y,
y.array[A+4]=W.x,y.array[A+5]=W.y,A+=6;G=0;for(Z=sa.length;G<Z;G++)R=Wa[sa[G]],U=y.value[R.a],V=y.value[R.b],W=y.value[R.c],na=y.value[R.d],y.array[A]=U.x,y.array[A+1]=U.y,y.array[A+2]=V.x,y.array[A+3]=V.y,y.array[A+4]=W.x,y.array[A+5]=W.y,y.array[A+6]=na.x,y.array[A+7]=na.y,A+=8}else{if("faces"===y.boundTo){G=0;for(Z=ra.length;G<Z;G++)W=V=U=wa=y.value[ra[G]],y.array[A]=U.x,y.array[A+1]=U.y,y.array[A+2]=V.x,y.array[A+3]=V.y,y.array[A+4]=W.x,y.array[A+5]=W.y,A+=6;G=0;for(Z=sa.length;G<Z;G++)na=W=V=
U=wa=y.value[sa[G]],y.array[A]=U.x,y.array[A+1]=U.y,y.array[A+2]=V.x,y.array[A+3]=V.y,y.array[A+4]=W.x,y.array[A+5]=W.y,y.array[A+6]=na.x,y.array[A+7]=na.y,A+=8}}else if(3===y.size){var da;da="c"===y.type?["r","g","b"]:["x","y","z"];if(void 0===y.boundTo||"vertices"===y.boundTo){G=0;for(Z=ra.length;G<Z;G++)R=Wa[ra[G]],U=y.value[R.a],V=y.value[R.b],W=y.value[R.c],y.array[A]=U[da[0]],y.array[A+1]=U[da[1]],y.array[A+2]=U[da[2]],y.array[A+3]=V[da[0]],y.array[A+4]=V[da[1]],y.array[A+5]=V[da[2]],y.array[A+
6]=W[da[0]],y.array[A+7]=W[da[1]],y.array[A+8]=W[da[2]],A+=9;G=0;for(Z=sa.length;G<Z;G++)R=Wa[sa[G]],U=y.value[R.a],V=y.value[R.b],W=y.value[R.c],na=y.value[R.d],y.array[A]=U[da[0]],y.array[A+1]=U[da[1]],y.array[A+2]=U[da[2]],y.array[A+3]=V[da[0]],y.array[A+4]=V[da[1]],y.array[A+5]=V[da[2]],y.array[A+6]=W[da[0]],y.array[A+7]=W[da[1]],y.array[A+8]=W[da[2]],y.array[A+9]=na[da[0]],y.array[A+10]=na[da[1]],y.array[A+11]=na[da[2]],A+=12}else if("faces"===y.boundTo){G=0;for(Z=ra.length;G<Z;G++)W=V=U=wa=
y.value[ra[G]],y.array[A]=U[da[0]],y.array[A+1]=U[da[1]],y.array[A+2]=U[da[2]],y.array[A+3]=V[da[0]],y.array[A+4]=V[da[1]],y.array[A+5]=V[da[2]],y.array[A+6]=W[da[0]],y.array[A+7]=W[da[1]],y.array[A+8]=W[da[2]],A+=9;G=0;for(Z=sa.length;G<Z;G++)na=W=V=U=wa=y.value[sa[G]],y.array[A]=U[da[0]],y.array[A+1]=U[da[1]],y.array[A+2]=U[da[2]],y.array[A+3]=V[da[0]],y.array[A+4]=V[da[1]],y.array[A+5]=V[da[2]],y.array[A+6]=W[da[0]],y.array[A+7]=W[da[1]],y.array[A+8]=W[da[2]],y.array[A+9]=na[da[0]],y.array[A+10]=
na[da[1]],y.array[A+11]=na[da[2]],A+=12}else if("faceVertices"===y.boundTo){G=0;for(Z=ra.length;G<Z;G++)wa=y.value[ra[G]],U=wa[0],V=wa[1],W=wa[2],y.array[A]=U[da[0]],y.array[A+1]=U[da[1]],y.array[A+2]=U[da[2]],y.array[A+3]=V[da[0]],y.array[A+4]=V[da[1]],y.array[A+5]=V[da[2]],y.array[A+6]=W[da[0]],y.array[A+7]=W[da[1]],y.array[A+8]=W[da[2]],A+=9;G=0;for(Z=sa.length;G<Z;G++)wa=y.value[sa[G]],U=wa[0],V=wa[1],W=wa[2],na=wa[3],y.array[A]=U[da[0]],y.array[A+1]=U[da[1]],y.array[A+2]=U[da[2]],y.array[A+3]=
V[da[0]],y.array[A+4]=V[da[1]],y.array[A+5]=V[da[2]],y.array[A+6]=W[da[0]],y.array[A+7]=W[da[1]],y.array[A+8]=W[da[2]],y.array[A+9]=na[da[0]],y.array[A+10]=na[da[1]],y.array[A+11]=na[da[2]],A+=12}}else if(4===y.size)if(void 0===y.boundTo||"vertices"===y.boundTo){G=0;for(Z=ra.length;G<Z;G++)R=Wa[ra[G]],U=y.value[R.a],V=y.value[R.b],W=y.value[R.c],y.array[A]=U.x,y.array[A+1]=U.y,y.array[A+2]=U.z,y.array[A+3]=U.w,y.array[A+4]=V.x,y.array[A+5]=V.y,y.array[A+6]=V.z,y.array[A+7]=V.w,y.array[A+8]=W.x,y.array[A+
9]=W.y,y.array[A+10]=W.z,y.array[A+11]=W.w,A+=12;G=0;for(Z=sa.length;G<Z;G++)R=Wa[sa[G]],U=y.value[R.a],V=y.value[R.b],W=y.value[R.c],na=y.value[R.d],y.array[A]=U.x,y.array[A+1]=U.y,y.array[A+2]=U.z,y.array[A+3]=U.w,y.array[A+4]=V.x,y.array[A+5]=V.y,y.array[A+6]=V.z,y.array[A+7]=V.w,y.array[A+8]=W.x,y.array[A+9]=W.y,y.array[A+10]=W.z,y.array[A+11]=W.w,y.array[A+12]=na.x,y.array[A+13]=na.y,y.array[A+14]=na.z,y.array[A+15]=na.w,A+=16}else if("faces"===y.boundTo){G=0;for(Z=ra.length;G<Z;G++)W=V=U=wa=
y.value[ra[G]],y.array[A]=U.x,y.array[A+1]=U.y,y.array[A+2]=U.z,y.array[A+3]=U.w,y.array[A+4]=V.x,y.array[A+5]=V.y,y.array[A+6]=V.z,y.array[A+7]=V.w,y.array[A+8]=W.x,y.array[A+9]=W.y,y.array[A+10]=W.z,y.array[A+11]=W.w,A+=12;G=0;for(Z=sa.length;G<Z;G++)na=W=V=U=wa=y.value[sa[G]],y.array[A]=U.x,y.array[A+1]=U.y,y.array[A+2]=U.z,y.array[A+3]=U.w,y.array[A+4]=V.x,y.array[A+5]=V.y,y.array[A+6]=V.z,y.array[A+7]=V.w,y.array[A+8]=W.x,y.array[A+9]=W.y,y.array[A+10]=W.z,y.array[A+11]=W.w,y.array[A+12]=na.x,
y.array[A+13]=na.y,y.array[A+14]=na.z,y.array[A+15]=na.w,A+=16}else if("faceVertices"===y.boundTo){G=0;for(Z=ra.length;G<Z;G++)wa=y.value[ra[G]],U=wa[0],V=wa[1],W=wa[2],y.array[A]=U.x,y.array[A+1]=U.y,y.array[A+2]=U.z,y.array[A+3]=U.w,y.array[A+4]=V.x,y.array[A+5]=V.y,y.array[A+6]=V.z,y.array[A+7]=V.w,y.array[A+8]=W.x,y.array[A+9]=W.y,y.array[A+10]=W.z,y.array[A+11]=W.w,A+=12;G=0;for(Z=sa.length;G<Z;G++)wa=y.value[sa[G]],U=wa[0],V=wa[1],W=wa[2],na=wa[3],y.array[A]=U.x,y.array[A+1]=U.y,y.array[A+2]=
U.z,y.array[A+3]=U.w,y.array[A+4]=V.x,y.array[A+5]=V.y,y.array[A+6]=V.z,y.array[A+7]=V.w,y.array[A+8]=W.x,y.array[A+9]=W.y,y.array[A+10]=W.z,y.array[A+11]=W.w,y.array[A+12]=na.x,y.array[A+13]=na.y,y.array[A+14]=na.z,y.array[A+15]=na.w,A+=16}l.bindBuffer(l.ARRAY_BUFFER,y.buffer);l.bufferData(l.ARRAY_BUFFER,y.array,pb)}}Bb&&(delete pa.__inittedArrays,delete pa.__colorArray,delete pa.__normalArray,delete pa.__tangentArray,delete pa.__uvArray,delete pa.__uv2Array,delete pa.__faceArray,delete pa.__vertexArray,
delete pa.__lineArray,delete pa.__skinIndexArray,delete pa.__skinWeightArray)}}ia.verticesNeedUpdate=!1;ia.morphTargetsNeedUpdate=!1;ia.elementsNeedUpdate=!1;ia.uvsNeedUpdate=!1;ia.normalsNeedUpdate=!1;ia.colorsNeedUpdate=!1;ia.tangentsNeedUpdate=!1;db.attributes&&s(db)}else if(xb instanceof THREE.Ribbon){if(ia.verticesNeedUpdate||ia.colorsNeedUpdate){var fc=ia,ed=l.DYNAMIC_DRAW,Cc=void 0,Dc=void 0,Lc=void 0,gc=void 0,Mc=void 0,fd=fc.vertices,gd=fc.colors,md=fd.length,nd=gd.length,Nc=fc.__vertexArray,
Oc=fc.__colorArray,od=fc.colorsNeedUpdate;if(fc.verticesNeedUpdate){for(Cc=0;Cc<md;Cc++)Lc=fd[Cc],gc=3*Cc,Nc[gc]=Lc.x,Nc[gc+1]=Lc.y,Nc[gc+2]=Lc.z;l.bindBuffer(l.ARRAY_BUFFER,fc.__webglVertexBuffer);l.bufferData(l.ARRAY_BUFFER,Nc,ed)}if(od){for(Dc=0;Dc<nd;Dc++)Mc=gd[Dc],gc=3*Dc,Oc[gc]=Mc.r,Oc[gc+1]=Mc.g,Oc[gc+2]=Mc.b;l.bindBuffer(l.ARRAY_BUFFER,fc.__webglColorBuffer);l.bufferData(l.ARRAY_BUFFER,Oc,ed)}}ia.verticesNeedUpdate=!1;ia.colorsNeedUpdate=!1}else if(xb instanceof THREE.Line){db=c(xb,jb);hb=
db.attributes&&q(db);if(ia.verticesNeedUpdate||ia.colorsNeedUpdate||hb){var Yb=ia,bd=l.DYNAMIC_DRAW,Ec=void 0,Fc=void 0,Pc=void 0,Da=void 0,Qc=void 0,hd=Yb.vertices,id=Yb.colors,pd=hd.length,qd=id.length,Rc=Yb.__vertexArray,Sc=Yb.__colorArray,rd=Yb.colorsNeedUpdate,cd=Yb.__webglCustomAttributesList,Tc=void 0,jd=void 0,Ta=void 0,tc=void 0,fb=void 0,ya=void 0;if(Yb.verticesNeedUpdate){for(Ec=0;Ec<pd;Ec++)Pc=hd[Ec],Da=3*Ec,Rc[Da]=Pc.x,Rc[Da+1]=Pc.y,Rc[Da+2]=Pc.z;l.bindBuffer(l.ARRAY_BUFFER,Yb.__webglVertexBuffer);
l.bufferData(l.ARRAY_BUFFER,Rc,bd)}if(rd){for(Fc=0;Fc<qd;Fc++)Qc=id[Fc],Da=3*Fc,Sc[Da]=Qc.r,Sc[Da+1]=Qc.g,Sc[Da+2]=Qc.b;l.bindBuffer(l.ARRAY_BUFFER,Yb.__webglColorBuffer);l.bufferData(l.ARRAY_BUFFER,Sc,bd)}if(cd){Tc=0;for(jd=cd.length;Tc<jd;Tc++)if(ya=cd[Tc],ya.needsUpdate&&(void 0===ya.boundTo||"vertices"===ya.boundTo)){Da=0;tc=ya.value.length;if(1===ya.size)for(Ta=0;Ta<tc;Ta++)ya.array[Ta]=ya.value[Ta];else if(2===ya.size)for(Ta=0;Ta<tc;Ta++)fb=ya.value[Ta],ya.array[Da]=fb.x,ya.array[Da+1]=fb.y,
Da+=2;else if(3===ya.size)if("c"===ya.type)for(Ta=0;Ta<tc;Ta++)fb=ya.value[Ta],ya.array[Da]=fb.r,ya.array[Da+1]=fb.g,ya.array[Da+2]=fb.b,Da+=3;else for(Ta=0;Ta<tc;Ta++)fb=ya.value[Ta],ya.array[Da]=fb.x,ya.array[Da+1]=fb.y,ya.array[Da+2]=fb.z,Da+=3;else if(4===ya.size)for(Ta=0;Ta<tc;Ta++)fb=ya.value[Ta],ya.array[Da]=fb.x,ya.array[Da+1]=fb.y,ya.array[Da+2]=fb.z,ya.array[Da+3]=fb.w,Da+=4;l.bindBuffer(l.ARRAY_BUFFER,ya.buffer);l.bufferData(l.ARRAY_BUFFER,ya.array,bd)}}}ia.verticesNeedUpdate=!1;ia.colorsNeedUpdate=
!1;db.attributes&&s(db)}else xb instanceof THREE.ParticleSystem&&(ia instanceof THREE.BufferGeometry?((ia.verticesNeedUpdate||ia.colorsNeedUpdate)&&h(ia,l.DYNAMIC_DRAW,!ia.dynamic),ia.verticesNeedUpdate=!1,ia.colorsNeedUpdate=!1):(db=c(xb,jb),hb=db.attributes&&q(db),(ia.verticesNeedUpdate||ia.colorsNeedUpdate||xb.sortParticles||hb)&&g(ia,l.DYNAMIC_DRAW,xb),ia.verticesNeedUpdate=!1,ia.colorsNeedUpdate=!1,db.attributes&&s(db)))}};this.initMaterial=function(a,b,c,d){var e,f,g,h,j,k,m,n,p;a instanceof
THREE.MeshDepthMaterial?p="depth":a instanceof THREE.MeshNormalMaterial?p="normal":a instanceof THREE.MeshBasicMaterial?p="basic":a instanceof THREE.MeshLambertMaterial?p="lambert":a instanceof THREE.MeshPhongMaterial?p="phong":a instanceof THREE.LineBasicMaterial?p="basic":a instanceof THREE.ParticleBasicMaterial&&(p="particle_basic");if(p){var q=THREE.ShaderLib[p];a.uniforms=THREE.UniformsUtils.clone(q.uniforms);a.vertexShader=q.vertexShader;a.fragmentShader=q.fragmentShader}var r,s,u;e=r=s=u=q=
0;for(f=b.length;e<f;e++)g=b[e],g.onlyShadow||(g instanceof THREE.DirectionalLight&&r++,g instanceof THREE.PointLight&&s++,g instanceof THREE.SpotLight&&u++,g instanceof THREE.HemisphereLight&&q++);s+u+r+q<=ga?e=r:(e=Math.ceil(ga*r/(s+r)),u=s=ga-e,q=e);f=s;g=u;h=q;q=r=0;for(u=b.length;q<u;q++)s=b[q],s.castShadow&&(s instanceof THREE.SpotLight&&r++,s instanceof THREE.DirectionalLight&&!s.shadowCascade&&r++);n=r;lc&&d&&d.useVertexTexture?m=1024:(b=l.getParameter(l.MAX_VERTEX_UNIFORM_VECTORS),b=Math.floor((b-
20)/4),void 0!==d&&d instanceof THREE.SkinnedMesh&&(b=Math.min(d.bones.length,b),b<d.bones.length&&console.warn("WebGLRenderer: too many bones - "+d.bones.length+", this GPU supports just "+b+" (try OpenGL instead of ANGLE)")),m=b);var t;a:{s=a.fragmentShader;u=a.vertexShader;q=a.uniforms;b=a.attributes;r=a.defines;c={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,specularMap:!!a.specularMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,sizeAttenuation:a.sizeAttenuation,
skinning:a.skinning,maxBones:m,useVertexTexture:lc&&d&&d.useVertexTexture,boneTextureWidth:d&&d.boneTextureWidth,boneTextureHeight:d&&d.boneTextureHeight,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:e,maxPointLights:f,maxSpotLights:g,maxHemiLights:h,maxShadows:n,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,
alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel,wrapAround:a.wrapAround,doubleSided:a.side===THREE.DoubleSide,flipSided:a.side===THREE.BackSide};var v,w,x;d=[];p?d.push(p):(d.push(s),d.push(u));for(w in r)d.push(w),d.push(r[w]);for(v in c)d.push(v),d.push(c[v]);p=d.join();v=0;for(w=ta.length;v<w;v++)if(d=ta[v],d.code===p){d.usedTimes++;t=d.program;break a}v=[];for(x in r)w=r[x],!1!==w&&(w="#define "+x+" "+w,v.push(w));w=v.join("\n");x=l.createProgram();v=["precision "+M+" float;",w,kc?"#define VERTEX_TEXTURES":
"",S.gammaInput?"#define GAMMA_INPUT":"",S.gammaOutput?"#define GAMMA_OUTPUT":"",S.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,"#define MAX_BONES "+c.maxBones,c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":
"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":"",c.useVertexTexture?"#define BONE_TEXTURE":"",c.boneTextureWidth?"#define N_BONE_PIXEL_X "+c.boneTextureWidth.toFixed(1):"",c.boneTextureHeight?"#define N_BONE_PIXEL_Y "+c.boneTextureHeight.toFixed(1):"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.morphNormals?"#define USE_MORPHNORMALS":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?
"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
w=["precision "+M+" float;",c.bumpMap||c.normalMap?"#extension GL_OES_standard_derivatives : enable":"",w,"#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",S.gammaInput?"#define GAMMA_INPUT":"",S.gammaOutput?"#define GAMMA_OUTPUT":"",S.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",
c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.metal?"#define METAL":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?
"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");w=F("fragment",w+s);v=F("vertex",v+u);l.attachShader(x,v);l.attachShader(x,w);l.linkProgram(x);l.getProgramParameter(x,l.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+l.getProgramParameter(x,
l.VALIDATE_STATUS)+", gl error ["+l.getError()+"]");l.deleteShader(w);l.deleteShader(v);x.uniforms={};x.attributes={};var z;v="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" ");c.useVertexTexture?v.push("boneTexture"):v.push("boneGlobalMatrices");for(z in q)v.push(z);z=v;v=0;for(w=z.length;v<w;v++)d=z[v],x.uniforms[d]=l.getUniformLocation(x,d);v="position normal uv uv2 tangent color skinIndex skinWeight".split(" ");for(z=0;z<c.maxMorphTargets;z++)v.push("morphTarget"+
z);for(z=0;z<c.maxMorphNormals;z++)v.push("morphNormal"+z);for(t in b)v.push(t);t=v;z=0;for(v=t.length;z<v;z++)w=t[z],x.attributes[w]=l.getAttribLocation(x,w);x.id=oa++;ta.push({program:x,code:p,usedTimes:1});S.info.memory.programs=ta.length;t=x}a.program=t;t=a.program.attributes;0<=t.position&&l.enableVertexAttribArray(t.position);0<=t.color&&l.enableVertexAttribArray(t.color);0<=t.normal&&l.enableVertexAttribArray(t.normal);0<=t.tangent&&l.enableVertexAttribArray(t.tangent);a.skinning&&(0<=t.skinIndex&&
0<=t.skinWeight)&&(l.enableVertexAttribArray(t.skinIndex),l.enableVertexAttribArray(t.skinWeight));if(a.attributes)for(k in a.attributes)void 0!==t[k]&&0<=t[k]&&l.enableVertexAttribArray(t[k]);if(a.morphTargets){a.numSupportedMorphTargets=0;x="morphTarget";for(k=0;k<this.maxMorphTargets;k++)z=x+k,0<=t[z]&&(l.enableVertexAttribArray(t[z]),a.numSupportedMorphTargets++)}if(a.morphNormals){a.numSupportedMorphNormals=0;x="morphNormal";for(k=0;k<this.maxMorphNormals;k++)z=x+k,0<=t[z]&&(l.enableVertexAttribArray(t[z]),
a.numSupportedMorphNormals++)}a.uniformsList=[];for(j in a.uniforms)a.uniformsList.push([a.uniforms[j],j])};this.setFaceCulling=function(a,b){a?(!b||"ccw"===b?l.frontFace(l.CCW):l.frontFace(l.CW),"back"===a?l.cullFace(l.BACK):"front"===a?l.cullFace(l.FRONT):l.cullFace(l.FRONT_AND_BACK),l.enable(l.CULL_FACE)):l.disable(l.CULL_FACE)};this.setMaterialFaces=function(a){var b=a.side===THREE.DoubleSide;a=a.side===THREE.BackSide;Ja!==b&&(b?l.disable(l.CULL_FACE):l.enable(l.CULL_FACE),Ja=b);Sa!==a&&(a?l.frontFace(l.CW):
l.frontFace(l.CCW),Sa=a)};this.setDepthTest=function(a){lb!==a&&(a?l.enable(l.DEPTH_TEST):l.disable(l.DEPTH_TEST),lb=a)};this.setDepthWrite=function(a){Ua!==a&&(l.depthMask(a),Ua=a)};this.setBlending=function(a,b,c,d){a!==La&&(a===THREE.NoBlending?l.disable(l.BLEND):a===THREE.AdditiveBlending?(l.enable(l.BLEND),l.blendEquation(l.FUNC_ADD),l.blendFunc(l.SRC_ALPHA,l.ONE)):a===THREE.SubtractiveBlending?(l.enable(l.BLEND),l.blendEquation(l.FUNC_ADD),l.blendFunc(l.ZERO,l.ONE_MINUS_SRC_COLOR)):a===THREE.MultiplyBlending?
(l.enable(l.BLEND),l.blendEquation(l.FUNC_ADD),l.blendFunc(l.ZERO,l.SRC_COLOR)):a===THREE.CustomBlending?l.enable(l.BLEND):(l.enable(l.BLEND),l.blendEquationSeparate(l.FUNC_ADD,l.FUNC_ADD),l.blendFuncSeparate(l.SRC_ALPHA,l.ONE_MINUS_SRC_ALPHA,l.ONE,l.ONE_MINUS_SRC_ALPHA)),La=a);if(a===THREE.CustomBlending){if(b!==Xa&&(l.blendEquation(J(b)),Xa=b),c!==qa||d!==Ya)l.blendFunc(J(c),J(d)),qa=c,Ya=d}else Ya=qa=Xa=null};this.setTexture=function(a,b){if(a.needsUpdate){a.__webglInit||(a.__webglInit=!0,a.__webglTexture=
l.createTexture(),S.info.memory.textures++);l.activeTexture(l.TEXTURE0+b);l.bindTexture(l.TEXTURE_2D,a.__webglTexture);l.pixelStorei(l.UNPACK_FLIP_Y_WEBGL,a.flipY);l.pixelStorei(l.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha);var c=a.image,d=0===(c.width&c.width-1)&&0===(c.height&c.height-1),e=J(a.format),f=J(a.type);E(l.TEXTURE_2D,a,d);if(a instanceof THREE.CompressedTexture)for(var f=a.mipmaps,g=0,h=f.length;g<h;g++)c=f[g],l.compressedTexImage2D(l.TEXTURE_2D,g,e,c.width,c.height,0,c.data);
else a instanceof THREE.DataTexture?l.texImage2D(l.TEXTURE_2D,0,e,c.width,c.height,0,e,f,c.data):l.texImage2D(l.TEXTURE_2D,0,e,e,f,a.image);a.generateMipmaps&&d&&l.generateMipmap(l.TEXTURE_2D);a.needsUpdate=!1;if(a.onUpdate)a.onUpdate()}else l.activeTexture(l.TEXTURE0+b),l.bindTexture(l.TEXTURE_2D,a.__webglTexture)};this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){void 0===a.depthBuffer&&(a.depthBuffer=!0);void 0===a.stencilBuffer&&(a.stencilBuffer=
!0);a.__webglTexture=l.createTexture();var c=0===(a.width&a.width-1)&&0===(a.height&a.height-1),d=J(a.format),e=J(a.type);if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];l.bindTexture(l.TEXTURE_CUBE_MAP,a.__webglTexture);E(l.TEXTURE_CUBE_MAP,a,c);for(var f=0;6>f;f++){a.__webglFramebuffer[f]=l.createFramebuffer();a.__webglRenderbuffer[f]=l.createRenderbuffer();l.texImage2D(l.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,a.height,0,d,e,null);var g=a,h=l.TEXTURE_CUBE_MAP_POSITIVE_X+f;l.bindFramebuffer(l.FRAMEBUFFER,
a.__webglFramebuffer[f]);l.framebufferTexture2D(l.FRAMEBUFFER,l.COLOR_ATTACHMENT0,h,g.__webglTexture,0);I(a.__webglRenderbuffer[f],a)}c&&l.generateMipmap(l.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=l.createFramebuffer(),a.__webglRenderbuffer=l.createRenderbuffer(),l.bindTexture(l.TEXTURE_2D,a.__webglTexture),E(l.TEXTURE_2D,a,c),l.texImage2D(l.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),d=l.TEXTURE_2D,l.bindFramebuffer(l.FRAMEBUFFER,a.__webglFramebuffer),l.framebufferTexture2D(l.FRAMEBUFFER,l.COLOR_ATTACHMENT0,
d,a.__webglTexture,0),I(a.__webglRenderbuffer,a),c&&l.generateMipmap(l.TEXTURE_2D);b?l.bindTexture(l.TEXTURE_CUBE_MAP,null):l.bindTexture(l.TEXTURE_2D,null);l.bindRenderbuffer(l.RENDERBUFFER,null);l.bindFramebuffer(l.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,e=d=0):(b=null,c=za,a=zb,d=cb,e=Ma);b!==ha&&(l.bindFramebuffer(l.FRAMEBUFFER,b),l.viewport(d,e,c,a),ha=b);Ga=c;tb=a};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);
this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};
THREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter;this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==c.format?c.format:
THREE.RGBAFormat;this.type=void 0!==c.type?c.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.generateMipmaps=!0};
THREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.anisotropy=this.anisotropy;a.minFilter=this.minFilter;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;a.generateMipmaps=this.generateMipmaps;return a};
THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen)};
THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.material=this.color=null;this.uvs=[[]];this.z=null};
THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.v4=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.material=this.color=null;this.uvs=[[]];this.z=null};
THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=this.object=null;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.material=null};
THREE.ColorUtils={adjustHSV:function(a,b,c,d){var e=THREE.ColorUtils.__hsv;THREE.ColorUtils.rgbToHsv(a,e);e.h=THREE.Math.clamp(e.h+b,0,1);e.s=THREE.Math.clamp(e.s+c,0,1);e.v=THREE.Math.clamp(e.v+d,0,1);a.setHSV(e.h,e.s,e.v)},rgbToHsv:function(a,b){var c=a.r,d=a.g,e=a.b,f=Math.max(Math.max(c,d),e),g=Math.min(Math.min(c,d),e);if(g===f)g=c=0;else{var h=f-g,g=h/f,c=(c===f?(d-e)/h:d===f?2+(e-c)/h:4+(c-d)/h)/6;0>c&&(c+=1);1<c&&(c-=1)}void 0===b&&(b={h:0,s:0,v:0});b.h=c;b.s=g;b.v=f;return b}};
THREE.ColorUtils.__hsv={h:0,s:0,v:0};
THREE.GeometryUtils={merge:function(a,b){for(var c,d,e=a.vertices.length,f=b instanceof THREE.Mesh?b.geometry:b,g=a.vertices,h=f.vertices,j=a.faces,k=f.faces,m=a.faceVertexUvs[0],p=f.faceVertexUvs[0],n={},r=0;r<a.materials.length;r++)n[a.materials[r].id]=r;b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),c=b.matrix,d=new THREE.Matrix4,d.extractRotation(c,b.scale));for(var r=0,q=h.length;r<q;r++){var s=h[r].clone();c&&c.multiplyVector3(s);g.push(s)}r=0;for(q=k.length;r<q;r++){var g=k[r],
u,v,B=g.vertexNormals,w=g.vertexColors;g instanceof THREE.Face3?u=new THREE.Face3(g.a+e,g.b+e,g.c+e):g instanceof THREE.Face4&&(u=new THREE.Face4(g.a+e,g.b+e,g.c+e,g.d+e));u.normal.copy(g.normal);d&&d.multiplyVector3(u.normal);h=0;for(s=B.length;h<s;h++)v=B[h].clone(),d&&d.multiplyVector3(v),u.vertexNormals.push(v);u.color.copy(g.color);h=0;for(s=w.length;h<s;h++)v=w[h],u.vertexColors.push(v.clone());void 0!==g.materialIndex&&(h=f.materials[g.materialIndex],s=h.id,w=n[s],void 0===w&&(w=a.materials.length,
n[s]=w,a.materials.push(h)),u.materialIndex=w);u.centroid.copy(g.centroid);c&&c.multiplyVector3(u.centroid);j.push(u)}r=0;for(q=p.length;r<q;r++){c=p[r];d=[];h=0;for(s=c.length;h<s;h++)d.push(new THREE.UV(c[h].u,c[h].v));m.push(d)}},clone:function(a){var b=new THREE.Geometry,c,d=a.vertices,e=a.faces,f=a.faceVertexUvs[0];a.materials&&(b.materials=a.materials.slice());a=0;for(c=d.length;a<c;a++)b.vertices.push(d[a].clone());a=0;for(c=e.length;a<c;a++)b.faces.push(e[a].clone());a=0;for(c=f.length;a<
c;a++){for(var d=f[a],e=[],g=0,h=d.length;g<h;g++)e.push(new THREE.UV(d[g].u,d[g].v));b.faceVertexUvs[0].push(e)}return b},randomPointInTriangle:function(a,b,c){var d,e,f,g=new THREE.Vector3,h=THREE.GeometryUtils.__v1;d=THREE.GeometryUtils.random();e=THREE.GeometryUtils.random();1<d+e&&(d=1-d,e=1-e);f=1-d-e;g.copy(a);g.multiplyScalar(d);h.copy(b);h.multiplyScalar(e);g.addSelf(h);h.copy(c);h.multiplyScalar(f);g.addSelf(h);return g},randomPointInFace:function(a,b,c){var d,e,f;if(a instanceof THREE.Face3)return d=
b.vertices[a.a],e=b.vertices[a.b],f=b.vertices[a.c],THREE.GeometryUtils.randomPointInTriangle(d,e,f);if(a instanceof THREE.Face4){d=b.vertices[a.a];e=b.vertices[a.b];f=b.vertices[a.c];b=b.vertices[a.d];var g;c?a._area1&&a._area2?(c=a._area1,g=a._area2):(c=THREE.GeometryUtils.triangleArea(d,e,b),g=THREE.GeometryUtils.triangleArea(e,f,b),a._area1=c,a._area2=g):(c=THREE.GeometryUtils.triangleArea(d,e,b),g=THREE.GeometryUtils.triangleArea(e,f,b));return THREE.GeometryUtils.random()*(c+g)<c?THREE.GeometryUtils.randomPointInTriangle(d,
e,b):THREE.GeometryUtils.randomPointInTriangle(e,f,b)}},randomPointsInGeometry:function(a,b){function c(a){function b(c,d){if(d<c)return c;var e=c+Math.floor((d-c)/2);return k[e]>a?b(c,e-1):k[e]<a?b(e+1,d):e}return b(0,k.length-1)}var d,e,f=a.faces,g=a.vertices,h=f.length,j=0,k=[],m,p,n,r;for(e=0;e<h;e++)d=f[e],d instanceof THREE.Face3?(m=g[d.a],p=g[d.b],n=g[d.c],d._area=THREE.GeometryUtils.triangleArea(m,p,n)):d instanceof THREE.Face4&&(m=g[d.a],p=g[d.b],n=g[d.c],r=g[d.d],d._area1=THREE.GeometryUtils.triangleArea(m,
p,r),d._area2=THREE.GeometryUtils.triangleArea(p,n,r),d._area=d._area1+d._area2),j+=d._area,k[e]=j;d=[];for(e=0;e<b;e++)g=THREE.GeometryUtils.random()*j,g=c(g),d[e]=THREE.GeometryUtils.randomPointInFace(f[g],a,!0);return d},triangleArea:function(a,b,c){var d,e=THREE.GeometryUtils.__v1;e.sub(a,b);d=e.length();e.sub(a,c);a=e.length();e.sub(b,c);c=e.length();b=0.5*(d+a+c);return Math.sqrt(b*(b-d)*(b-a)*(b-c))},center:function(a){a.computeBoundingBox();var b=a.boundingBox,c=new THREE.Vector3;c.add(b.min,
b.max);c.multiplyScalar(-0.5);a.applyMatrix((new THREE.Matrix4).makeTranslation(c.x,c.y,c.z));a.computeBoundingBox();return c},normalizeUVs:function(a){a=a.faceVertexUvs[0];for(var b=0,c=a.length;b<c;b++)for(var d=a[b],e=0,f=d.length;e<f;e++)1!==d[e].u&&(d[e].u-=Math.floor(d[e].u)),1!==d[e].v&&(d[e].v-=Math.floor(d[e].v))},triangulateQuads:function(a){var b,c,d,e,f=[],g=[],h=[];b=0;for(c=a.faceUvs.length;b<c;b++)g[b]=[];b=0;for(c=a.faceVertexUvs.length;b<c;b++)h[b]=[];b=0;for(c=a.faces.length;b<c;b++)if(d=
a.faces[b],d instanceof THREE.Face4){e=d.a;var j=d.b,k=d.c,m=d.d,p=new THREE.Face3,n=new THREE.Face3;p.color.copy(d.color);n.color.copy(d.color);p.materialIndex=d.materialIndex;n.materialIndex=d.materialIndex;p.a=e;p.b=j;p.c=m;n.a=j;n.b=k;n.c=m;4===d.vertexColors.length&&(p.vertexColors[0]=d.vertexColors[0].clone(),p.vertexColors[1]=d.vertexColors[1].clone(),p.vertexColors[2]=d.vertexColors[3].clone(),n.vertexColors[0]=d.vertexColors[1].clone(),n.vertexColors[1]=d.vertexColors[2].clone(),n.vertexColors[2]=
d.vertexColors[3].clone());f.push(p,n);d=0;for(e=a.faceVertexUvs.length;d<e;d++)a.faceVertexUvs[d].length&&(p=a.faceVertexUvs[d][b],j=p[1],k=p[2],m=p[3],p=[p[0].clone(),j.clone(),m.clone()],j=[j.clone(),k.clone(),m.clone()],h[d].push(p,j));d=0;for(e=a.faceUvs.length;d<e;d++)a.faceUvs[d].length&&(j=a.faceUvs[d][b],g[d].push(j,j))}else{f.push(d);d=0;for(e=a.faceUvs.length;d<e;d++)g[d].push(a.faceUvs[d][b]);d=0;for(e=a.faceVertexUvs.length;d<e;d++)h[d].push(a.faceVertexUvs[d][b])}a.faces=f;a.faceUvs=
g;a.faceVertexUvs=h;a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals();a.hasTangents&&a.computeTangents()},explode:function(a){for(var b=[],c=0,d=a.faces.length;c<d;c++){var e=b.length,f=a.faces[c];if(f instanceof THREE.Face4){var g=f.a,h=f.b,j=f.c,g=a.vertices[g],h=a.vertices[h],j=a.vertices[j],k=a.vertices[f.d];b.push(g.clone());b.push(h.clone());b.push(j.clone());b.push(k.clone());f.a=e;f.b=e+1;f.c=e+2;f.d=e+3}else g=f.a,h=f.b,j=f.c,g=a.vertices[g],h=a.vertices[h],j=a.vertices[j],
b.push(g.clone()),b.push(h.clone()),b.push(j.clone()),f.a=e,f.b=e+1,f.c=e+2}a.vertices=b;delete a.__tmpVertices},tessellate:function(a,b){var c,d,e,f,g,h,j,k,m,p,n,r,q,s,u,v,B,w,t,D=[],C=[];c=0;for(d=a.faceVertexUvs.length;c<d;c++)C[c]=[];c=0;for(d=a.faces.length;c<d;c++)if(e=a.faces[c],e instanceof THREE.Face3)if(f=e.a,g=e.b,h=e.c,k=a.vertices[f],m=a.vertices[g],p=a.vertices[h],r=k.distanceTo(m),q=m.distanceTo(p),n=k.distanceTo(p),r>b||q>b||n>b){j=a.vertices.length;w=e.clone();t=e.clone();r>=q&&
r>=n?(k=k.clone(),k.lerpSelf(m,0.5),w.a=f,w.b=j,w.c=h,t.a=j,t.b=g,t.c=h,3===e.vertexNormals.length&&(f=e.vertexNormals[0].clone(),f.lerpSelf(e.vertexNormals[1],0.5),w.vertexNormals[1].copy(f),t.vertexNormals[0].copy(f)),3===e.vertexColors.length&&(f=e.vertexColors[0].clone(),f.lerpSelf(e.vertexColors[1],0.5),w.vertexColors[1].copy(f),t.vertexColors[0].copy(f)),e=0):q>=r&&q>=n?(k=m.clone(),k.lerpSelf(p,0.5),w.a=f,w.b=g,w.c=j,t.a=j,t.b=h,t.c=f,3===e.vertexNormals.length&&(f=e.vertexNormals[1].clone(),
f.lerpSelf(e.vertexNormals[2],0.5),w.vertexNormals[2].copy(f),t.vertexNormals[0].copy(f),t.vertexNormals[1].copy(e.vertexNormals[2]),t.vertexNormals[2].copy(e.vertexNormals[0])),3===e.vertexColors.length&&(f=e.vertexColors[1].clone(),f.lerpSelf(e.vertexColors[2],0.5),w.vertexColors[2].copy(f),t.vertexColors[0].copy(f),t.vertexColors[1].copy(e.vertexColors[2]),t.vertexColors[2].copy(e.vertexColors[0])),e=1):(k=k.clone(),k.lerpSelf(p,0.5),w.a=f,w.b=g,w.c=j,t.a=j,t.b=g,t.c=h,3===e.vertexNormals.length&&
(f=e.vertexNormals[0].clone(),f.lerpSelf(e.vertexNormals[2],0.5),w.vertexNormals[2].copy(f),t.vertexNormals[0].copy(f)),3===e.vertexColors.length&&(f=e.vertexColors[0].clone(),f.lerpSelf(e.vertexColors[2],0.5),w.vertexColors[2].copy(f),t.vertexColors[0].copy(f)),e=2);D.push(w,t);a.vertices.push(k);f=0;for(g=a.faceVertexUvs.length;f<g;f++)a.faceVertexUvs[f].length&&(k=a.faceVertexUvs[f][c],t=k[0],h=k[1],w=k[2],0===e?(m=t.clone(),m.lerpSelf(h,0.5),k=[t.clone(),m.clone(),w.clone()],h=[m.clone(),h.clone(),
w.clone()]):1===e?(m=h.clone(),m.lerpSelf(w,0.5),k=[t.clone(),h.clone(),m.clone()],h=[m.clone(),w.clone(),t.clone()]):(m=t.clone(),m.lerpSelf(w,0.5),k=[t.clone(),h.clone(),m.clone()],h=[m.clone(),h.clone(),w.clone()]),C[f].push(k,h))}else{D.push(e);f=0;for(g=a.faceVertexUvs.length;f<g;f++)C[f].push(a.faceVertexUvs[f][c])}else if(f=e.a,g=e.b,h=e.c,j=e.d,k=a.vertices[f],m=a.vertices[g],p=a.vertices[h],n=a.vertices[j],r=k.distanceTo(m),q=m.distanceTo(p),s=p.distanceTo(n),u=k.distanceTo(n),r>b||q>b||
s>b||u>b){v=a.vertices.length;B=a.vertices.length+1;w=e.clone();t=e.clone();r>=q&&r>=s&&r>=u||s>=q&&s>=r&&s>=u?(r=k.clone(),r.lerpSelf(m,0.5),m=p.clone(),m.lerpSelf(n,0.5),w.a=f,w.b=v,w.c=B,w.d=j,t.a=v,t.b=g,t.c=h,t.d=B,4===e.vertexNormals.length&&(f=e.vertexNormals[0].clone(),f.lerpSelf(e.vertexNormals[1],0.5),g=e.vertexNormals[2].clone(),g.lerpSelf(e.vertexNormals[3],0.5),w.vertexNormals[1].copy(f),w.vertexNormals[2].copy(g),t.vertexNormals[0].copy(f),t.vertexNormals[3].copy(g)),4===e.vertexColors.length&&
(f=e.vertexColors[0].clone(),f.lerpSelf(e.vertexColors[1],0.5),g=e.vertexColors[2].clone(),g.lerpSelf(e.vertexColors[3],0.5),w.vertexColors[1].copy(f),w.vertexColors[2].copy(g),t.vertexColors[0].copy(f),t.vertexColors[3].copy(g)),e=0):(r=m.clone(),r.lerpSelf(p,0.5),m=n.clone(),m.lerpSelf(k,0.5),w.a=f,w.b=g,w.c=v,w.d=B,t.a=B,t.b=v,t.c=h,t.d=j,4===e.vertexNormals.length&&(f=e.vertexNormals[1].clone(),f.lerpSelf(e.vertexNormals[2],0.5),g=e.vertexNormals[3].clone(),g.lerpSelf(e.vertexNormals[0],0.5),
w.vertexNormals[2].copy(f),w.vertexNormals[3].copy(g),t.vertexNormals[0].copy(g),t.vertexNormals[1].copy(f)),4===e.vertexColors.length&&(f=e.vertexColors[1].clone(),f.lerpSelf(e.vertexColors[2],0.5),g=e.vertexColors[3].clone(),g.lerpSelf(e.vertexColors[0],0.5),w.vertexColors[2].copy(f),w.vertexColors[3].copy(g),t.vertexColors[0].copy(g),t.vertexColors[1].copy(f)),e=1);D.push(w,t);a.vertices.push(r,m);f=0;for(g=a.faceVertexUvs.length;f<g;f++)a.faceVertexUvs[f].length&&(k=a.faceVertexUvs[f][c],t=k[0],
h=k[1],w=k[2],k=k[3],0===e?(m=t.clone(),m.lerpSelf(h,0.5),p=w.clone(),p.lerpSelf(k,0.5),t=[t.clone(),m.clone(),p.clone(),k.clone()],h=[m.clone(),h.clone(),w.clone(),p.clone()]):(m=h.clone(),m.lerpSelf(w,0.5),p=k.clone(),p.lerpSelf(t,0.5),t=[t.clone(),h.clone(),m.clone(),p.clone()],h=[p.clone(),m.clone(),w.clone(),k.clone()]),C[f].push(t,h))}else{D.push(e);f=0;for(g=a.faceVertexUvs.length;f<g;f++)C[f].push(a.faceVertexUvs[f][c])}a.faces=D;a.faceVertexUvs=C}};THREE.GeometryUtils.random=THREE.Math.random16;
THREE.GeometryUtils.__v1=new THREE.Vector3;
THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(a,b,c,d){var e=new Image,f=new THREE.Texture(e,b);b=new THREE.ImageLoader;b.addEventListener("load",function(a){f.image=a.content;f.needsUpdate=!0;c&&c(f)});b.addEventListener("error",function(a){d&&d(a.message)});b.crossOrigin=this.crossOrigin;b.load(a,e);return f},loadCompressedTexture:function(a,b,c,d){var e=new THREE.CompressedTexture;e.mapping=b;var f=new XMLHttpRequest;f.onload=function(){var a=THREE.ImageUtils.parseDDS(f.response,
!0);e.format=a.format;e.mipmaps=a.mipmaps;e.image.width=a.width;e.image.height=a.height;e.generateMipmaps=!1;e.needsUpdate=!0;c&&c(e)};f.onerror=d;f.open("GET",a,!0);f.responseType="arraybuffer";f.send(null);return e},loadTextureCube:function(a,b,c,d){var e=[];e.loadCount=0;var f=new THREE.Texture;f.image=e;void 0!==b&&(f.mapping=b);f.flipY=!1;b=0;for(var g=a.length;b<g;++b){var h=new Image;e[b]=h;h.onload=function(){e.loadCount+=1;6===e.loadCount&&(f.needsUpdate=!0,c&&c())};h.onerror=d;h.crossOrigin=
this.crossOrigin;h.src=a[b]}return f},loadCompressedTextureCube:function(a,b,c,d){var e=[];e.loadCount=0;var f=new THREE.CompressedTexture;f.image=e;void 0!==b&&(f.mapping=b);f.flipY=!1;f.generateMipmaps=!1;b=function(a,b){return function(){var d=THREE.ImageUtils.parseDDS(a.response,!0);b.format=d.format;b.mipmaps=d.mipmaps;b.width=d.width;b.height=d.height;e.loadCount+=1;6===e.loadCount&&(f.format=d.format,f.needsUpdate=!0,c&&c())}};for(var g=0,h=a.length;g<h;++g){var j={};e[g]=j;var k=new XMLHttpRequest;
k.onload=b(k,j);k.onerror=d;k.open("GET",a[g],!0);k.responseType="arraybuffer";k.send(null)}return f},parseDDS:function(a,b){function c(a){return a.charCodeAt(0)+(a.charCodeAt(1)<<8)+(a.charCodeAt(2)<<16)+(a.charCodeAt(3)<<24)}var d={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},e=c("DXT1"),f=c("DXT3"),g=c("DXT5"),h=new Int32Array(a,0,31);if(542327876!==h[0])return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),d;if(!h[20]&4)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),
d;var j=h[21];switch(j){case e:e=8;d.format=THREE.RGB_S3TC_DXT1_Format;break;case f:e=16;d.format=THREE.RGBA_S3TC_DXT3_Format;break;case g:e=16;d.format=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(j&255,j>>8&255,j>>16&255,j>>24&255)),d}d.mipmapCount=1;h[2]&131072&&!1!==b&&(d.mipmapCount=Math.max(1,h[7]));d.width=h[4];d.height=h[3];h=h[1]+4;f=d.width;g=d.height;for(j=0;j<d.mipmapCount;j++){var k=Math.max(4,f)/
4*Math.max(4,g)/4*e,m={data:new Uint8Array(a,h,k),width:f,height:g};d.mipmaps.push(m);h+=k;f=Math.max(0.5*f,1);g=Math.max(0.5*g,1)}return d},getNormalMap:function(a,b){var c=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]};b|=1;var d=a.width,e=a.height,f=document.createElement("canvas");f.width=d;f.height=e;var g=f.getContext("2d");g.drawImage(a,0,0);for(var h=g.getImageData(0,0,d,e).data,j=g.createImageData(d,e),k=j.data,m=0;m<d;m++)for(var p=0;p<e;p++){var n=
0>p-1?0:p-1,r=p+1>e-1?e-1:p+1,q=0>m-1?0:m-1,s=m+1>d-1?d-1:m+1,u=[],v=[0,0,h[4*(p*d+m)]/255*b];u.push([-1,0,h[4*(p*d+q)]/255*b]);u.push([-1,-1,h[4*(n*d+q)]/255*b]);u.push([0,-1,h[4*(n*d+m)]/255*b]);u.push([1,-1,h[4*(n*d+s)]/255*b]);u.push([1,0,h[4*(p*d+s)]/255*b]);u.push([1,1,h[4*(r*d+s)]/255*b]);u.push([0,1,h[4*(r*d+m)]/255*b]);u.push([-1,1,h[4*(r*d+q)]/255*b]);n=[];q=u.length;for(r=0;r<q;r++){var s=u[r],B=u[(r+1)%q],s=[s[0]-v[0],s[1]-v[1],s[2]-v[2]],B=[B[0]-v[0],B[1]-v[1],B[2]-v[2]];n.push(c([s[1]*
B[2]-s[2]*B[1],s[2]*B[0]-s[0]*B[2],s[0]*B[1]-s[1]*B[0]]))}u=[0,0,0];for(r=0;r<n.length;r++)u[0]+=n[r][0],u[1]+=n[r][1],u[2]+=n[r][2];u[0]/=n.length;u[1]/=n.length;u[2]/=n.length;v=4*(p*d+m);k[v]=255*((u[0]+1)/2)|0;k[v+1]=255*((u[1]+1)/2)|0;k[v+2]=255*u[2]|0;k[v+3]=255}g.putImageData(j,0,0);return f},generateDataTexture:function(a,b,c){var d=a*b,e=new Uint8Array(3*d),f=Math.floor(255*c.r),g=Math.floor(255*c.g);c=Math.floor(255*c.b);for(var h=0;h<d;h++)e[3*h]=f,e[3*h+1]=g,e[3*h+2]=c;a=new THREE.DataTexture(e,
a,b,THREE.RGBFormat);a.needsUpdate=!0;return a}};THREE.SceneUtils={createMultiMaterialObject:function(a,b){for(var c=new THREE.Object3D,d=0,e=b.length;d<e;d++)c.add(new THREE.Mesh(a,b[d]));return c},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld);a.applyMatrix(d);b.remove(a);c.add(a)}};
THREE.WebGLRenderer&&(THREE.ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:null}},fragmentShader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",
vertexShader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = modelMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
normal:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,
1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:0.98},uReflectivity:{type:"f",value:0.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,
1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float uRefractionRatio;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\nvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += uDiffuseColor * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, uRefractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalMatrix * skinnedNormal.xyz;\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalMatrix * skinnedTangent.xyz;\n#else\nvNormal = normalMatrix * normal;\nvTangent = normalMatrix * tangent.xyz;\n#endif\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 mPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = mPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * mPosition;\n}\n#endif\n}"].join("\n")},
cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = modelMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( tFlip * wPos.x, wPos.yz ) );\n}"}}});
THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(a){var b=a.familyName.toLowerCase();this.faces[b]=this.faces[b]||{};this.faces[b][a.cssFontWeight]=this.faces[b][a.cssFontWeight]||{};this.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return this.faces[b][a.cssFontWeight][a.cssFontStyle]=a},drawText:function(a){var b=this.getFace(),c=this.size/b.resolution,d=0,e=
String(a).split(""),f=e.length,g=[];for(a=0;a<f;a++){var h=new THREE.Path,h=this.extractGlyphPoints(e[a],b,c,d,h),d=d+h.offset;g.push(h.path)}return{paths:g,offset:d/2}},extractGlyphPoints:function(a,b,c,d,e){var f=[],g,h,j,k,m,p,n,r,q,s,u,v=b.glyphs[a]||b.glyphs["?"];if(v){if(v.o){b=v._cachedOutline||(v._cachedOutline=v.o.split(" "));k=b.length;for(a=0;a<k;)switch(j=b[a++],j){case "m":j=b[a++]*c+d;m=b[a++]*c;e.moveTo(j,m);break;case "l":j=b[a++]*c+d;m=b[a++]*c;e.lineTo(j,m);break;case "q":j=b[a++]*
c+d;m=b[a++]*c;r=b[a++]*c+d;q=b[a++]*c;e.quadraticCurveTo(r,q,j,m);if(g=f[f.length-1]){p=g.x;n=g.y;g=1;for(h=this.divisions;g<=h;g++){var B=g/h;THREE.Shape.Utils.b2(B,p,r,j);THREE.Shape.Utils.b2(B,n,q,m)}}break;case "b":if(j=b[a++]*c+d,m=b[a++]*c,r=b[a++]*c+d,q=b[a++]*-c,s=b[a++]*c+d,u=b[a++]*-c,e.bezierCurveTo(j,m,r,q,s,u),g=f[f.length-1]){p=g.x;n=g.y;g=1;for(h=this.divisions;g<=h;g++)B=g/h,THREE.Shape.Utils.b3(B,p,r,s,j),THREE.Shape.Utils.b3(B,n,q,u,m)}}}return{offset:v.ha*c,path:e}}}};
THREE.FontUtils.generateShapes=function(a,b){b=b||{};var c=void 0!==b.curveSegments?b.curveSegments:4,d=void 0!==b.font?b.font:"helvetiker",e=void 0!==b.weight?b.weight:"normal",f=void 0!==b.style?b.style:"normal";THREE.FontUtils.size=void 0!==b.size?b.size:100;THREE.FontUtils.divisions=c;THREE.FontUtils.face=d;THREE.FontUtils.weight=e;THREE.FontUtils.style=f;c=THREE.FontUtils.drawText(a).paths;d=[];e=0;for(f=c.length;e<f;e++)Array.prototype.push.apply(d,c[e].toShapes());return d};
(function(a){var b=function(a){for(var b=a.length,e=0,f=b-1,g=0;g<b;f=g++)e+=a[f].x*a[g].y-a[g].x*a[f].y;return 0.5*e};a.Triangulate=function(a,d){var e=a.length;if(3>e)return null;var f=[],g=[],h=[],j,k,m;if(0<b(a))for(k=0;k<e;k++)g[k]=k;else for(k=0;k<e;k++)g[k]=e-1-k;var p=2*e;for(k=e-1;2<e;){if(0>=p--){console.log("Warning, unable to triangulate polygon!");break}j=k;e<=j&&(j=0);k=j+1;e<=k&&(k=0);m=k+1;e<=m&&(m=0);var n;a:{n=a;var r=j,q=k,s=m,u=e,v=g,B=void 0,w=void 0,t=void 0,D=void 0,C=void 0,
x=void 0,z=void 0,F=void 0,E=void 0,w=n[v[r]].x,t=n[v[r]].y,D=n[v[q]].x,C=n[v[q]].y,x=n[v[s]].x,z=n[v[s]].y;if(1E-10>(D-w)*(z-t)-(C-t)*(x-w))n=!1;else{for(B=0;B<u;B++)if(!(B==r||B==q||B==s)){var F=n[v[B]].x,E=n[v[B]].y,I=void 0,L=void 0,J=void 0,O=void 0,M=void 0,H=void 0,K=void 0,N=void 0,T=void 0,ba=void 0,$=void 0,P=void 0,I=J=M=void 0,I=x-D,L=z-C,J=w-x,O=t-z,M=D-w,H=C-t,K=F-w,N=E-t,T=F-D,ba=E-C,$=F-x,P=E-z,I=I*ba-L*T,M=M*N-H*K,J=J*P-O*$;if(0<=I&&0<=J&&0<=M){n=!1;break a}}n=!0}}if(n){f.push([a[g[j]],
a[g[k]],a[g[m]]]);h.push([g[j],g[k],g[m]]);j=k;for(m=k+1;m<e;j++,m++)g[j]=g[m];e--;p=2*e}}return d?h:f};a.Triangulate.area=b;return a})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(a){a=this.getUtoTmapping(a);return this.getPoint(a)};
THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c};THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c};THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};
THREE.Curve.prototype.getLengths=function(a){a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b=[],c,d=this.getPoint(0),e,f=0;b.push(0);for(e=1;e<=a;e++)c=this.getPoint(e/a),f+=c.distanceTo(d),b.push(f),d=c;return this.cacheArcLengths=b};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};
THREE.Curve.prototype.getUtoTmapping=function(a,b){var c=this.getLengths(),d=0,e=c.length,f;f=b?b:a*c[e-1];for(var g=0,h=e-1,j;g<=h;)if(d=Math.floor(g+(h-g)/2),j=c[d]-f,0>j)g=d+1;else if(0<j)h=d-1;else{h=d;break}d=h;if(c[d]==f)return d/(e-1);g=c[d];return c=(d+(f-g)/(c[d+1]-g))/(e-1)};THREE.Curve.prototype.getNormalVector=function(a){a=this.getTangent(a);return new THREE.Vector2(-a.y,a.x)};THREE.Curve.prototype.getTangent=function(a){var b=a-1E-4;a+=1E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().subSelf(b).normalize()};
THREE.Curve.prototype.getTangentAt=function(a){a=this.getUtoTmapping(a);return this.getTangent(a)};THREE.LineCurve=function(a,b){this.v1=a;this.v2=b};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().subSelf(this.v1);b.multiplyScalar(a).addSelf(this.v1);return b};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().subSelf(this.v1).normalize()};
THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a;this.v1=b;this.v2=c};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(b,a)};
THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);b=new THREE.Vector2(b,a);b.normalize();return b};THREE.CubicBezierCurve=function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);
THREE.CubicBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(b,a)};THREE.CubicBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b=new THREE.Vector2(b,a);b.normalize();return b};
THREE.SplineCurve=function(a){this.points=void 0==a?[]:a};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.getPoint=function(a){var b=new THREE.Vector2,c=[],d=this.points,e;e=(d.length-1)*a;a=Math.floor(e);e-=a;c[0]=0==a?a:a-1;c[1]=a;c[2]=a>d.length-2?d.length-1:a+1;c[3]=a>d.length-3?d.length-1:a+2;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);return b};
THREE.EllipseCurve=function(a,b,c,d,e,f,g){this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=e;this.aEndAngle=f;this.aClockwise=g};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;this.aClockwise||(a=1-a);b=this.aStartAngle+a*b;a=this.aX+this.xRadius*Math.cos(b);b=this.aY+this.yRadius*Math.sin(b);return new THREE.Vector2(a,b)};
THREE.ArcCurve=function(a,b,c,d,e,f){THREE.EllipseCurve.call(this,a,b,c,c,d,e,f)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);
THREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,e){a=0.5*(c-a);d=0.5*(d-b);var f=e*e;return(2*b-2*c+a+d)*e*f+(-3*b+3*c-2*a-d)*f+a*e+b}};
THREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.getPoint=b;return a};THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.sub(this.v2,this.v1);b.multiplyScalar(a);b.addSelf(this.v1);return b});
THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a;this.v1=b;this.v2=c},function(a){var b,c;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);c=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);a=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(b,c,a)});
THREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d},function(a){var b,c;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);a=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(b,c,a)});
THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e;a*=d.length-1;e=Math.floor(a);a-=e;c[0]=0==e?e:e-1;c[1]=e;c[2]=e>d.length-2?d.length-1:e+1;c[3]=e>d.length-3?d.length-1:e+2;e=d[c[0]];var f=d[c[1]],g=d[c[2]],c=d[c[3]];b.x=THREE.Curve.Utils.interpolate(e.x,f.x,g.x,c.x,a);b.y=THREE.Curve.Utils.interpolate(e.y,f.y,g.y,c.y,a);b.z=THREE.Curve.Utils.interpolate(e.z,f.z,g.z,c.z,a);return b});
THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e;e=(d.length-0)*a;a=Math.floor(e);e-=a;a+=0<a?0:(Math.floor(Math.abs(a)/d.length)+1)*d.length;c[0]=(a-1)%d.length;c[1]=a%d.length;c[2]=(a+1)%d.length;c[3]=(a+2)%d.length;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);b.z=THREE.Curve.Utils.interpolate(d[c[0]].z,
d[c[1]].z,d[c[2]].z,d[c[3]].z,e);return b});THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))};
THREE.CurvePath.prototype.getPoint=function(a){var b=a*this.getLength(),c=this.getCurveLengths();for(a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],b=1-b/a.getLength(),a.getPointAt(b);a++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};
THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a=[],b=0,c,d=this.curves.length;for(c=0;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a};
THREE.CurvePath.prototype.getBoundingBox=function(){var a=this.getPoints(),b,c,d,e,f,g;b=c=Number.NEGATIVE_INFINITY;e=f=Number.POSITIVE_INFINITY;var h,j,k,m,p=a[0]instanceof THREE.Vector3;m=p?new THREE.Vector3:new THREE.Vector2;j=0;for(k=a.length;j<k;j++)h=a[j],h.x>b?b=h.x:h.x<e&&(e=h.x),h.y>c?c=h.y:h.y<f&&(f=h.y),p&&(h.z>d?d=h.z:h.z<g&&(g=h.z)),m.addSelf(h);a={minX:e,minY:f,maxX:b,maxY:c,centroid:m.divideScalar(k)};p&&(a.maxZ=d,a.minZ=g);return a};
THREE.CurvePath.prototype.createPointsGeometry=function(a){a=this.getPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){a=this.getSpacedPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vector3(a[c].x,a[c].y,a[c].z||0));return b};THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)};
THREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c=this.getPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c=this.getSpacedPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};
THREE.CurvePath.prototype.getWrapPoints=function(a,b){var c=this.getBoundingBox(),d,e,f,g,h,j;d=0;for(e=a.length;d<e;d++)f=a[d],g=f.x,h=f.y,j=g/c.maxX,j=b.getUtoTmapping(j,g),g=b.getPoint(j),h=b.getNormalVector(j).multiplyScalar(h),f.x=g.x+h.x,f.y=g.y+h.y;return a};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);
THREE.Gyroscope.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?(this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=
!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;
THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)};
THREE.Path.prototype.moveTo=function(a,b){var c=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:c})};THREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args,d=new THREE.LineCurve(new THREE.Vector2(d[d.length-2],d[d.length-1]),new THREE.Vector2(a,b));this.curves.push(d);this.actions.push({action:THREE.PathActions.LINE_TO,args:c})};
THREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var e=Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args,f=new THREE.QuadraticBezierCurve(new THREE.Vector2(f[f.length-2],f[f.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d));this.curves.push(f);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:e})};
THREE.Path.prototype.bezierCurveTo=function(a,b,c,d,e,f){var g=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args,h=new THREE.CubicBezierCurve(new THREE.Vector2(h[h.length-2],h[h.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(e,f));this.curves.push(h);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:g})};
THREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a);c=new THREE.SplineCurve(c);this.curves.push(c);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})};THREE.Path.prototype.arc=function(a,b,c,d,e,f){var g=this.actions[this.actions.length-1].args;this.absarc(a+g[g.length-2],b+g[g.length-1],c,d,e,f)};
THREE.Path.prototype.absarc=function(a,b,c,d,e,f){this.absellipse(a,b,c,c,d,e,f)};THREE.Path.prototype.ellipse=function(a,b,c,d,e,f,g){var h=this.actions[this.actions.length-1].args;this.absellipse(a+h[h.length-2],b+h[h.length-1],c,d,e,f,g)};THREE.Path.prototype.absellipse=function(a,b,c,d,e,f,g){var h=Array.prototype.slice.call(arguments),j=new THREE.EllipseCurve(a,b,c,d,e,f,g);this.curves.push(j);j=j.getPoint(g?1:0);h.push(j.x);h.push(j.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:h})};
THREE.Path.prototype.getSpacedPoints=function(a){a||(a=40);for(var b=[],c=0;c<a;c++)b.push(this.getPoint(c/a));return b};
THREE.Path.prototype.getPoints=function(a,b){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(a,b);a=a||12;var c=[],d,e,f,g,h,j,k,m,p,n,r,q,s;d=0;for(e=this.actions.length;d<e;d++)switch(f=this.actions[d],g=f.action,f=f.args,g){case THREE.PathActions.MOVE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.LINE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:h=f[2];j=f[3];p=f[0];n=f[1];0<c.length?(g=c[c.length-1],r=g.x,
q=g.y):(g=this.actions[d-1].args,r=g[g.length-2],q=g[g.length-1]);for(f=1;f<=a;f++)s=f/a,g=THREE.Shape.Utils.b2(s,r,p,h),s=THREE.Shape.Utils.b2(s,q,n,j),c.push(new THREE.Vector2(g,s));break;case THREE.PathActions.BEZIER_CURVE_TO:h=f[4];j=f[5];p=f[0];n=f[1];k=f[2];m=f[3];0<c.length?(g=c[c.length-1],r=g.x,q=g.y):(g=this.actions[d-1].args,r=g[g.length-2],q=g[g.length-1]);for(f=1;f<=a;f++)s=f/a,g=THREE.Shape.Utils.b3(s,r,p,k,h),s=THREE.Shape.Utils.b3(s,q,n,m,j),c.push(new THREE.Vector2(g,s));break;case THREE.PathActions.CSPLINE_THRU:g=
this.actions[d-1].args;s=[new THREE.Vector2(g[g.length-2],g[g.length-1])];g=a*f[0].length;s=s.concat(f[0]);s=new THREE.SplineCurve(s);for(f=1;f<=g;f++)c.push(s.getPointAt(f/g));break;case THREE.PathActions.ARC:h=f[0];j=f[1];n=f[2];k=f[3];g=f[4];p=!!f[5];r=g-k;q=2*a;for(f=1;f<=q;f++)s=f/q,p||(s=1-s),s=k+s*r,g=h+n*Math.cos(s),s=j+n*Math.sin(s),c.push(new THREE.Vector2(g,s));break;case THREE.PathActions.ELLIPSE:h=f[0];j=f[1];n=f[2];m=f[3];k=f[4];g=f[5];p=!!f[6];r=g-k;q=2*a;for(f=1;f<=q;f++)s=f/q,p||
(s=1-s),s=k+s*r,g=h+n*Math.cos(s),s=j+m*Math.sin(s),c.push(new THREE.Vector2(g,s))}d=c[c.length-1];1E-10>Math.abs(d.x-c[0].x)&&1E-10>Math.abs(d.y-c[0].y)&&c.splice(c.length-1,1);b&&c.push(c[0]);return c};
THREE.Path.prototype.toShapes=function(){var a,b,c,d,e=[],f=new THREE.Path;a=0;for(b=this.actions.length;a<b;a++)c=this.actions[a],d=c.args,c=c.action,c==THREE.PathActions.MOVE_TO&&0!=f.actions.length&&(e.push(f),f=new THREE.Path),f[c].apply(f,d);0!=f.actions.length&&e.push(f);if(0==e.length)return[];var g;d=[];a=!THREE.Shape.Utils.isClockWise(e[0].getPoints());if(1==e.length)return f=e[0],g=new THREE.Shape,g.actions=f.actions,g.curves=f.curves,d.push(g),d;if(a){g=new THREE.Shape;a=0;for(b=e.length;a<
b;a++)f=e[a],THREE.Shape.Utils.isClockWise(f.getPoints())?(g.actions=f.actions,g.curves=f.curves,d.push(g),g=new THREE.Shape):g.holes.push(f)}else{a=0;for(b=e.length;a<b;a++)f=e[a],THREE.Shape.Utils.isClockWise(f.getPoints())?(g&&d.push(g),g=new THREE.Shape,g.actions=f.actions,g.curves=f.curves):g.holes.push(f);d.push(g)}return d};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);
THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};THREE.Shape.prototype.makeGeometry=function(a){return new THREE.ShapeGeometry(this,a)};THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d};THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d};
THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)};THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};
THREE.Shape.Utils={removeHoles:function(a,b){var c=a.concat(),d=c.concat(),e,f,g,h,j,k,m,p,n,r,q=[];for(j=0;j<b.length;j++){k=b[j];Array.prototype.push.apply(d,k);f=Number.POSITIVE_INFINITY;for(e=0;e<k.length;e++){n=k[e];r=[];for(p=0;p<c.length;p++)m=c[p],m=n.distanceToSquared(m),r.push(m),m<f&&(f=m,g=e,h=p)}e=0<=h-1?h-1:c.length-1;f=0<=g-1?g-1:k.length-1;var s=[k[g],c[h],c[e]];p=THREE.FontUtils.Triangulate.area(s);var u=[k[g],k[f],c[h]];n=THREE.FontUtils.Triangulate.area(u);r=h;m=g;h+=1;g+=-1;0>
h&&(h+=c.length);h%=c.length;0>g&&(g+=k.length);g%=k.length;e=0<=h-1?h-1:c.length-1;f=0<=g-1?g-1:k.length-1;s=[k[g],c[h],c[e]];s=THREE.FontUtils.Triangulate.area(s);u=[k[g],k[f],c[h]];u=THREE.FontUtils.Triangulate.area(u);p+n>s+u&&(h=r,g=m,0>h&&(h+=c.length),h%=c.length,0>g&&(g+=k.length),g%=k.length,e=0<=h-1?h-1:c.length-1,f=0<=g-1?g-1:k.length-1);p=c.slice(0,h);n=c.slice(h);r=k.slice(g);m=k.slice(0,g);f=[k[g],k[f],c[h]];q.push([k[g],c[h],c[e]]);q.push(f);c=p.concat(r).concat(m).concat(n)}return{shape:c,
isolatedPts:q,allpoints:d}},triangulateShape:function(a,b){var c=THREE.Shape.Utils.removeHoles(a,b),d=c.allpoints,e=c.isolatedPts,c=THREE.FontUtils.Triangulate(c.shape,!1),f,g,h,j,k={};f=0;for(g=d.length;f<g;f++)j=d[f].x+":"+d[f].y,void 0!==k[j]&&console.log("Duplicate point",j),k[j]=f;f=0;for(g=c.length;f<g;f++){h=c[f];for(d=0;3>d;d++)j=h[d].x+":"+h[d].y,j=k[j],void 0!==j&&(h[d]=j)}f=0;for(g=e.length;f<g;f++){h=e[f];for(d=0;3>d;d++)j=h[d].x+":"+h[d].y,j=k[j],void 0!==j&&(h[d]=j)}return c.concat(e)},
isClockWise:function(a){return 0>THREE.FontUtils.Triangulate.area(a)},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){return 3*(1-a)*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,e){return this.b3p0(a,b)+this.b3p1(a,c)+this.b3p2(a,d)+
this.b3p3(a,e)}};
THREE.AnimationHandler=function(){var a=[],b={},c={update:function(b){for(var c=0;c<a.length;c++)a[c].update(b)},addToUpdate:function(b){-1===a.indexOf(b)&&a.push(b)},removeFromUpdate:function(b){b=a.indexOf(b);-1!==b&&a.splice(b,1)},add:function(a){void 0!==b[a.name]&&console.log("THREE.AnimationHandler.add: Warning! "+a.name+" already exists in library. Overwriting.");b[a.name]=a;if(!0!==a.initialized){for(var c=0;c<a.hierarchy.length;c++){for(var d=0;d<a.hierarchy[c].keys.length;d++)if(0>a.hierarchy[c].keys[d].time&&
(a.hierarchy[c].keys[d].time=0),void 0!==a.hierarchy[c].keys[d].rot&&!(a.hierarchy[c].keys[d].rot instanceof THREE.Quaternion)){var h=a.hierarchy[c].keys[d].rot;a.hierarchy[c].keys[d].rot=new THREE.Quaternion(h[0],h[1],h[2],h[3])}if(a.hierarchy[c].keys.length&&void 0!==a.hierarchy[c].keys[0].morphTargets){h={};for(d=0;d<a.hierarchy[c].keys.length;d++)for(var j=0;j<a.hierarchy[c].keys[d].morphTargets.length;j++){var k=a.hierarchy[c].keys[d].morphTargets[j];h[k]=-1}a.hierarchy[c].usedMorphTargets=h;
for(d=0;d<a.hierarchy[c].keys.length;d++){var m={};for(k in h){for(j=0;j<a.hierarchy[c].keys[d].morphTargets.length;j++)if(a.hierarchy[c].keys[d].morphTargets[j]===k){m[k]=a.hierarchy[c].keys[d].morphTargetsInfluences[j];break}j===a.hierarchy[c].keys[d].morphTargets.length&&(m[k]=0)}a.hierarchy[c].keys[d].morphTargetsInfluences=m}}for(d=1;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].time===a.hierarchy[c].keys[d-1].time&&(a.hierarchy[c].keys.splice(d,1),d--);for(d=0;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].index=
d}d=parseInt(a.length*a.fps,10);a.JIT={};a.JIT.hierarchy=[];for(c=0;c<a.hierarchy.length;c++)a.JIT.hierarchy.push(Array(d));a.initialized=!0}},get:function(a){if("string"===typeof a){if(b[a])return b[a];console.log("THREE.AnimationHandler.get: Couldn't find animation "+a);return null}},parse:function(a){var b=[];if(a instanceof THREE.SkinnedMesh)for(var c=0;c<a.bones.length;c++)b.push(a.bones[c]);else d(a,b);return b}},d=function(a,b){b.push(a);for(var c=0;c<a.children.length;c++)d(a.children[c],
b)};c.LINEAR=0;c.CATMULLROM=1;c.CATMULLROM_FORWARD=2;return c}();THREE.Animation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=this.isPaused=!0;this.interpolationType=void 0!==c?c:THREE.AnimationHandler.LINEAR;this.points=[];this.target=new THREE.Vector3};
THREE.Animation.prototype.play=function(a,b){if(!1===this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;var c,d=this.hierarchy.length,e;for(c=0;c<d;c++){e=this.hierarchy[c];this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD&&(e.useQuaternion=!0);e.matrixAutoUpdate=!0;void 0===e.animationCache&&(e.animationCache={},e.animationCache.prevKey={pos:0,rot:0,scl:0},e.animationCache.nextKey={pos:0,rot:0,scl:0},e.animationCache.originalMatrix=e instanceof
THREE.Bone?e.skinMatrix:e.matrix);var f=e.animationCache.prevKey;e=e.animationCache.nextKey;f.pos=this.data.hierarchy[c].keys[0];f.rot=this.data.hierarchy[c].keys[0];f.scl=this.data.hierarchy[c].keys[0];e.pos=this.getNextKeyWith("pos",c,1);e.rot=this.getNextKeyWith("rot",c,1);e.scl=this.getNextKeyWith("scl",c,1)}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};
THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this)};
THREE.Animation.prototype.update=function(a){if(!1!==this.isPlaying){var b=["pos","rot","scl"],c,d,e,f,g,h,j,k,m;m=this.currentTime+=a*this.timeScale;k=this.currentTime%=this.data.length;parseInt(Math.min(k*this.data.fps,this.data.length*this.data.fps),10);for(var p=0,n=this.hierarchy.length;p<n;p++){a=this.hierarchy[p];j=a.animationCache;for(var r=0;3>r;r++){c=b[r];g=j.prevKey[c];h=j.nextKey[c];if(h.time<=m){if(k<m)if(this.loop){g=this.data.hierarchy[p].keys[0];for(h=this.getNextKeyWith(c,p,1);h.time<
k;)g=h,h=this.getNextKeyWith(c,p,h.index+1)}else{this.stop();return}else{do g=h,h=this.getNextKeyWith(c,p,h.index+1);while(h.time<k)}j.prevKey[c]=g;j.nextKey[c]=h}a.matrixAutoUpdate=!0;a.matrixWorldNeedsUpdate=!0;d=(k-g.time)/(h.time-g.time);e=g[c];f=h[c];if(0>d||1<d)console.log("THREE.Animation.update: Warning! Scale out of bounds:"+d+" on bone "+p),d=0>d?0:1;if("pos"===c)if(c=a.position,this.interpolationType===THREE.AnimationHandler.LINEAR)c.x=e[0]+(f[0]-e[0])*d,c.y=e[1]+(f[1]-e[1])*d,c.z=e[2]+
(f[2]-e[2])*d;else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)this.points[0]=this.getPrevKeyWith("pos",p,g.index-1).pos,this.points[1]=e,this.points[2]=f,this.points[3]=this.getNextKeyWith("pos",p,h.index+1).pos,d=0.33*d+0.33,e=this.interpolateCatmullRom(this.points,d),c.x=e[0],c.y=e[1],c.z=e[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(d=this.interpolateCatmullRom(this.points,1.01*d),
this.target.set(d[0],d[1],d[2]),this.target.subSelf(c),this.target.y=0,this.target.normalize(),d=Math.atan2(this.target.x,this.target.z),a.rotation.set(0,d,0))}else"rot"===c?THREE.Quaternion.slerp(e,f,a.quaternion,d):"scl"===c&&(c=a.scale,c.x=e[0]+(f[0]-e[0])*d,c.y=e[1]+(f[1]-e[1])*d,c.z=e[2]+(f[2]-e[2])*d)}}}};
THREE.Animation.prototype.interpolateCatmullRom=function(a,b){var c=[],d=[],e,f,g,h,j,k;e=(a.length-1)*b;f=Math.floor(e);e-=f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>a.length-2?f:f+1;c[3]=f>a.length-3?f:f+2;f=a[c[0]];h=a[c[1]];j=a[c[2]];k=a[c[3]];c=e*e;g=e*c;d[0]=this.interpolate(f[0],h[0],j[0],k[0],e,c,g);d[1]=this.interpolate(f[1],h[1],j[1],k[1],e,c,g);d[2]=this.interpolate(f[2],h[2],j[2],k[2],e,c,g);return d};
THREE.Animation.prototype.interpolate=function(a,b,c,d,e,f,g){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b};THREE.Animation.prototype.getNextKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c<d.length-1?c:d.length-1:c%d.length;c<d.length;c++)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[0]};
THREE.Animation.prototype.getPrevKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<c?c:0:0<=c?c:c+d.length;0<=c;c--)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[d.length-1]};
THREE.KeyFrameAnimation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=0.001;this.isPlaying=!1;this.loop=this.isPaused=!0;this.JITCompile=void 0!==c?c:!0;a=0;for(b=this.hierarchy.length;a<b;a++){c=this.data.hierarchy[a].sids;var d=this.hierarchy[a];if(this.data.hierarchy[a].keys.length&&c){for(var e=0;e<c.length;e++){var f=c[e],g=this.getNextKeyWith(f,a,0);g&&g.apply(f)}d.matrixAutoUpdate=!1;this.data.hierarchy[a].node.updateMatrix();
d.matrixWorldNeedsUpdate=!0}}};
THREE.KeyFrameAnimation.prototype.play=function(a,b){if(!this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;this.startTimeMs=b;this.startTime=1E7;this.endTime=-this.startTime;var c,d=this.hierarchy.length,e,f;for(c=0;c<d;c++)e=this.hierarchy[c],f=this.data.hierarchy[c],e.useQuaternion=!0,void 0===f.animationCache&&(f.animationCache={},f.animationCache.prevKey=null,f.animationCache.nextKey=null,f.animationCache.originalMatrix=e instanceof THREE.Bone?e.skinMatrix:
e.matrix),e=this.data.hierarchy[c].keys,e.length&&(f.animationCache.prevKey=e[0],f.animationCache.nextKey=e[1],this.startTime=Math.min(e[0].time,this.startTime),this.endTime=Math.max(e[e.length-1].time,this.endTime));this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};
THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],c=this.data.hierarchy[a];if(void 0!==c.animationCache){var d=c.animationCache.originalMatrix;b instanceof THREE.Bone?(d.copy(b.skinMatrix),b.skinMatrix=d):(d.copy(b.matrix),b.matrix=d);delete c.animationCache}}};
THREE.KeyFrameAnimation.prototype.update=function(a){if(this.isPlaying){var b,c,d,e,f=this.data.JIT.hierarchy,g,h,j;h=this.currentTime+=a*this.timeScale;g=this.currentTime%=this.data.length;g<this.startTimeMs&&(g=this.currentTime=this.startTimeMs+g);e=parseInt(Math.min(g*this.data.fps,this.data.length*this.data.fps),10);if((j=g<h)&&!this.loop){a=0;for(var k=this.hierarchy.length;a<k;a++){var m=this.data.hierarchy[a].keys,f=this.data.hierarchy[a].sids;d=m.length-1;e=this.hierarchy[a];if(m.length){for(m=
0;m<f.length;m++)g=f[m],(h=this.getPrevKeyWith(g,a,d))&&h.apply(g);this.data.hierarchy[a].node.updateMatrix();e.matrixWorldNeedsUpdate=!0}}this.stop()}else if(!(g<this.startTime)){a=0;for(k=this.hierarchy.length;a<k;a++){d=this.hierarchy[a];b=this.data.hierarchy[a];var m=b.keys,p=b.animationCache;if(this.JITCompile&&void 0!==f[a][e])d instanceof THREE.Bone?(d.skinMatrix=f[a][e],d.matrixWorldNeedsUpdate=!1):(d.matrix=f[a][e],d.matrixWorldNeedsUpdate=!0);else if(m.length){this.JITCompile&&p&&(d instanceof
THREE.Bone?d.skinMatrix=p.originalMatrix:d.matrix=p.originalMatrix);b=p.prevKey;c=p.nextKey;if(b&&c){if(c.time<=h){if(j&&this.loop){b=m[0];for(c=m[1];c.time<g;)b=c,c=m[b.index+1]}else if(!j)for(var n=m.length-1;c.time<g&&c.index!==n;)b=c,c=m[b.index+1];p.prevKey=b;p.nextKey=c}c.time>=g?b.interpolate(c,g):b.interpolate(c,c.time)}this.data.hierarchy[a].node.updateMatrix();d.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===f[0][e]){this.hierarchy[0].updateMatrixWorld(!0);for(a=0;a<this.hierarchy.length;a++)f[a][e]=
this.hierarchy[a]instanceof THREE.Bone?this.hierarchy[a].skinMatrix.clone():this.hierarchy[a].matrix.clone()}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c%=b.length;c<b.length;c++)if(b[c].hasTarget(a))return b[c];return b[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c=0<=c?c:c+b.length;0<=c;c--)if(b[c].hasTarget(a))return b[c];return b[b.length-1]};
THREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);var d=new THREE.PerspectiveCamera(90,1,a,b);d.up.set(0,-1,0);d.lookAt(new THREE.Vector3(1,0,0));this.add(d);var e=new THREE.PerspectiveCamera(90,1,a,b);e.up.set(0,-1,0);e.lookAt(new THREE.Vector3(-1,0,0));this.add(e);var f=new THREE.PerspectiveCamera(90,1,a,b);f.up.set(0,0,1);f.lookAt(new THREE.Vector3(0,1,0));this.add(f);var g=new THREE.PerspectiveCamera(90,1,a,b);g.up.set(0,0,-1);g.lookAt(new THREE.Vector3(0,-1,0));this.add(g);var h=new THREE.PerspectiveCamera(90,
1,a,b);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,1));this.add(h);var j=new THREE.PerspectiveCamera(90,1,a,b);j.up.set(0,-1,0);j.lookAt(new THREE.Vector3(0,0,-1));this.add(j);this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(a,b){var c=this.renderTarget,n=c.generateMipmaps;c.generateMipmaps=!1;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=1;a.render(b,e,c);c.activeCubeFace=
2;a.render(b,f,c);c.activeCubeFace=3;a.render(b,g,c);c.activeCubeFace=4;a.render(b,h,c);c.generateMipmaps=n;c.activeCubeFace=5;a.render(b,j,c)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CombinedCamera=function(a,b,c,d,e,f,g){THREE.Camera.call(this);this.fov=c;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2;this.cameraO=new THREE.OrthographicCamera(a/-2,a/2,b/2,b/-2,f,g);this.cameraP=new THREE.PerspectiveCamera(c,a/b,d,e);this.zoom=1;this.toPerspective()};
THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype);THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPerspectiveMode=!0;this.inOrthographicMode=!1};
THREE.CombinedCamera.prototype.toOrthographic=function(){var a=this.cameraP.aspect,b=(this.cameraP.near+this.cameraP.far)/2,b=Math.tan(this.fov/2)*b,a=2*b*a/2,b=b/this.zoom,a=a/this.zoom;this.cameraO.left=-a;this.cameraO.right=a;this.cameraO.top=b;this.cameraO.bottom=-b;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPerspectiveMode=!1;this.inOrthographicMode=!0};
THREE.CombinedCamera.prototype.setSize=function(a,b){this.cameraP.aspect=a/b;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2};THREE.CombinedCamera.prototype.setFov=function(a){this.fov=a;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())};
THREE.CombinedCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);var c=2*Math.atan(b/(2*a))*(180/Math.PI);this.setFov(c);return c};THREE.CombinedCamera.prototype.setZoom=function(a){this.zoom=a;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CircleGeometry=function(a,b,c,d){THREE.Geometry.call(this);a=a||50;c=void 0!==c?c:0;d=void 0!==d?d:2*Math.PI;b=void 0!==b?Math.max(3,b):8;var e,f=[];e=new THREE.Vector3;var g=new THREE.UV(0.5,0.5);this.vertices.push(e);f.push(g);for(e=0;e<=b;e++){var h=new THREE.Vector3;h.x=a*Math.cos(c+e/b*d);h.y=a*Math.sin(c+e/b*d);this.vertices.push(h);f.push(new THREE.UV((h.x/a+1)/2,-(h.y/a+1)/2+1))}c=new THREE.Vector3(0,0,-1);for(e=1;e<=b;e++)this.faces.push(new THREE.Face3(e,e+1,0,[c,c,c])),this.faceVertexUvs[0].push([f[e],
f[e+1],g]);this.computeCentroids();this.computeFaceNormals();this.boundingSphere={radius:a}};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.CubeGeometry=function(a,b,c,d,e,f,g,h){function j(a,b,c,g,h,j,m,n){var p,q=d||1,r=e||1,s=h/2,u=j/2,v=k.vertices.length;if("x"===a&&"y"===b||"y"===a&&"x"===b)p="z";else if("x"===a&&"z"===b||"z"===a&&"x"===b)p="y",r=f||1;else if("z"===a&&"y"===b||"y"===a&&"z"===b)p="x",q=f||1;var w=q+1,B=r+1,ba=h/q,$=j/r,P=new THREE.Vector3;P[p]=0<m?1:-1;for(h=0;h<B;h++)for(j=0;j<w;j++){var ga=new THREE.Vector3;ga[a]=(j*ba-s)*c;ga[b]=(h*$-u)*g;ga[p]=m;k.vertices.push(ga)}for(h=0;h<r;h++)for(j=0;j<q;j++)a=new THREE.Face4(j+
w*h+v,j+w*(h+1)+v,j+1+w*(h+1)+v,j+1+w*h+v),a.normal.copy(P),a.vertexNormals.push(P.clone(),P.clone(),P.clone(),P.clone()),a.materialIndex=n,k.faces.push(a),k.faceVertexUvs[0].push([new THREE.UV(j/q,1-h/r),new THREE.UV(j/q,1-(h+1)/r),new THREE.UV((j+1)/q,1-(h+1)/r),new THREE.UV((j+1)/q,1-h/r)])}THREE.Geometry.call(this);var k=this,m=a/2,p=b/2,n=c/2,r,q,s,u,v,B;if(void 0!==g){if(g instanceof Array)this.materials=g;else{this.materials=[];for(r=0;6>r;r++)this.materials.push(g)}r=0;u=1;q=2;v=3;s=4;B=5}else this.materials=
[];this.sides={px:!0,nx:!0,py:!0,ny:!0,pz:!0,nz:!0};if(void 0!=h)for(var w in h)void 0!==this.sides[w]&&(this.sides[w]=h[w]);this.sides.px&&j("z","y",-1,-1,c,b,m,r);this.sides.nx&&j("z","y",1,-1,c,b,-m,u);this.sides.py&&j("x","z",1,1,a,c,p,q);this.sides.ny&&j("x","z",1,-1,a,c,-p,v);this.sides.pz&&j("x","y",1,-1,a,b,n,s);this.sides.nz&&j("x","y",-1,-1,a,b,-n,B);this.computeCentroids();this.mergeVertices()};THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.CylinderGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);a=void 0!==a?a:20;b=void 0!==b?b:20;c=void 0!==c?c:100;var g=c/2;d=d||8;e=e||1;var h,j,k=[],m=[];for(j=0;j<=e;j++){var p=[],n=[],r=j/e,q=r*(b-a)+a;for(h=0;h<=d;h++){var s=h/d,u=new THREE.Vector3;u.x=q*Math.sin(2*s*Math.PI);u.y=-r*c+g;u.z=q*Math.cos(2*s*Math.PI);this.vertices.push(u);p.push(this.vertices.length-1);n.push(new THREE.UV(s,1-r))}k.push(p);m.push(n)}c=(b-a)/c;for(h=0;h<d;h++){0!==a?(p=this.vertices[k[0][h]].clone(),
n=this.vertices[k[0][h+1]].clone()):(p=this.vertices[k[1][h]].clone(),n=this.vertices[k[1][h+1]].clone());p.setY(Math.sqrt(p.x*p.x+p.z*p.z)*c).normalize();n.setY(Math.sqrt(n.x*n.x+n.z*n.z)*c).normalize();for(j=0;j<e;j++){var r=k[j][h],q=k[j+1][h],s=k[j+1][h+1],u=k[j][h+1],v=p.clone(),B=p.clone(),w=n.clone(),t=n.clone(),D=m[j][h].clone(),C=m[j+1][h].clone(),x=m[j+1][h+1].clone(),z=m[j][h+1].clone();this.faces.push(new THREE.Face4(r,q,s,u,[v,B,w,t]));this.faceVertexUvs[0].push([D,C,x,z])}}if(!f&&0<
a){this.vertices.push(new THREE.Vector3(0,g,0));for(h=0;h<d;h++)r=k[0][h],q=k[0][h+1],s=this.vertices.length-1,v=new THREE.Vector3(0,1,0),B=new THREE.Vector3(0,1,0),w=new THREE.Vector3(0,1,0),D=m[0][h].clone(),C=m[0][h+1].clone(),x=new THREE.UV(C.u,0),this.faces.push(new THREE.Face3(r,q,s,[v,B,w])),this.faceVertexUvs[0].push([D,C,x])}if(!f&&0<b){this.vertices.push(new THREE.Vector3(0,-g,0));for(h=0;h<d;h++)r=k[j][h+1],q=k[j][h],s=this.vertices.length-1,v=new THREE.Vector3(0,-1,0),B=new THREE.Vector3(0,
-1,0),w=new THREE.Vector3(0,-1,0),D=m[j][h+1].clone(),C=m[j][h].clone(),x=new THREE.UV(C.u,1),this.faces.push(new THREE.Face3(r,q,s,[v,B,w])),this.faceVertexUvs[0].push([D,C,x])}this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ExtrudeGeometry=function(a,b){"undefined"!==typeof a&&(THREE.Geometry.call(this),a=a instanceof Array?a:[a],this.shapebb=a[a.length-1].getBoundingBox(),this.addShapeList(a,b),this.computeCentroids(),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;d<c;d++)this.addShape(a[d],b)};
THREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){b||console.log("die");return b.clone().multiplyScalar(c).addSelf(a)}function d(a,b,c){var d=THREE.ExtrudeGeometry.__v1,e=THREE.ExtrudeGeometry.__v2,f=THREE.ExtrudeGeometry.__v3,g=THREE.ExtrudeGeometry.__v4,h=THREE.ExtrudeGeometry.__v5,j=THREE.ExtrudeGeometry.__v6;d.set(a.x-b.x,a.y-b.y);e.set(a.x-c.x,a.y-c.y);d=d.normalize();e=e.normalize();f.set(-d.y,d.x);g.set(e.y,-e.x);h.copy(a).addSelf(f);j.copy(a).addSelf(g);if(h.equals(j))return g.clone();
h.copy(b).addSelf(f);j.copy(c).addSelf(g);f=d.dot(g);g=j.subSelf(h).dot(g);0===f&&(console.log("Either infinite or no solutions!"),0===g?console.log("Its finite solutions."):console.log("Too bad, no solutions."));g/=f;return 0>g?(b=Math.atan2(b.y-a.y,b.x-a.x),a=Math.atan2(c.y-a.y,c.x-a.x),b>a&&(a+=2*Math.PI),c=(b+a)/2,a=-Math.cos(c),c=-Math.sin(c),new THREE.Vector2(a,c)):d.multiplyScalar(g).addSelf(h).subSelf(a).clone()}function e(c,d){var e,f;for(P=c.length;0<=--P;){e=P;f=P-1;0>f&&(f=c.length-1);
for(var g=0,h=n+2*m,g=0;g<h;g++){var j=T*g,k=T*(g+1),p=d+e+j,j=d+f+j,q=d+f+k,k=d+e+k,r=c,s=g,t=h,u=e,w=f,p=p+I,j=j+I,q=q+I,k=k+I;E.faces.push(new THREE.Face4(p,j,q,k,null,null,v));p=B.generateSideWallUV(E,a,r,b,p,j,q,k,s,t,u,w);E.faceVertexUvs[0].push(p)}}}function f(a,b,c){E.vertices.push(new THREE.Vector3(a,b,c))}function g(c,d,e,f){c+=I;d+=I;e+=I;E.faces.push(new THREE.Face3(c,d,e,null,null,u));c=f?B.generateBottomUV(E,a,b,c,d,e):B.generateTopUV(E,a,b,c,d,e);E.faceVertexUvs[0].push(c)}var h=void 0!==
b.amount?b.amount:100,j=void 0!==b.bevelThickness?b.bevelThickness:6,k=void 0!==b.bevelSize?b.bevelSize:j-2,m=void 0!==b.bevelSegments?b.bevelSegments:3,p=void 0!==b.bevelEnabled?b.bevelEnabled:!0,n=void 0!==b.steps?b.steps:1,r=b.extrudePath,q,s=!1,u=b.material,v=b.extrudeMaterial,B=void 0!==b.UVGenerator?b.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,w,t,D,C;r&&(q=r.getSpacedPoints(n),s=!0,p=!1,w=void 0!==b.frames?b.frames:new THREE.TubeGeometry.FrenetFrames(r,n,!1),t=new THREE.Vector3,D=new THREE.Vector3,
C=new THREE.Vector3);p||(k=j=m=0);var x,z,F,E=this,I=this.vertices.length,r=a.extractPoints(),L=r.shape,r=r.holes,J=!THREE.Shape.Utils.isClockWise(L);if(J){L=L.reverse();z=0;for(F=r.length;z<F;z++)x=r[z],THREE.Shape.Utils.isClockWise(x)&&(r[z]=x.reverse());J=!1}var O=THREE.Shape.Utils.triangulateShape(L,r),J=L;z=0;for(F=r.length;z<F;z++)x=r[z],L=L.concat(x);var M,H,K,N,T=L.length,ba=O.length,$=[],P=0,ga=J.length;M=ga-1;for(H=P+1;P<ga;P++,M++,H++)M===ga&&(M=0),H===ga&&(H=0),$[P]=d(J[P],J[M],J[H]);
var S=[],ta,oa=$.concat();z=0;for(F=r.length;z<F;z++){x=r[z];ta=[];P=0;ga=x.length;M=ga-1;for(H=P+1;P<ga;P++,M++,H++)M===ga&&(M=0),H===ga&&(H=0),ta[P]=d(x[P],x[M],x[H]);S.push(ta);oa=oa.concat(ta)}for(M=0;M<m;M++){x=M/m;K=j*(1-x);H=k*Math.sin(x*Math.PI/2);P=0;for(ga=J.length;P<ga;P++)N=c(J[P],$[P],H),f(N.x,N.y,-K);z=0;for(F=r.length;z<F;z++){x=r[z];ta=S[z];P=0;for(ga=x.length;P<ga;P++)N=c(x[P],ta[P],H),f(N.x,N.y,-K)}}H=k;for(P=0;P<T;P++)N=p?c(L[P],oa[P],H):L[P],s?(D.copy(w.normals[0]).multiplyScalar(N.x),
t.copy(w.binormals[0]).multiplyScalar(N.y),C.copy(q[0]).addSelf(D).addSelf(t),f(C.x,C.y,C.z)):f(N.x,N.y,0);for(x=1;x<=n;x++)for(P=0;P<T;P++)N=p?c(L[P],oa[P],H):L[P],s?(D.copy(w.normals[x]).multiplyScalar(N.x),t.copy(w.binormals[x]).multiplyScalar(N.y),C.copy(q[x]).addSelf(D).addSelf(t),f(C.x,C.y,C.z)):f(N.x,N.y,h/n*x);for(M=m-1;0<=M;M--){x=M/m;K=j*(1-x);H=k*Math.sin(x*Math.PI/2);P=0;for(ga=J.length;P<ga;P++)N=c(J[P],$[P],H),f(N.x,N.y,h+K);z=0;for(F=r.length;z<F;z++){x=r[z];ta=S[z];P=0;for(ga=x.length;P<
ga;P++)N=c(x[P],ta[P],H),s?f(N.x,N.y+q[n-1].y,q[n-1].x+K):f(N.x,N.y,h+K)}}if(p){j=0*T;for(P=0;P<ba;P++)h=O[P],g(h[2]+j,h[1]+j,h[0]+j,!0);j=T*(n+2*m);for(P=0;P<ba;P++)h=O[P],g(h[0]+j,h[1]+j,h[2]+j,!1)}else{for(P=0;P<ba;P++)h=O[P],g(h[2],h[1],h[0],!0);for(P=0;P<ba;P++)h=O[P],g(h[0]+T*n,h[1]+T*n,h[2]+T*n,!1)}h=0;e(J,h);h+=J.length;z=0;for(F=r.length;z<F;z++)x=r[z],e(x,h),h+=x.length};
THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d,e,f){b=a.vertices[e].x;e=a.vertices[e].y;c=a.vertices[f].x;f=a.vertices[f].y;return[new THREE.UV(a.vertices[d].x,a.vertices[d].y),new THREE.UV(b,e),new THREE.UV(c,f)]},generateBottomUV:function(a,b,c,d,e,f){return this.generateTopUV(a,b,c,d,e,f)},generateSideWallUV:function(a,b,c,d,e,f,g,h){b=a.vertices[e].x;c=a.vertices[e].y;e=a.vertices[e].z;d=a.vertices[f].x;var j=a.vertices[f].y;f=a.vertices[f].z;var k=a.vertices[g].x,m=a.vertices[g].y;
g=a.vertices[g].z;var p=a.vertices[h].x,n=a.vertices[h].y;a=a.vertices[h].z;return 0.01>Math.abs(c-j)?[new THREE.UV(b,1-e),new THREE.UV(d,1-f),new THREE.UV(k,1-g),new THREE.UV(p,1-a)]:[new THREE.UV(c,1-e),new THREE.UV(j,1-f),new THREE.UV(m,1-g),new THREE.UV(n,1-a)]}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;THREE.ExtrudeGeometry.__v5=new THREE.Vector2;
THREE.ExtrudeGeometry.__v6=new THREE.Vector2;THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this);!1===a instanceof Array&&(a=[a]);this.shapebb=a[a.length-1].getBoundingBox();this.addShapeList(a,b);this.computeCentroids();this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;c<d;c++)this.addShape(a[c],b);return this};
THREE.ShapeGeometry.prototype.addShape=function(a,b){void 0===b&&(b={});var c=b.material,d=void 0===b.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:b.UVGenerator,e,f,g,h=this.vertices.length;e=a.extractPoints();var j=e.shape,k=e.holes;if(!THREE.Shape.Utils.isClockWise(j)){j=j.reverse();e=0;for(f=k.length;e<f;e++)g=k[e],THREE.Shape.Utils.isClockWise(g)&&(k[e]=g.reverse())}var m=THREE.Shape.Utils.triangulateShape(j,k);e=0;for(f=k.length;e<f;e++)g=k[e],j=j.concat(g);k=j.length;f=m.length;for(e=
0;e<k;e++)g=j[e],this.vertices.push(new THREE.Vector3(g.x,g.y,0));for(e=0;e<f;e++)k=m[e],j=k[0]+h,g=k[1]+h,k=k[2]+h,this.faces.push(new THREE.Face3(j,g,k,null,null,c)),this.faceVertexUvs[0].push(d.generateBottomUV(this,a,b,j,g,k))};
THREE.LatheGeometry=function(a,b,c){THREE.Geometry.call(this);b=b||12;c=c||2*Math.PI;for(var d=[],e=(new THREE.Matrix4).makeRotationZ(c/b),f=0;f<a.length;f++)d[f]=a[f].clone(),this.vertices.push(d[f]);var g=b+1;for(c=0;c<g;c++)for(f=0;f<d.length;f++)d[f]=e.multiplyVector3(d[f].clone()),this.vertices.push(d[f]);for(c=0;c<b;c++){d=0;for(e=a.length;d<e-1;d++)this.faces.push(new THREE.Face4(c*e+d,(c+1)%g*e+d,(c+1)%g*e+(d+1)%e,c*e+(d+1)%e)),this.faceVertexUvs[0].push([new THREE.UV(1-c/b,d/e),new THREE.UV(1-
(c+1)/b,d/e),new THREE.UV(1-(c+1)/b,(d+1)/e),new THREE.UV(1-c/b,(d+1)/e)])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this);var e=a/2,f=b/2;c=c||1;d=d||1;var g=c+1,h=d+1,j=a/c,k=b/d,m=new THREE.Vector3(0,0,1);for(a=0;a<h;a++)for(b=0;b<g;b++)this.vertices.push(new THREE.Vector3(b*j-e,-(a*k-f),0));for(a=0;a<d;a++)for(b=0;b<c;b++)e=new THREE.Face4(b+g*a,b+g*(a+1),b+1+g*(a+1),b+1+g*a),e.normal.copy(m),e.vertexNormals.push(m.clone(),m.clone(),m.clone(),m.clone()),this.faces.push(e),this.faceVertexUvs[0].push([new THREE.UV(b/c,1-a/d),new THREE.UV(b/c,1-(a+1)/d),
new THREE.UV((b+1)/c,1-(a+1)/d),new THREE.UV((b+1)/c,1-a/d)]);this.computeCentroids()};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.SphereGeometry=function(a,b,c,d,e,f,g){THREE.Geometry.call(this);a=a||50;d=void 0!==d?d:0;e=void 0!==e?e:2*Math.PI;f=void 0!==f?f:0;g=void 0!==g?g:Math.PI;b=Math.max(3,Math.floor(b)||8);c=Math.max(2,Math.floor(c)||6);var h,j,k=[],m=[];for(j=0;j<=c;j++){var p=[],n=[];for(h=0;h<=b;h++){var r=h/b,q=j/c,s=new THREE.Vector3;s.x=-a*Math.cos(d+r*e)*Math.sin(f+q*g);s.y=a*Math.cos(f+q*g);s.z=a*Math.sin(d+r*e)*Math.sin(f+q*g);this.vertices.push(s);p.push(this.vertices.length-1);n.push(new THREE.UV(r,
1-q))}k.push(p);m.push(n)}for(j=0;j<c;j++)for(h=0;h<b;h++){d=k[j][h+1];e=k[j][h];f=k[j+1][h];g=k[j+1][h+1];var p=this.vertices[d].clone().normalize(),n=this.vertices[e].clone().normalize(),r=this.vertices[f].clone().normalize(),q=this.vertices[g].clone().normalize(),s=m[j][h+1].clone(),u=m[j][h].clone(),v=m[j+1][h].clone(),B=m[j+1][h+1].clone();Math.abs(this.vertices[d].y)==a?(this.faces.push(new THREE.Face3(d,f,g,[p,r,q])),this.faceVertexUvs[0].push([s,v,B])):Math.abs(this.vertices[f].y)==a?(this.faces.push(new THREE.Face3(d,
e,f,[p,n,r])),this.faceVertexUvs[0].push([s,u,v])):(this.faces.push(new THREE.Face4(d,e,f,g,[p,n,r,q])),this.faceVertexUvs[0].push([s,u,v,B]))}this.computeCentroids();this.computeFaceNormals();this.boundingSphere={radius:a}};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TextGeometry=function(a,b){var c=THREE.FontUtils.generateShapes(a,b);b.amount=void 0!==b.height?b.height:50;void 0===b.bevelThickness&&(b.bevelThickness=10);void 0===b.bevelSize&&(b.bevelSize=8);void 0===b.bevelEnabled&&(b.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,c,b)};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);
THREE.TorusGeometry=function(a,b,c,d,e){THREE.Geometry.call(this);this.radius=a||100;this.tube=b||40;this.radialSegments=c||8;this.tubularSegments=d||6;this.arc=e||2*Math.PI;e=new THREE.Vector3;a=[];b=[];for(c=0;c<=this.radialSegments;c++)for(d=0;d<=this.tubularSegments;d++){var f=d/this.tubularSegments*this.arc,g=2*c/this.radialSegments*Math.PI;e.x=this.radius*Math.cos(f);e.y=this.radius*Math.sin(f);var h=new THREE.Vector3;h.x=(this.radius+this.tube*Math.cos(g))*Math.cos(f);h.y=(this.radius+this.tube*
Math.cos(g))*Math.sin(f);h.z=this.tube*Math.sin(g);this.vertices.push(h);a.push(new THREE.UV(d/this.tubularSegments,c/this.radialSegments));b.push(h.clone().subSelf(e).normalize())}for(c=1;c<=this.radialSegments;c++)for(d=1;d<=this.tubularSegments;d++){e=(this.tubularSegments+1)*c+d-1;var f=(this.tubularSegments+1)*(c-1)+d-1,g=(this.tubularSegments+1)*(c-1)+d,h=(this.tubularSegments+1)*c+d,j=new THREE.Face4(e,f,g,h,[b[e],b[f],b[g],b[h]]);j.normal.addSelf(b[e]);j.normal.addSelf(b[f]);j.normal.addSelf(b[g]);
j.normal.addSelf(b[h]);j.normal.normalize();this.faces.push(j);this.faceVertexUvs[0].push([a[e].clone(),a[f].clone(),a[g].clone(),a[h].clone()])}this.computeCentroids()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TorusKnotGeometry=function(a,b,c,d,e,f,g){function h(a,b,c,d,e,f){var g=Math.cos(a);Math.cos(b);b=Math.sin(a);a*=c/d;c=Math.cos(a);g*=0.5*e*(2+c);b=0.5*e*(2+c)*b;e=0.5*f*e*Math.sin(a);return new THREE.Vector3(g,b,e)}THREE.Geometry.call(this);this.radius=a||200;this.tube=b||40;this.radialSegments=c||64;this.tubularSegments=d||8;this.p=e||2;this.q=f||3;this.heightScale=g||1;this.grid=Array(this.radialSegments);c=new THREE.Vector3;d=new THREE.Vector3;e=new THREE.Vector3;for(a=0;a<this.radialSegments;++a){this.grid[a]=
Array(this.tubularSegments);for(b=0;b<this.tubularSegments;++b){var j=2*(a/this.radialSegments)*this.p*Math.PI;g=2*(b/this.tubularSegments)*Math.PI;f=h(j,g,this.q,this.p,this.radius,this.heightScale);j=h(j+0.01,g,this.q,this.p,this.radius,this.heightScale);c.sub(j,f);d.add(j,f);e.cross(c,d);d.cross(e,c);e.normalize();d.normalize();j=-this.tube*Math.cos(g);g=this.tube*Math.sin(g);f.x+=j*d.x+g*e.x;f.y+=j*d.y+g*e.y;f.z+=j*d.z+g*e.z;this.grid[a][b]=this.vertices.push(new THREE.Vector3(f.x,f.y,f.z))-1}}for(a=
0;a<this.radialSegments;++a)for(b=0;b<this.tubularSegments;++b){e=(a+1)%this.radialSegments;f=(b+1)%this.tubularSegments;c=this.grid[a][b];d=this.grid[e][b];e=this.grid[e][f];f=this.grid[a][f];g=new THREE.UV(a/this.radialSegments,b/this.tubularSegments);var j=new THREE.UV((a+1)/this.radialSegments,b/this.tubularSegments),k=new THREE.UV((a+1)/this.radialSegments,(b+1)/this.tubularSegments),m=new THREE.UV(a/this.radialSegments,(b+1)/this.tubularSegments);this.faces.push(new THREE.Face4(c,d,e,f));this.faceVertexUvs[0].push([g,
j,k,m])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TubeGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);this.path=a;this.segments=b||64;this.radius=c||1;this.radiusSegments=d||8;this.closed=e||!1;f&&(this.debug=new THREE.Object3D);this.grid=[];var g,h;f=this.segments+1;var j,k,m,p=new THREE.Vector3,n,r,q;b=new THREE.TubeGeometry.FrenetFrames(a,b,e);n=b.tangents;r=b.normals;q=b.binormals;this.tangents=n;this.normals=r;this.binormals=q;for(b=0;b<f;b++){this.grid[b]=[];d=b/(f-1);m=a.getPointAt(d);d=n[b];g=r[b];h=q[b];this.debug&&(this.debug.add(new THREE.ArrowHelper(d,
m,c,255)),this.debug.add(new THREE.ArrowHelper(g,m,c,16711680)),this.debug.add(new THREE.ArrowHelper(h,m,c,65280)));for(d=0;d<this.radiusSegments;d++)j=2*(d/this.radiusSegments)*Math.PI,k=-this.radius*Math.cos(j),j=this.radius*Math.sin(j),p.copy(m),p.x+=k*g.x+j*h.x,p.y+=k*g.y+j*h.y,p.z+=k*g.z+j*h.z,this.grid[b][d]=this.vertices.push(new THREE.Vector3(p.x,p.y,p.z))-1}for(b=0;b<this.segments;b++)for(d=0;d<this.radiusSegments;d++)f=e?(b+1)%this.segments:b+1,p=(d+1)%this.radiusSegments,a=this.grid[b][d],
c=this.grid[f][d],f=this.grid[f][p],p=this.grid[b][p],n=new THREE.UV(b/this.segments,d/this.radiusSegments),r=new THREE.UV((b+1)/this.segments,d/this.radiusSegments),q=new THREE.UV((b+1)/this.segments,(d+1)/this.radiusSegments),g=new THREE.UV(b/this.segments,(d+1)/this.radiusSegments),this.faces.push(new THREE.Face4(a,c,f,p)),this.faceVertexUvs[0].push([n,r,q,g]);this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TubeGeometry.FrenetFrames=function(a,b,c){new THREE.Vector3;var d=new THREE.Vector3;new THREE.Vector3;var e=[],f=[],g=[],h=new THREE.Vector3,j=new THREE.Matrix4;b+=1;var k,m,p;this.tangents=e;this.normals=f;this.binormals=g;for(k=0;k<b;k++)m=k/(b-1),e[k]=a.getTangentAt(m),e[k].normalize();f[0]=new THREE.Vector3;g[0]=new THREE.Vector3;a=Number.MAX_VALUE;k=Math.abs(e[0].x);m=Math.abs(e[0].y);p=Math.abs(e[0].z);k<=a&&(a=k,d.set(1,0,0));m<=a&&(a=m,d.set(0,1,0));p<=a&&d.set(0,0,1);h.cross(e[0],d).normalize();
f[0].cross(e[0],h);g[0].cross(e[0],f[0]);for(k=1;k<b;k++)f[k]=f[k-1].clone(),g[k]=g[k-1].clone(),h.cross(e[k-1],e[k]),1E-4<h.length()&&(h.normalize(),d=Math.acos(e[k-1].dot(e[k])),j.makeRotationAxis(h,d).multiplyVector3(f[k])),g[k].cross(e[k],f[k]);if(c){d=Math.acos(f[0].dot(f[b-1]));d/=b-1;0<e[0].dot(h.cross(f[0],f[b-1]))&&(d=-d);for(k=1;k<b;k++)j.makeRotationAxis(e[k],d*k).multiplyVector3(f[k]),g[k].cross(e[k],f[k])}};
THREE.PolyhedronGeometry=function(a,b,c,d){function e(a){var b=a.normalize().clone();b.index=j.vertices.push(b)-1;var c=Math.atan2(a.z,-a.x)/2/Math.PI+0.5;a=Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+0.5;b.uv=new THREE.UV(c,1-a);return b}function f(a,b,c,d){1>d?(d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]),d.centroid.addSelf(a).addSelf(b).addSelf(c).divideScalar(3),d.normal=d.centroid.clone().normalize(),j.faces.push(d),d=Math.atan2(d.centroid.z,-d.centroid.x),
j.faceVertexUvs[0].push([h(a.uv,a,d),h(b.uv,b,d),h(c.uv,c,d)])):(d-=1,f(a,g(a,b),g(a,c),d),f(g(a,b),b,g(b,c),d),f(g(a,c),g(b,c),c,d),f(g(a,b),g(b,c),g(a,c),d))}function g(a,b){p[a.index]||(p[a.index]=[]);p[b.index]||(p[b.index]=[]);var c=p[a.index][b.index];void 0===c&&(p[a.index][b.index]=p[b.index][a.index]=c=e((new THREE.Vector3).add(a,b).divideScalar(2)));return c}function h(a,b,c){0>c&&1===a.u&&(a=new THREE.UV(a.u-1,a.v));0===b.x&&0===b.z&&(a=new THREE.UV(c/2/Math.PI+0.5,a.v));return a}THREE.Geometry.call(this);
c=c||1;d=d||0;for(var j=this,k=0,m=a.length;k<m;k++)e(new THREE.Vector3(a[k][0],a[k][1],a[k][2]));var p=[];a=this.vertices;k=0;for(m=b.length;k<m;k++)f(a[b[k][0]],a[b[k][1]],a[b[k][2]],d);this.mergeVertices();k=0;for(m=this.vertices.length;k<m;k++)this.vertices[k].multiplyScalar(c);this.computeCentroids();this.boundingSphere={radius:c}};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.IcosahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,c,0],[1,c,0],[-1,-c,0],[1,-c,0],[0,-1,c],[0,1,c],[0,-1,-c],[0,1,-c],[c,0,-1],[c,0,1],[-c,0,-1],[-c,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],a,b)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.OctahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],a,b)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],a,b)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ParametricGeometry=function(a,b,c,d){THREE.Geometry.call(this);var e=this.vertices,f=this.faces,g=this.faceVertexUvs[0];d=void 0===d?!1:d;var h,j,k,m,p=b+1;for(h=0;h<=c;h++){m=h/c;for(j=0;j<=b;j++)k=j/b,k=a(k,m),e.push(k)}var n,r,q,s;for(h=0;h<c;h++)for(j=0;j<b;j++)a=h*p+j,e=h*p+j+1,m=(h+1)*p+j,k=(h+1)*p+j+1,n=new THREE.UV(j/b,h/c),r=new THREE.UV((j+1)/b,h/c),q=new THREE.UV(j/b,(h+1)/c),s=new THREE.UV((j+1)/b,(h+1)/c),d?(f.push(new THREE.Face3(a,e,m)),f.push(new THREE.Face3(e,k,m)),g.push([n,
r,q]),g.push([r,s,q])):(f.push(new THREE.Face4(a,e,k,m)),g.push([n,r,s,q]));this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ConvexGeometry=function(a){function b(a){var b=a.length();return new THREE.UV(a.x/b,a.y/b)}THREE.Geometry.call(this);for(var c=[[0,1,2],[0,2,1]],d=3;d<a.length;d++){var e=d,f=a[e].clone(),g=f.length();f.x+=g*2E-6*(Math.random()-0.5);f.y+=g*2E-6*(Math.random()-0.5);f.z+=g*2E-6*(Math.random()-0.5);for(var g=[],h=0;h<c.length;){var j=c[h],k=f,m=a[j[0]],p;p=m;var n=a[j[1]],r=a[j[2]],q=new THREE.Vector3,s=new THREE.Vector3;q.sub(r,n);s.sub(p,n);q.crossSelf(s);q.isZero()||q.normalize();p=q;m=p.dot(m);
if(p.dot(k)>=m){for(k=0;3>k;k++){m=[j[k],j[(k+1)%3]];p=!0;for(n=0;n<g.length;n++)if(g[n][0]===m[1]&&g[n][1]===m[0]){g[n]=g[g.length-1];g.pop();p=!1;break}p&&g.push(m)}c[h]=c[c.length-1];c.pop()}else h++}for(n=0;n<g.length;n++)c.push([g[n][0],g[n][1],e])}e=0;f=Array(a.length);for(d=0;d<c.length;d++){g=c[d];for(h=0;3>h;h++)void 0===f[g[h]]&&(f[g[h]]=e++,this.vertices.push(a[g[h]])),g[h]=f[g[h]]}for(d=0;d<c.length;d++)this.faces.push(new THREE.Face3(c[d][0],c[d][1],c[d][2]));for(d=0;d<this.faces.length;d++)g=
this.faces[d],this.faceVertexUvs[0].push([b(this.vertices[g.a]),b(this.vertices[g.b]),b(this.vertices[g.c])]);this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.AxisHelper=function(a){var b=new THREE.Geometry;b.vertices.push(new THREE.Vector3,new THREE.Vector3(a||1,0,0),new THREE.Vector3,new THREE.Vector3(0,a||1,0),new THREE.Vector3,new THREE.Vector3(0,0,a||1));b.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));a=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,b,a,THREE.LinePieces)};
THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);
THREE.ArrowHelper=function(a,b,c,d){THREE.Object3D.call(this);void 0===d&&(d=16776960);void 0===c&&(c=20);var e=new THREE.Geometry;e.vertices.push(new THREE.Vector3(0,0,0));e.vertices.push(new THREE.Vector3(0,1,0));this.line=new THREE.Line(e,new THREE.LineBasicMaterial({color:d}));this.add(this.line);e=new THREE.CylinderGeometry(0,0.05,0.25,5,1);this.cone=new THREE.Mesh(e,new THREE.MeshBasicMaterial({color:d}));this.cone.position.set(0,1,0);this.add(this.cone);b instanceof THREE.Vector3&&(this.position=
b);this.setDirection(a);this.setLength(c)};THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(a){var b=(new THREE.Vector3(0,1,0)).crossSelf(a);a=Math.acos((new THREE.Vector3(0,1,0)).dot(a.clone().normalize()));this.matrix=(new THREE.Matrix4).makeRotationAxis(b.normalize(),a);this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)};THREE.ArrowHelper.prototype.setLength=function(a){this.scale.set(a,a,a)};
THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.setHex(a);this.cone.material.color.setHex(a)};
THREE.CameraHelper=function(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){d.geometry.vertices.push(new THREE.Vector3);d.geometry.colors.push(new THREE.Color(b));void 0===d.pointMap[a]&&(d.pointMap[a]=[]);d.pointMap[a].push(d.geometry.vertices.length-1)}THREE.Line.call(this);var d=this;this.geometry=new THREE.Geometry;this.material=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors});this.type=THREE.LinePieces;this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=
{};b("n1","n2",16755200);b("n2","n4",16755200);b("n4","n3",16755200);b("n3","n1",16755200);b("f1","f2",16755200);b("f2","f4",16755200);b("f4","f3",16755200);b("f3","f1",16755200);b("n1","f1",16755200);b("n2","f2",16755200);b("n3","f3",16755200);b("n4","f4",16755200);b("p","n1",16711680);b("p","n2",16711680);b("p","n3",16711680);b("p","n4",16711680);b("u1","u2",43775);b("u2","u3",43775);b("u3","u1",43775);b("c","t",16777215);b("p","c",3355443);b("cn1","cn2",3355443);b("cn3","cn4",3355443);b("cf1",
"cf2",3355443);b("cf3","cf4",3355443);this.camera=a;this.update(a)};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);
THREE.CameraHelper.prototype.update=function(){function a(a,d,e,f){THREE.CameraHelper.__v.set(d,e,f);THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c);a=b.pointMap[a];if(void 0!==a){d=0;for(e=a.length;d<e;d++)b.geometry.vertices[a[d]].copy(THREE.CameraHelper.__v)}}var b=this;THREE.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix);a("c",0,0,-1);a("t",0,0,1);a("n1",-1,-1,-1);a("n2",1,-1,-1);a("n3",-1,1,-1);a("n4",1,1,-1);a("f1",-1,-1,1);
a("f2",1,-1,1);a("f3",-1,1,1);a("f4",1,1,1);a("u1",0.7,1.1,-1);a("u2",-0.7,1.1,-1);a("u3",0,2,-1);a("cf1",-1,0,1);a("cf2",1,0,1);a("cf3",0,-1,1);a("cf4",0,1,1);a("cn1",-1,0,-1);a("cn2",1,0,-1);a("cn3",0,-1,-1);a("cn4",0,1,-1);this.geometry.verticesNeedUpdate=!0};THREE.CameraHelper.__projector=new THREE.Projector;THREE.CameraHelper.__v=new THREE.Vector3;THREE.CameraHelper.__c=new THREE.Camera;
THREE.SubdivisionModifier=function(a){this.subdivisions=void 0===a?1:a;this.useOldVertexColors=!1;this.supportUVs=!0;this.debug=!1};THREE.SubdivisionModifier.prototype.modify=function(a){for(var b=this.subdivisions;0<b--;)this.smooth(a)};THREE.GeometryUtils.orderedKey=function(a,b){return Math.min(a,b)+"_"+Math.max(a,b)};
THREE.GeometryUtils.computeEdgeFaces=function(a){function b(a,b){void 0===g[a]&&(g[a]=[]);g[a].push(b)}var c,d,e,f,g={},h=THREE.GeometryUtils.orderedKey;c=0;for(d=a.faces.length;c<d;c++)e=a.faces[c],e instanceof THREE.Face3?(f=h(e.a,e.b),b(f,c),f=h(e.b,e.c),b(f,c),f=h(e.c,e.a),b(f,c)):e instanceof THREE.Face4&&(f=h(e.a,e.b),b(f,c),f=h(e.b,e.c),b(f,c),f=h(e.c,e.d),b(f,c),f=h(e.d,e.a),b(f,c));return g};
THREE.SubdivisionModifier.prototype.smooth=function(a){function b(){m.debug&&(console&&console.assert)&&console.assert.apply(console,arguments)}function c(){m.debug&&console.log.apply(console,arguments)}function d(){console&&console.log.apply(console,arguments)}function e(a,b,d,e,g,h,n){var p=new THREE.Face4(a,b,d,e,null,g.color,g.materialIndex);if(m.useOldVertexColors){p.vertexColors=[];for(var q,r,s,t=0;4>t;t++){s=h[t];q=new THREE.Color;q.setRGB(0,0,0);for(var u=0;u<s.length;u++)r=g.vertexColors[s[u]-
1],q.r+=r.r,q.g+=r.g,q.b+=r.b;q.r/=s.length;q.g/=s.length;q.b/=s.length;p.vertexColors[t]=q}}j.push(p);m.supportUVs&&(g=[f(a,""),f(b,n),f(d,n),f(e,n)],g[0]?g[1]?g[2]?g[3]?k.push(g):c("d :( ",e+":"+n):c("c :( ",d+":"+n):c("b :( ",b+":"+n):c("a :( ",a+":"+n))}function f(a,b){var e=a+":"+b,f=w[e];return!f?(a>=s&&a<s+q.length?c("face pt"):c("edge pt"),d("warning, UV not found for",e),null):f}function g(a,b,c){var e=a+":"+b;e in w?d("dup vertexNo",a,"oldFaceNo",b,"value",c,"key",e,w[e]):w[e]=c}var h=[],
j=[],k=[],m=this,p=THREE.GeometryUtils.orderedKey,n=THREE.GeometryUtils.computeEdgeFaces,r=a.vertices,q=a.faces,s=r.length,h=r.concat(),u=[],v={},B={},w={},t,D,C,x,z,F=a.faceVertexUvs[0],E;c("originalFaces, uvs, originalVerticesLength",q.length,F.length,s);if(m.supportUVs){t=0;for(D=F.length;t<D;t++){C=0;for(x=F[t].length;C<x;C++)E=q[t]["abcd".charAt(C)],g(E,t,F[t][C])}}0==F.length&&(m.supportUVs=!1);t=0;for(var I in w)t++;t||(m.supportUVs=!1,c("no uvs"));t=0;for(D=q.length;t<D;t++)z=q[t],u.push(z.centroid),
h.push(z.centroid),m.supportUVs&&(x=new THREE.UV,z instanceof THREE.Face3?(x.u=f(z.a,t).u+f(z.b,t).u+f(z.c,t).u,x.v=f(z.a,t).v+f(z.b,t).v+f(z.c,t).v,x.u/=3,x.v/=3):z instanceof THREE.Face4&&(x.u=f(z.a,t).u+f(z.b,t).u+f(z.c,t).u+f(z.d,t).u,x.v=f(z.a,t).v+f(z.b,t).v+f(z.c,t).v+f(z.d,t).v,x.u/=4,x.v/=4),g(s+t,"",x));var n=n(a),L;D=0;var J,O;I={};F={};for(t in n){E=n[t];J=t.split("_");O=J[0];J=J[1];C=O;z=[O,J];void 0===I[C]&&(I[C]=[]);I[C].push(z);C=J;z=[O,J];void 0===I[C]&&(I[C]=[]);I[C].push(z);C=0;
for(x=E.length;C<x;C++){z=E[C];L=O;var M=z,H=t;void 0===F[L]&&(F[L]={});F[L][M]=H;L=J;M=t;void 0===F[L]&&(F[L]={});F[L][z]=M}2>E.length&&(B[t]=!0)}for(t in n)E=n[t],z=E[0],L=E[1],J=t.split("_"),O=J[0],J=J[1],x=new THREE.Vector3,b(0<E.length,"an edge without faces?!"),1==E.length?(x.addSelf(r[O]),x.addSelf(r[J]),x.multiplyScalar(0.5)):(x.addSelf(u[z]),x.addSelf(u[L]),x.addSelf(r[O]),x.addSelf(r[J]),x.multiplyScalar(0.25)),v[t]=s+q.length+D,h.push(x),D++,m.supportUVs&&(x=new THREE.UV,x.u=f(O,z).u+f(J,
z).u,x.v=f(O,z).v+f(J,z).v,x.u/=2,x.v/=2,g(v[t],z,x),2<=E.length&&(b(2==E.length,"did we plan for more than 2 edges?"),x=new THREE.UV,x.u=f(O,L).u+f(J,L).u,x.v=f(O,L).v+f(J,L).v,x.u/=2,x.v/=2,g(v[t],L,x)));c("-- Step 2 done");var K,N;x=["123","12","2","23"];L=["123","23","3","31"];var M=["123","31","1","12"],H=["1234","12","2","23"],T=["1234","23","3","34"],ba=["1234","34","4","41"],$=["1234","41","1","12"];t=0;for(D=u.length;t<D;t++)z=q[t],E=s+t,z instanceof THREE.Face3?(O=p(z.a,z.b),J=p(z.b,z.c),
K=p(z.c,z.a),e(E,v[O],z.b,v[J],z,x,t),e(E,v[J],z.c,v[K],z,L,t),e(E,v[K],z.a,v[O],z,M,t)):z instanceof THREE.Face4?(O=p(z.a,z.b),J=p(z.b,z.c),K=p(z.c,z.d),N=p(z.d,z.a),e(E,v[O],z.b,v[J],z,H,t),e(E,v[J],z.c,v[K],z,T,t),e(E,v[K],z.d,v[N],z,ba,t),e(E,v[N],z.a,v[O],z,$,t)):c("face should be a face!",z);v=new THREE.Vector3;z=new THREE.Vector3;t=0;for(D=r.length;t<D;t++)if(void 0!==I[t]){v.set(0,0,0);z.set(0,0,0);J=new THREE.Vector3(0,0,0);E=0;for(C in F[t])v.addSelf(u[C]),E++;L=0;O=I[t].length;x=E!=O;for(C=
0;C<O;C++)B[p(I[t][C][0],I[t][C][1])]&&L++;v.divideScalar(E);L=0;if(x){for(C=0;C<O;C++)if(E=I[t][C],M=1==n[p(E[0],E[1])].length)E=r[E[0]].clone().addSelf(r[E[1]]).divideScalar(2),z.addSelf(E),L++;z.divideScalar(4);b(2==L,"should have only 2 boundary edges")}else{for(C=0;C<O;C++)E=I[t][C],E=r[E[0]].clone().addSelf(r[E[1]]).divideScalar(2),z.addSelf(E);z.divideScalar(O)}J.addSelf(r[t]);x?(J.divideScalar(2),J.addSelf(z)):(J.multiplyScalar(O-3),J.addSelf(v),J.addSelf(z.multiplyScalar(2)),J.divideScalar(O));
h[t]=J}a.vertices=h;a.faces=j;a.faceVertexUvs[0]=k;delete a.__tmpVertices;a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals()};THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,e)};
THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.add=function(a,b,c,d,e,f){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===f&&(f=1);void 0===e&&(e=new THREE.Color(16777215));void 0===d&&(d=THREE.NormalBlending);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:f,color:e,blending:d})};
THREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensFlares[a],c.x=this.positionScreen.x+d*c.distance,c.y=this.positionScreen.y+e*c.distance,c.wantedRotation=0.25*c.x*Math.PI,c.rotation+=0.25*(c.wantedRotation-c.rotation)};
THREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b);this.animationsMap={};this.animationsList=[];var c=this.geometry.morphTargets.length;this.createAnimation("__default",0,c-1,c/1);this.setAnimationWeight("__default",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);
THREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){b={startFrame:b,endFrame:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=b;this.animationsList.push(b)};
THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b=/([a-z]+)(\d+)/,c,d={},e=this.geometry,f=0,g=e.morphTargets.length;f<g;f++){var h=e.morphTargets[f].name.match(b);if(h&&1<h.length){var j=h[1];d[j]||(d[j]={start:Infinity,end:-Infinity});h=d[j];f<h.start&&(h.start=f);f>h.end&&(h.end=f);c||(c=j)}}for(j in d)h=d[j],this.createAnimation(j,h.start,h.end,a);this.firstAnimation=c};
THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){if(a=this.animationsMap[a])a.direction=1,a.directionBackwards=!1};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){if(a=this.animationsMap[a])a.direction=-1,a.directionBackwards=!0};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)};
THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0;if(a=this.animationsMap[a])b=a.time;return b};
THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1;if(a=this.animationsMap[a])b=a.duration;return b};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):console.warn("animation["+a+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){if(a=this.animationsMap[a])a.active=!1};
THREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d=this.animationsList[b];if(d.active){var e=d.duration/d.length;d.time+=d.direction*a;if(d.mirroredLoop){if(d.time>d.duration||0>d.time)d.direction*=-1,d.time>d.duration&&(d.time=d.duration,d.directionBackwards=!0),0>d.time&&(d.time=0,d.directionBackwards=!1)}else d.time%=d.duration,0>d.time&&(d.time+=d.duration);var f=d.startFrame+THREE.Math.clamp(Math.floor(d.time/e),0,d.length-1),g=d.weight;
f!==d.currentFrame&&(this.morphTargetInfluences[d.lastFrame]=0,this.morphTargetInfluences[d.currentFrame]=1*g,this.morphTargetInfluences[f]=0,d.lastFrame=d.currentFrame,d.currentFrame=f);e=d.time%e/e;d.directionBackwards&&(e=1-e);this.morphTargetInfluences[d.currentFrame]=e*g;this.morphTargetInfluences[d.lastFrame]=(1-e)*g}}};
THREE.LensFlarePlugin=function(){function a(a){var c=b.createProgram(),d=b.createShader(b.FRAGMENT_SHADER),e=b.createShader(b.VERTEX_SHADER);b.shaderSource(d,a.fragmentShader);b.shaderSource(e,a.vertexShader);b.compileShader(d);b.compileShader(e);b.attachShader(c,d);b.attachShader(c,e);b.linkProgram(c);return c}var b,c,d,e,f,g,h,j,k,m,p,n,r;this.init=function(q){b=q.context;c=q;d=new Float32Array(16);e=new Uint16Array(6);q=0;d[q++]=-1;d[q++]=-1;d[q++]=0;d[q++]=0;d[q++]=1;d[q++]=-1;d[q++]=1;d[q++]=
0;d[q++]=1;d[q++]=1;d[q++]=1;d[q++]=1;d[q++]=-1;d[q++]=1;d[q++]=0;d[q++]=1;q=0;e[q++]=0;e[q++]=1;e[q++]=2;e[q++]=0;e[q++]=2;e[q++]=3;f=b.createBuffer();g=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,f);b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.bufferData(b.ELEMENT_ARRAY_BUFFER,e,b.STATIC_DRAW);h=b.createTexture();j=b.createTexture();b.bindTexture(b.TEXTURE_2D,h);b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,0,b.RGB,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,
b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);b.bindTexture(b.TEXTURE_2D,j);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);
b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);0>=b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(k=!1,m=a(THREE.ShaderFlares.lensFlare)):(k=!0,m=a(THREE.ShaderFlares.lensFlareVertexTexture));p={};n={};p.vertex=b.getAttribLocation(m,"position");p.uv=b.getAttribLocation(m,"uv");n.renderType=b.getUniformLocation(m,"renderType");n.map=b.getUniformLocation(m,"map");n.occlusionMap=b.getUniformLocation(m,"occlusionMap");n.opacity=b.getUniformLocation(m,"opacity");n.color=b.getUniformLocation(m,
"color");n.scale=b.getUniformLocation(m,"scale");n.rotation=b.getUniformLocation(m,"rotation");n.screenPosition=b.getUniformLocation(m,"screenPosition");r=!1};this.render=function(a,d,e,v){a=a.__webglFlares;var B=a.length;if(B){var w=new THREE.Vector3,t=v/e,D=0.5*e,C=0.5*v,x=16/v,z=new THREE.Vector2(x*t,x),F=new THREE.Vector3(1,1,0),E=new THREE.Vector2(1,1),I=n,x=p;b.useProgram(m);r||(b.enableVertexAttribArray(p.vertex),b.enableVertexAttribArray(p.uv),r=!0);b.uniform1i(I.occlusionMap,0);b.uniform1i(I.map,
1);b.bindBuffer(b.ARRAY_BUFFER,f);b.vertexAttribPointer(x.vertex,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(x.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.disable(b.CULL_FACE);b.depthMask(!1);var L,J,O,M,H;for(L=0;L<B;L++)if(x=16/v,z.set(x*t,x),M=a[L],w.set(M.matrixWorld.elements[12],M.matrixWorld.elements[13],M.matrixWorld.elements[14]),d.matrixWorldInverse.multiplyVector3(w),d.projectionMatrix.multiplyVector3(w),F.copy(w),E.x=F.x*D+D,E.y=F.y*C+C,k||0<E.x&&E.x<e&&0<E.y&&E.y<v){b.activeTexture(b.TEXTURE1);
b.bindTexture(b.TEXTURE_2D,h);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,E.x-8,E.y-8,16,16,0);b.uniform1i(I.renderType,0);b.uniform2f(I.scale,z.x,z.y);b.uniform3f(I.screenPosition,F.x,F.y,F.z);b.disable(b.BLEND);b.enable(b.DEPTH_TEST);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);b.activeTexture(b.TEXTURE0);b.bindTexture(b.TEXTURE_2D,j);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGBA,E.x-8,E.y-8,16,16,0);b.uniform1i(I.renderType,1);b.disable(b.DEPTH_TEST);b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,
h);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);M.positionScreen.copy(F);M.customUpdateCallback?M.customUpdateCallback(M):M.updateLensFlares();b.uniform1i(I.renderType,2);b.enable(b.BLEND);J=0;for(O=M.lensFlares.length;J<O;J++)H=M.lensFlares[J],0.001<H.opacity&&0.001<H.scale&&(F.x=H.x,F.y=H.y,F.z=H.z,x=H.size*H.scale/v,z.x=x*t,z.y=x,b.uniform3f(I.screenPosition,F.x,F.y,F.z),b.uniform2f(I.scale,z.x,z.y),b.uniform1f(I.rotation,H.rotation),b.uniform1f(I.opacity,H.opacity),b.uniform3f(I.color,H.color.r,
H.color.g,H.color.b),c.setBlending(H.blending,H.blendEquation,H.blendSrc,H.blendDst),c.setTexture(H.texture,1),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0))}b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};
THREE.ShadowMapPlugin=function(){var a,b,c,d,e,f,g=new THREE.Frustum,h=new THREE.Matrix4,j=new THREE.Vector3,k=new THREE.Vector3;this.init=function(g){a=g.context;b=g;g=THREE.ShaderLib.depthRGBA;var h=THREE.UniformsUtils.clone(g.uniforms);c=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h});d=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0});e=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,
vertexShader:g.vertexShader,uniforms:h,skinning:!0});f=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0,skinning:!0});c._shadowPass=!0;d._shadowPass=!0;e._shadowPass=!0;f._shadowPass=!0};this.render=function(a,c){b.shadowMapEnabled&&b.shadowMapAutoUpdate&&this.update(a,c)};this.update=function(m,p){var n,r,q,s,u,v,B,w,t,D=[];s=0;a.clearColor(1,1,1,1);a.disable(a.BLEND);a.enable(a.CULL_FACE);a.frontFace(a.CCW);b.shadowMapCullFrontFaces?
a.cullFace(a.FRONT):a.cullFace(a.BACK);b.setDepthTest(!0);n=0;for(r=m.__lights.length;n<r;n++)if(q=m.__lights[n],q.castShadow)if(q instanceof THREE.DirectionalLight&&q.shadowCascade)for(u=0;u<q.shadowCascadeCount;u++){var C;if(q.shadowCascadeArray[u])C=q.shadowCascadeArray[u];else{t=q;B=u;C=new THREE.DirectionalLight;C.isVirtual=!0;C.onlyShadow=!0;C.castShadow=!0;C.shadowCameraNear=t.shadowCameraNear;C.shadowCameraFar=t.shadowCameraFar;C.shadowCameraLeft=t.shadowCameraLeft;C.shadowCameraRight=t.shadowCameraRight;
C.shadowCameraBottom=t.shadowCameraBottom;C.shadowCameraTop=t.shadowCameraTop;C.shadowCameraVisible=t.shadowCameraVisible;C.shadowDarkness=t.shadowDarkness;C.shadowBias=t.shadowCascadeBias[B];C.shadowMapWidth=t.shadowCascadeWidth[B];C.shadowMapHeight=t.shadowCascadeHeight[B];C.pointsWorld=[];C.pointsFrustum=[];w=C.pointsWorld;v=C.pointsFrustum;for(var x=0;8>x;x++)w[x]=new THREE.Vector3,v[x]=new THREE.Vector3;w=t.shadowCascadeNearZ[B];t=t.shadowCascadeFarZ[B];v[0].set(-1,-1,w);v[1].set(1,-1,w);v[2].set(-1,
1,w);v[3].set(1,1,w);v[4].set(-1,-1,t);v[5].set(1,-1,t);v[6].set(-1,1,t);v[7].set(1,1,t);C.originalCamera=p;v=new THREE.Gyroscope;v.position=q.shadowCascadeOffset;v.add(C);v.add(C.target);p.add(v);q.shadowCascadeArray[u]=C;console.log("Created virtualLight",C)}B=q;w=u;t=B.shadowCascadeArray[w];t.position.copy(B.position);t.target.position.copy(B.target.position);t.lookAt(t.target);t.shadowCameraVisible=B.shadowCameraVisible;t.shadowDarkness=B.shadowDarkness;t.shadowBias=B.shadowCascadeBias[w];v=B.shadowCascadeNearZ[w];
B=B.shadowCascadeFarZ[w];t=t.pointsFrustum;t[0].z=v;t[1].z=v;t[2].z=v;t[3].z=v;t[4].z=B;t[5].z=B;t[6].z=B;t[7].z=B;D[s]=C;s++}else D[s]=q,s++;n=0;for(r=D.length;n<r;n++){q=D[n];q.shadowMap||(q.shadowMap=new THREE.WebGLRenderTarget(q.shadowMapWidth,q.shadowMapHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}),q.shadowMapSize=new THREE.Vector2(q.shadowMapWidth,q.shadowMapHeight),q.shadowMatrix=new THREE.Matrix4);if(!q.shadowCamera){if(q instanceof THREE.SpotLight)q.shadowCamera=
new THREE.PerspectiveCamera(q.shadowCameraFov,q.shadowMapWidth/q.shadowMapHeight,q.shadowCameraNear,q.shadowCameraFar);else if(q instanceof THREE.DirectionalLight)q.shadowCamera=new THREE.OrthographicCamera(q.shadowCameraLeft,q.shadowCameraRight,q.shadowCameraTop,q.shadowCameraBottom,q.shadowCameraNear,q.shadowCameraFar);else{console.error("Unsupported light type for shadow");continue}m.add(q.shadowCamera);b.autoUpdateScene&&m.updateMatrixWorld()}q.shadowCameraVisible&&!q.cameraHelper&&(q.cameraHelper=
new THREE.CameraHelper(q.shadowCamera),q.shadowCamera.add(q.cameraHelper));if(q.isVirtual&&C.originalCamera==p){u=p;s=q.shadowCamera;v=q.pointsFrustum;t=q.pointsWorld;j.set(Infinity,Infinity,Infinity);k.set(-Infinity,-Infinity,-Infinity);for(B=0;8>B;B++)w=t[B],w.copy(v[B]),THREE.ShadowMapPlugin.__projector.unprojectVector(w,u),s.matrixWorldInverse.multiplyVector3(w),w.x<j.x&&(j.x=w.x),w.x>k.x&&(k.x=w.x),w.y<j.y&&(j.y=w.y),w.y>k.y&&(k.y=w.y),w.z<j.z&&(j.z=w.z),w.z>k.z&&(k.z=w.z);s.left=j.x;s.right=
k.x;s.top=k.y;s.bottom=j.y;s.updateProjectionMatrix()}s=q.shadowMap;v=q.shadowMatrix;u=q.shadowCamera;u.position.copy(q.matrixWorld.getPosition());u.lookAt(q.target.matrixWorld.getPosition());u.updateMatrixWorld();u.matrixWorldInverse.getInverse(u.matrixWorld);q.cameraHelper&&(q.cameraHelper.visible=q.shadowCameraVisible);q.shadowCameraVisible&&q.cameraHelper.update();v.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);v.multiplySelf(u.projectionMatrix);v.multiplySelf(u.matrixWorldInverse);u._viewMatrixArray||
(u._viewMatrixArray=new Float32Array(16));u._projectionMatrixArray||(u._projectionMatrixArray=new Float32Array(16));u.matrixWorldInverse.flattenToArray(u._viewMatrixArray);u.projectionMatrix.flattenToArray(u._projectionMatrixArray);h.multiply(u.projectionMatrix,u.matrixWorldInverse);g.setFromMatrix(h);b.setRenderTarget(s);b.clear();t=m.__webglObjects;q=0;for(s=t.length;q<s;q++)if(B=t[q],v=B.object,B.render=!1,v.visible&&v.castShadow&&(!(v instanceof THREE.Mesh)||!v.frustumCulled||g.contains(v)))v._modelViewMatrix.multiply(u.matrixWorldInverse,
v.matrixWorld),B.render=!0;q=0;for(s=t.length;q<s;q++)B=t[q],B.render&&(v=B.object,B=B.buffer,x=v.material instanceof THREE.MeshFaceMaterial?v.geometry.materials[0]:v.material,w=0<v.geometry.morphTargets.length&&x.morphTargets,x=v instanceof THREE.SkinnedMesh&&x.skinning,w=v.customDepthMaterial?v.customDepthMaterial:x?w?f:e:w?d:c,B instanceof THREE.BufferGeometry?b.renderBufferDirect(u,m.__lights,null,w,B,v):b.renderBuffer(u,m.__lights,null,w,B,v));t=m.__webglObjectsImmediate;q=0;for(s=t.length;q<
s;q++)B=t[q],v=B.object,v.visible&&v.castShadow&&(v._modelViewMatrix.multiply(u.matrixWorldInverse,v.matrixWorld),b.renderImmediateObject(u,m.__lights,null,c,v))}n=b.getClearColor();r=b.getClearAlpha();a.clearColor(n.r,n.g,n.b,r);a.enable(a.BLEND);b.shadowMapCullFrontFaces&&a.cullFace(a.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;
THREE.SpritePlugin=function(){function a(a,b){return b.z-a.z}var b,c,d,e,f,g,h,j,k,m;this.init=function(a){b=a.context;c=a;d=new Float32Array(16);e=new Uint16Array(6);a=0;d[a++]=-1;d[a++]=-1;d[a++]=0;d[a++]=0;d[a++]=1;d[a++]=-1;d[a++]=1;d[a++]=0;d[a++]=1;d[a++]=1;d[a++]=1;d[a++]=1;d[a++]=-1;d[a++]=1;d[a++]=0;d[a++]=1;a=0;e[a++]=0;e[a++]=1;e[a++]=2;e[a++]=0;e[a++]=2;e[a++]=3;f=b.createBuffer();g=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,f);b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,
g);b.bufferData(b.ELEMENT_ARRAY_BUFFER,e,b.STATIC_DRAW);a=THREE.ShaderSprite.sprite;var n=b.createProgram(),r=b.createShader(b.FRAGMENT_SHADER),q=b.createShader(b.VERTEX_SHADER);b.shaderSource(r,a.fragmentShader);b.shaderSource(q,a.vertexShader);b.compileShader(r);b.compileShader(q);b.attachShader(n,r);b.attachShader(n,q);b.linkProgram(n);h=n;j={};k={};j.position=b.getAttribLocation(h,"position");j.uv=b.getAttribLocation(h,"uv");k.uvOffset=b.getUniformLocation(h,"uvOffset");k.uvScale=b.getUniformLocation(h,
"uvScale");k.rotation=b.getUniformLocation(h,"rotation");k.scale=b.getUniformLocation(h,"scale");k.alignment=b.getUniformLocation(h,"alignment");k.color=b.getUniformLocation(h,"color");k.map=b.getUniformLocation(h,"map");k.opacity=b.getUniformLocation(h,"opacity");k.useScreenCoordinates=b.getUniformLocation(h,"useScreenCoordinates");k.affectedByDistance=b.getUniformLocation(h,"affectedByDistance");k.screenPosition=b.getUniformLocation(h,"screenPosition");k.modelViewMatrix=b.getUniformLocation(h,"modelViewMatrix");
k.projectionMatrix=b.getUniformLocation(h,"projectionMatrix");m=!1};this.render=function(d,e,r,q){d=d.__webglSprites;var s=d.length;if(s){var u=j,v=k,B=q/r;r*=0.5;var w=0.5*q,t=!0;b.useProgram(h);m||(b.enableVertexAttribArray(u.position),b.enableVertexAttribArray(u.uv),m=!0);b.disable(b.CULL_FACE);b.enable(b.BLEND);b.depthMask(!0);b.bindBuffer(b.ARRAY_BUFFER,f);b.vertexAttribPointer(u.position,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(u.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);
b.uniformMatrix4fv(v.projectionMatrix,!1,e._projectionMatrixArray);b.activeTexture(b.TEXTURE0);b.uniform1i(v.map,0);for(var D,C=[],u=0;u<s;u++)D=d[u],D.visible&&0!==D.opacity&&(D.useScreenCoordinates?D.z=-D.position.z:(D._modelViewMatrix.multiply(e.matrixWorldInverse,D.matrixWorld),D.z=-D._modelViewMatrix.elements[14]));d.sort(a);for(u=0;u<s;u++)D=d[u],D.visible&&0!==D.opacity&&(D.map&&D.map.image&&D.map.image.width)&&(D.useScreenCoordinates?(b.uniform1i(v.useScreenCoordinates,1),b.uniform3f(v.screenPosition,
(D.position.x-r)/r,(w-D.position.y)/w,Math.max(0,Math.min(1,D.position.z)))):(b.uniform1i(v.useScreenCoordinates,0),b.uniform1i(v.affectedByDistance,D.affectedByDistance?1:0),b.uniformMatrix4fv(v.modelViewMatrix,!1,D._modelViewMatrix.elements)),e=D.map.image.width/(D.scaleByViewport?q:1),C[0]=e*B*D.scale.x,C[1]=e*D.scale.y,b.uniform2f(v.uvScale,D.uvScale.x,D.uvScale.y),b.uniform2f(v.uvOffset,D.uvOffset.x,D.uvOffset.y),b.uniform2f(v.alignment,D.alignment.x,D.alignment.y),b.uniform1f(v.opacity,D.opacity),
b.uniform3f(v.color,D.color.r,D.color.g,D.color.b),b.uniform1f(v.rotation,D.rotation),b.uniform2fv(v.scale,C),D.mergeWith3D&&!t?(b.enable(b.DEPTH_TEST),t=!0):!D.mergeWith3D&&t&&(b.disable(b.DEPTH_TEST),t=!1),c.setBlending(D.blending,D.blendEquation,D.blendSrc,D.blendDst),c.setTexture(D.map,0),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0));b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};
THREE.DepthPassPlugin=function(){this.enabled=!1;this.renderTarget=null;var a,b,c,d,e=new THREE.Frustum,f=new THREE.Matrix4;this.init=function(e){a=e.context;b=e;e=THREE.ShaderLib.depthRGBA;var f=THREE.UniformsUtils.clone(e.uniforms);c=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:f});d=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:f,morphTargets:!0});c._shadowPass=!0;d._shadowPass=!0};this.render=function(a,
b){this.enabled&&this.update(a,b)};this.update=function(g,h){var j,k,m,p,n,r;a.clearColor(1,1,1,1);a.disable(a.BLEND);b.setDepthTest(!0);b.autoUpdateScene&&g.updateMatrixWorld();h._viewMatrixArray||(h._viewMatrixArray=new Float32Array(16));h._projectionMatrixArray||(h._projectionMatrixArray=new Float32Array(16));h.matrixWorldInverse.getInverse(h.matrixWorld);h.matrixWorldInverse.flattenToArray(h._viewMatrixArray);h.projectionMatrix.flattenToArray(h._projectionMatrixArray);f.multiply(h.projectionMatrix,
h.matrixWorldInverse);e.setFromMatrix(f);b.setRenderTarget(this.renderTarget);b.clear();r=g.__webglObjects;j=0;for(k=r.length;j<k;j++)if(m=r[j],n=m.object,m.render=!1,n.visible&&(!(n instanceof THREE.Mesh)||!n.frustumCulled||e.contains(n)))n._modelViewMatrix.multiply(h.matrixWorldInverse,n.matrixWorld),m.render=!0;j=0;for(k=r.length;j<k;j++)m=r[j],m.render&&(n=m.object,m=m.buffer,n.material&&b.setMaterialFaces(n.material),p=n.customDepthMaterial?n.customDepthMaterial:n.geometry.morphTargets.length?
d:c,m instanceof THREE.BufferGeometry?b.renderBufferDirect(h,g.__lights,null,p,m,n):b.renderBuffer(h,g.__lights,null,p,m,n));r=g.__webglObjectsImmediate;j=0;for(k=r.length;j<k;j++)m=r[j],n=m.object,n.visible&&n.castShadow&&(n._modelViewMatrix.multiply(h.matrixWorldInverse,n.matrixWorld),b.renderImmediateObject(h,g.__lights,null,c,n));j=b.getClearColor();k=b.getClearAlpha();a.clearColor(j.r,j.g,j.b,k);a.enable(a.BLEND)}};
THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},
lensFlare:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};
THREE.ShaderSprite={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int affectedByDistance;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",
fragmentShader:"precision mediump float;\nuniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\n}"}};
var tQuery=function(a,b){if(2===arguments.length&&(arguments[0]instanceof THREE.Geometry||arguments[0]instanceof THREE.BufferGeometry||arguments[0]instanceof tQuery.Geometry)&&(arguments[1]instanceof THREE.Material||arguments[1]instanceof tQuery.Material)){var c=arguments[0]instanceof tQuery.Geometry?arguments[0].get(0):arguments[0],d=arguments[1]instanceof tQuery.Material?arguments[1].get(0):arguments[1],c=new THREE.Mesh(c,d);return tQuery(c)}c=Array.isArray(a)?a[0]:a;if(c instanceof THREE.Mesh&&
tQuery.Mesh)return new tQuery.Mesh(a);if(c instanceof THREE.DirectionalLight&&tQuery.DirectionalLight)return new tQuery.DirectionalLight(a);if(c instanceof THREE.AmbientLight&&tQuery.AmbientLight)return new tQuery.AmbientLight(a);if(c instanceof THREE.Light&&tQuery.Light)return new tQuery.Light(a);if(c instanceof THREE.Object3D&&tQuery.Object3D)return new tQuery.Object3D(a);if(c instanceof THREE.Geometry&&tQuery.Geometry)return new tQuery.Geometry(a);if(c instanceof THREE.Material&&tQuery.Material)return new tQuery.Material(a);
if("string"===typeof c&&tQuery.Object3D)return new tQuery.Object3D(a,b);console.assert(!1,"unsupported type")};tQuery.VERSION="r52.0";tQuery.data=function(a,b,c,d){console.assert(a,"invalid parameters");console.assert("string"===typeof b,"invalid parameters");a._tqData=a._tqData||{};d&&console.assert(void 0===a._tqData[b],"This key already exists "+b);c&&(a._tqData[b]=c);return a._tqData[b]};
tQuery.removeData=function(a,b,c){b instanceof Array?b.forEach(function(b){tQuery.removeData(a,b)}):(console.assert("string"===typeof b),c&&console.assert(void 0!==a._tqData[b],"This key doesnt already exists "+b),delete a._tqData[b])};tQuery.each=function(a,b){for(var c=0;c<a.length;c++)if(!1===b(a[c]))return!1;return!0};
tQuery.now=function(){var a=window.performance||{};return a.now?function(){return a.timing.navigationStart+a.now()}:a.mozNow?function(){return a.timing.navigationStart+a.mozNow()}:a.webkitNow?function(){return a.timing.navigationStart+a.webkitNow()}:a.mskitNow?function(){return a.timing.navigationStart+a.msNow()}:a.okitNow?function(){return a.timing.navigationStart+a.oNow()}:function(){return Date.now}}();
tQuery.inherit=function(a,b){var c=function(){};c.prototype=b.prototype;a.prototype=new c;a.parent=b.prototype;a.prototype.constructor=a};tQuery.extend=function(a,b,c){function d(a,b){Object.keys(b).forEach(function(c){a[c]=b[c]})}function e(a,b){for(var c in b)b[c]&&b[c].constructor&&b[c].constructor===Object?(a[c]=a[c]||{},arguments.callee(a[c],b[c])):a[c]=b[c];return a}c=(void 0!==c?c:1)?e:d;var f={};b&&c(f,b);a&&c(f,a);return f};
tQuery._pluginsOn=function(a,b,c){b=b||a.prototype||a;c=c||"";console.assert(void 0===a["register"+c]);console.assert(void 0===a["unregister"+c]);console.assert(void 0===a["registered"+c]);a["register"+c]=function(a,c){console.assert(void 0===b[a],"Conflict! Already method called: "+a);b[a]=c};a["unregister"+c]=function(a){if(!1===b.hasOwnProperty(a))throw Error("Plugin not found: "+a);delete b[a]};a["registered"+c]=function(a){return!0===b.hasOwnProperty(a)}};
tQuery.pluginsInstanceOn=function(a){tQuery._pluginsOn(a,void 0,"Instance")};tQuery.pluginsStaticOn=function(a){tQuery._pluginsOn(a,a,"Static")};tQuery.pluginsStaticOn(tQuery,tQuery);
tQuery.mixinAttributes=function(a,b){a.prototype._attrProps=tQuery.extend(a.prototype._attrProps,b);a.prototype.attr=function(a,b){a instanceof Object&&void 0===b?Object.keys(a).forEach(function(b){this.attr(b,a[b])}.bind(this)):"string"===typeof a?console.assert(-1!==Object.keys(this._attrProps).indexOf(a),"invalid property name:"+a):console.assert(!1,"invalid parameter");return void 0!==b?(b=(0,this._attrProps[a])(b),this.each(function(e){e[a]=b}),this):0===this.length?void 0:this.get(0)[a]};Object.keys(b).forEach(function(b){a.prototype[b]=
function(a){return this.attr(b,a)}}.bind(this))};tQuery.Flow=function(){var a,b=[],c=setTimeout(function(){c=null;a._next()},0);return a={destroy:function(){c&&clearTimeout(c)},par:function(c,e){(e||!(b[b.length-1]instanceof Array))&&b.push([]);b[b.length-1].push(c);return a},seq:function(b){return a.par(b,!0)},_next:function(c,e){var f=[],g=[],h=b.shift()||[],j=h.length,k=1==j;h&&h.forEach(function(b,h){b(function(b,c){f[h]=b;g[h]=c;0==--j&&a._next(k?f[0]:f,k?g[0]:g)},c,e)})}}};
tQuery.MicroeventMixin=function(a){a.bind=function(a,c){void 0===this._events&&(this._events={});this._events[a]=this._events[a]||[];this._events[a].push(c);return c};a.unbind=function(a,c){void 0===this._events&&(this._events={});!1!==a in this._events&&this._events[a].splice(this._events[a].indexOf(c),1)};a.trigger=function(a){void 0===this._events&&(this._events={});if(void 0!==this._events[a])for(var c=this._events[a].slice(),d=0;d<c.length;d++)c[d].apply(this,Array.prototype.slice.call(arguments,
1))};a.addEventListener=function(a,c){this.bind(a,c);return this};a.removeEventListener=function(a,c){this.unbind(a,c);return this};a.dispatchEvent=function(a){this.trigger.apply(this,arguments);return this}};tQuery.convert={};tQuery.convert.toThreeColor=function(a){if(1===arguments.length&&"number"===typeof a)return new THREE.Color(a);if(1===arguments.length&&a instanceof THREE.Color)return a;console.assert(!1,"invalid parameter")};
tQuery.convert.toNumber=function(a){if(1===arguments.length&&"number"===typeof a)return a;console.assert(!1,"invalid parameter")};tQuery.convert.toNumberZeroToOne=function(a){if(1===arguments.length&&"number"===typeof a)return a=Math.min(a,1),a=Math.max(a,0);console.assert(!1,"invalid parameter")};tQuery.convert.toInteger=function(a){if(1===arguments.length&&"number"===typeof a)return a=Math.floor(a);console.assert(!1,"invalid parameter")};tQuery.convert.identity=function(a){return a};
tQuery.convert.toBoolean=function(a){if(1===arguments.length&&"boolean"===typeof a)return a;console.assert(!1,"invalid parameter")};tQuery.convert.toString=function(a){if(1===arguments.length&&"string"===typeof a)return a;console.assert(!1,"invalid parameter")};
tQuery.convert.toTexture=function(a){if(1===arguments.length&&a instanceof THREE.Texture)return a;if(1===arguments.length&&"string"===typeof a)return THREE.ImageUtils.loadTexture(a);if(1===arguments.length&&(a instanceof Image||a instanceof HTMLCanvasElement)){var b=new THREE.Texture(a);b.needsUpdate=!0;return b}console.assert(!1,"invalid parameter")};tQuery.Node=function(a){this._lists=a instanceof Array?a:a?[a]:[];this.length=this._lists.length};
tQuery.Node.prototype.get=function(a){if(void 0===a)return this._lists;console.assert(this._lists[a],"element not defined");return this._lists[a]};tQuery.Node.prototype.each=function(a){return tQuery.each(this._lists,a)};tQuery.Node.prototype.back=function(a){if(void 0===a)return this._back;this._back=a;return this};tQuery.Node.prototype.data=function(a,b){if(b)return this.each(function(c){tQuery.data(c,a,b)}),this;if(0<this.length)return tQuery.data(this.get(0),a);console.assert(0===this.length)};
tQuery.Node.prototype.removeData=function(a){this.each(function(b){tQuery.removeData(b,a)});return this};tQuery.Object3D=function(a,b){"string"===typeof a&&(a=tQuery.Object3D._select(a,b));tQuery.Object3D.parent.constructor.call(this,a);this._lists.forEach(function(a){console.assert(a instanceof THREE.Object3D)})};tQuery.inherit(tQuery.Object3D,tQuery.Node);tQuery.pluginsInstanceOn(tQuery.Object3D);
tQuery.mixinAttributes(tQuery.Object3D,{eulerOrder:tQuery.convert.toString,doubleSided:tQuery.convert.toBoolean,flipSided:tQuery.convert.toBoolean,rotationAutoUpdate:tQuery.convert.toBoolean,matrixAutoUpdate:tQuery.convert.toBoolean,matrixWorldNeedsUpdate:tQuery.convert.toBoolean,useQuaternion:tQuery.convert.toBoolean,visible:tQuery.convert.toBoolean,receiveShadow:tQuery.convert.toBoolean,castShadow:tQuery.convert.toBoolean});
tQuery.Object3D.prototype.traverseHierarchy=function(a){this.each(function(b){THREE.SceneUtils.traverseHierarchy(b,function(b){a(b)})});return this};tQuery.Object3D.prototype.geometry=function(){var a=[];this.each(function(b){a.push(b.geometry)});return(new tQuery.Geometry(a)).back(this)};tQuery.Object3D.prototype.material=function(){var a=[];this.each(function(b){a.push(b.material)});return new tQuery.Material(a)};
tQuery.Object3D.prototype.clone=function(){var a=[];this._lists.forEach(function(b){b=THREE.SceneUtils.cloneObject(b);a.push(b)});return tQuery(a)};tQuery.Object3D.prototype.addTo=function(a){console.assert(a instanceof tQuery.World||a instanceof tQuery.Object3D||a instanceof THREE.Object3D);this.each(function(b){a.add(b)}.bind(this));return this};
tQuery.Object3D.prototype.removeFrom=function(a){console.assert(a instanceof tQuery.World||a instanceof tQuery.Object3D);this.each(function(b){a.remove(b)}.bind(this));return this};tQuery.Object3D.prototype.detach=function(){this.each(function(a){a.parent&&a.parent.remove(a)}.bind(this));return this};
tQuery.Object3D.prototype.add=function(a){a instanceof tQuery.Object3D?this.each(function(b){a.each(function(a){b.add(a)})}.bind(this)):a instanceof THREE.Object3D?this.each(function(b){b.add(a)}):console.assert(!1,"invalid parameter");return this};tQuery.Object3D.prototype.remove=function(a){a instanceof tQuery.Object3D?this.each(function(b){a.each(function(a){b.remove(a)})}.bind(this)):a instanceof THREE.Object3D?this.each(function(b){b.remove(a)}):console.assert(!1,"invalid parameter");return this};
tQuery.Object3D.prototype.id=function(a){console.assert(1>=this.length,"tQuery.Object3D.id used on multi-elements");if(void 0!==a){if(0<this.length){var b=this.get(0);b._tqId=a}return this}if(0<this.length)return b=this.get(0),b._tqId};tQuery.Object3D.prototype.addClass=function(a){this.each(function(b){b._tqClasses=b._tqClasses||"";tQuery.Object3D._hasClassOne(b,a)||(b._tqClasses+=" "+a)}.bind(this));return this};
tQuery.Object3D.prototype.removeClass=function(a){this.each(function(b){tQuery.Object3D._removeClassOne(b,a)}.bind(this));return this};tQuery.Object3D.prototype.hasClass=function(a){return this.each(function(b){b._tqClasses=b._tqClasses||"";return tQuery.Object3D._hasClassOne(b,a)?!1:!0}.bind(this))?!1:!0};tQuery.Object3D._hasClassOne=function(a,b){return void 0===a._tqClasses?!1:a._tqClasses.match(RegExp("(^| |\t)+("+b+")($| |\t)+"))?!0:!1};
tQuery.Object3D._removeClassOne=function(a,b){void 0!==a._tqClasses&&(a._tqClasses=a._tqClasses.replace(RegExp("(^| |\t)("+b+")($| |\t)")," "))};tQuery.Object3D._select=function(a,b){b=b||tQuery.world.tScene();b instanceof tQuery.Object3D&&(b=b.get(0));var c=a.split(" ").filter(function(a){return 0<a.length});console.assert(b instanceof THREE.Object3D);var d=[];b.children.forEach(function(a){a=this._crawls(a,c);d=d.concat(a)}.bind(this));return d};
tQuery.Object3D._crawls=function(a,b){var c=[];console.assert(1<=b.length);var d=this._selectItemMatch(a,b[0])?b.slice(1):b;if(0===d.length)return[a];a.children.forEach(function(a){a=this._crawls(a,d);c=c.concat(a)}.bind(this));return c};tQuery.Object3D._selectableGeometries=Object.keys(THREE).filter(function(a){return a.match(/.+Geometry$/)}).map(function(a){return a.replace(/Geometry$/,"").toLowerCase()});
tQuery.Object3D._selectableLights=Object.keys(THREE).filter(function(a){return a.match(/.+Light$/)}).map(function(a){return a.replace(/Light$/,"").toLowerCase()});tQuery.Object3D._selectableClasses=["mesh","light"];
tQuery.Object3D._selectItemMatch=function(a,b){console.assert(a instanceof THREE.Object3D);console.assert("string"===typeof b);var c=b.match(/([^.#]+|.[^.#]+|#[^.#]+)/g);return tQuery.each(c,function(b){var c=b.charAt(0),f=b.slice(1);if("."===c)return tQuery.Object3D._hasClassOne(a,f)?!0:!1;if("#"===c)return a._tqId===f?!0:!1;if("*"===b)return!0;if(-1!==this._selectableGeometries.indexOf(b))return c=a.geometry,b=b.charAt(0).toUpperCase()+b.slice(1)+"Geometry",c instanceof THREE[b];if(-1!==this._selectableLights.indexOf(b))return b=
b.charAt(0).toUpperCase()+b.slice(1)+"Light",a instanceof THREE[b];if(-1!==this._selectableClasses.indexOf(b))return b=b.charAt(0).toUpperCase()+b.slice(1),a instanceof THREE[b];console.assert(!1,"invalid selector: "+b);return!0}.bind(this))?!0:!1};tQuery.Geometry=function(a){tQuery.Geometry.parent.constructor.call(this,a);this._lists.forEach(function(a){console.assert(a instanceof THREE.Geometry)})};tQuery.inherit(tQuery.Geometry,tQuery.Node);tQuery.pluginsInstanceOn(tQuery.Geometry);
tQuery.mixinAttributes(tQuery.Geometry,{hasTangents:tQuery.convert.toBoolean,dynamic:tQuery.convert.toBoolean});tQuery.Material=function(a){tQuery.Material.parent.constructor.call(this,a);this._lists.forEach(function(a){console.assert(a instanceof THREE.Material)})};tQuery.inherit(tQuery.Material,tQuery.Node);tQuery.pluginsInstanceOn(tQuery.Material);tQuery.mixinAttributes(tQuery.Material,{opacity:tQuery.convert.toNumber,transparent:tQuery.convert.toBoolean});
tQuery.Light=function(a){tQuery.Light.parent.constructor.call(this,a);this._lists.forEach(function(a){console.assert(a instanceof THREE.Light)})};tQuery.inherit(tQuery.Light,tQuery.Object3D);tQuery.pluginsInstanceOn(tQuery.Light);tQuery.mixinAttributes(tQuery.Light,{color:tQuery.convert.toThreeColor});tQuery.Mesh=function(a){tQuery.Mesh.parent.constructor.call(this,a);this._lists.forEach(function(a){console.assert(a instanceof THREE.Mesh)})};tQuery.inherit(tQuery.Mesh,tQuery.Object3D);tQuery.pluginsInstanceOn(tQuery.Mesh);
tQuery.Mesh.prototype.material=function(a){var b=tQuery.Mesh.parent;if(void 0==a)return b.material.call(this);a instanceof tQuery.Material&&(a=a.get(0));console.assert(a instanceof THREE.Material);this.each(function(b){b.material=a});return this};tQuery.registerStatic("createSprite",function(a){a=tQuery.extend(a,{useScreenCoordinates:!1});a=new THREE.Sprite(a);return new tQuery.Sprite(a)});
tQuery.registerStatic("Sprite",function(a){tQuery.Sprite.parent.constructor.call(this,a);this._lists.forEach(function(a){console.assert(a instanceof THREE.Sprite)})});tQuery.inherit(tQuery.Sprite,tQuery.Object3D);tQuery.mixinAttributes(tQuery.Sprite,{color:tQuery.convert.toThreeColor,map:tQuery.convert.toTexture,useScreenCoordinates:tQuery.convert.toBoolean});
tQuery.World=function(a){a=a||{};this._opts=a=tQuery.extend(a,{renderW:window.innerWidth,renderH:window.innerHeight,webGLNeeded:!0,autoRendering:!0,scene:null,camera:null,renderer:null});console.assert(!tQuery.word);tQuery.world=this;this._autoRendering=!0;this._scene=a.scene||new THREE.Scene;a.camera?this._camera=a.camera:(this._camera=new THREE.PerspectiveCamera(35,a.renderW/a.renderH,0.01,1E4),this._camera.position.set(0,0,3),this._scene.add(this._camera));this._loop=new tQuery.Loop;this._$loopCb=
this._loop.hookOnRender(function(a){this.render(a)}.bind(this));if(a.renderer)this._renderer=a.renderer;else if(tQuery.World.hasWebGL())this._renderer=new THREE.WebGLRenderer({antialias:!1,preserveDrawingBuffer:!1});else{if(a.webGLNeeded)throw this._addGetWebGLMessage(),Error("WebGL required and not available");this._renderer=new THREE.CanvasRenderer}this._renderer.setClearColorHex(12303291,1);this._renderer.setSize(a.renderW,a.renderH)};tQuery.pluginsInstanceOn(tQuery.World);tQuery.MicroeventMixin(tQuery.World.prototype);
tQuery.World.prototype.destroy=function(){this.trigger("destroy");this._loop.unhookOnRender(this._$loopCb);this._loop.destroy();this.removeCameraControls();var a=this._renderer.domElement.parentElement;a&&a.removeChild(this._renderer.domElement);tQuery.world===this&&(tQuery.world=null)};tQuery.World._hasWebGL=void 0;
tQuery.World.hasWebGL=function(){if(void 0!==tQuery.World._hasWebGL)return tQuery.World._hasWebGL;try{tQuery.World._hasWebGL=!!window.WebGLRenderingContext&&!!document.createElement("canvas").getContext("experimental-webgl")}catch(a){tQuery.World._hasWebGL=!1}return tQuery.World._hasWebGL};
tQuery.World.prototype._addGetWebGLMessage=function(a){a=a||document.body;var b=document.createElement("div");b.style.fontFamily="monospace";b.style.fontSize="13px";b.style.textAlign="center";b.style.background="#eee";b.style.color="#000";b.style.padding="1em";b.style.width="475px";b.style.margin="5em auto 0";b.innerHTML=window.WebGLRenderingContext?'Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation">WebGL</a>.<br />\nFind out how to get it <a href="http://get.webgl.org/">here</a>.':
'Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation">WebGL</a>.<br/>\nFind out how to get it <a href="http://get.webgl.org/">here</a>.';a.appendChild(b)};tQuery.World.prototype.setCameraControls=function(a){this.hasCameraControls()&&this.removeCameraControls();this._cameraControls=a;return this};tQuery.World.prototype.getCameraControls=function(){return this._cameraControls};
tQuery.World.prototype.removeCameraControls=function(){if(!1===this.hasCameraControls())return this;this._cameraControls=void 0;return this};tQuery.World.prototype.hasCameraControls=function(){return void 0!==this._cameraControls?!0:!1};tQuery.World.prototype.add=function(a){a instanceof tQuery.Object3D?a.each(function(a){this._scene.add(a)}.bind(this)):a instanceof THREE.Object3D?this._scene.add(a):console.assert(!1,"invalid type");return this};
tQuery.World.prototype.remove=function(a){a instanceof tQuery.Object3D?a.each(function(a){this._scene.remove(a)}.bind(this)):a instanceof THREE.Object3D?this._scene.remove(a):console.assert(!1,"invalid type");return this};tQuery.World.prototype.appendTo=function(a){a.appendChild(this._renderer.domElement);return this};tQuery.World.prototype.start=function(){this._loop.start();return this};tQuery.World.prototype.stop=function(){this._loop.stop();return this};tQuery.World.prototype.loop=function(){return this._loop};
tQuery.World.prototype.tRenderer=function(){return this._renderer};tQuery.World.prototype.tScene=function(){return this._scene};tQuery.World.prototype.tCamera=function(){return this._camera};tQuery.World.prototype.renderer=function(){console.trace();console.warn("world.renderer() is ovbslete, use .tRenderer() instead");return this._renderer};tQuery.World.prototype.camera=function(){console.trace();console.warn("world.camera() is obsolete, use .tCamerar() instead");return this._camera};
tQuery.World.prototype.scene=function(){console.trace();console.warn("world.scene() is obsolete, use .tScene() instead");return this._scene};tQuery.World.prototype.get=function(){return this._scene};tQuery.World.prototype.autoRendering=function(a){if(void 0===a)return this._autoRendering;this._autoRendering=a;return this};tQuery.World.prototype.render=function(a){this.hasCameraControls()&&this._cameraControls.update(a);this._autoRendering&&this._renderer.render(this._scene,this._camera)};
tQuery.Loop=function(){this._hooks=[];this._lastTime=null};tQuery.pluginsInstanceOn(tQuery.Loop);tQuery.Loop.prototype.destroy=function(){this.stop()};tQuery.Loop.prototype.start=function(){this._timerId&&this.stop();this._timerId=requestAnimationFrame(this._onAnimationFrame.bind(this));return this};tQuery.Loop.prototype.stop=function(){cancelAnimationFrame(this._timerId);this._timerId=null;return this};
tQuery.Loop.prototype._onAnimationFrame=function(){this._timerId=requestAnimationFrame(this._onAnimationFrame.bind(this));var a=tQuery.now()/1E3;this._lastTime||(this._lastTime=a-1/60);var b=a-this._lastTime;this._lastTime=a;for(var c=0;c<=this._hooks.length;c++)if(void 0!==this._hooks[c])for(var d=this._hooks[c].slice(0),e=0;e<d.length;e++)d[e](b,a)};tQuery.Loop.prototype.PRE_RENDER=20;tQuery.Loop.prototype.ON_RENDER=50;tQuery.Loop.prototype.POST_RENDER=80;
tQuery.Loop.prototype.hook=function(a,b){"function"===typeof a&&(b=a,a=this.PRE_RENDER);this._hooks[a]=this._hooks[a]||[];console.assert(-1===this._hooks[a].indexOf(b));this._hooks[a].push(b);return b};tQuery.Loop.prototype.unhook=function(a,b){"function"===typeof a&&(b=a,a=this.PRE_RENDER);var c=this._hooks[a].indexOf(b);console.assert(-1!==c);this._hooks[a].splice(c,1);0===this._hooks[a].length&&delete this._hooks[a];return this};
tQuery.Loop.prototype.hookPreRender=function(a){return this.hook(this.PRE_RENDER,a)};tQuery.Loop.prototype.hookOnRender=function(a){return this.hook(this.ON_RENDER,a)};tQuery.Loop.prototype.hookPostRender=function(a){return this.hook(this.POST_RENDER,a)};tQuery.Loop.prototype.unhookPreRender=function(a){return this.unhook(this.PRE_RENDER,a)};tQuery.Loop.prototype.unhookOnRender=function(a){return this.unhook(this.ON_RENDER,a)};
tQuery.Loop.prototype.unhookPostRender=function(a){return this.unhook(this.POST_RENDER,a)};tQuery.registerStatic("createWorld",function(a){return new tQuery.World(a)});tQuery.registerStatic("createObject3D",function(){var a=new THREE.Object3D;return tQuery(a)});tQuery.registerStatic("createLoop",function(a){return new tQuery.Loop(a)});tQuery.registerStatic("createDirectionalLight",function(){var a=new THREE.DirectionalLight;return new tQuery.DirectionalLight([a])});
tQuery.registerStatic("createSpotLight",function(){var a=new THREE.SpotLight;return new tQuery.SpotLight([a])});tQuery.registerStatic("createPointLight",function(){var a=new THREE.PointLight;return new tQuery.PointLight([a])});tQuery.registerStatic("createAmbientLight",function(){var a=new THREE.AmbientLight;return new tQuery.AmbientLight([a])});tQuery.registerStatic("defaultObject3DMaterial",new THREE.MeshNormalMaterial);
tQuery.Geometry.prototype.toMesh=function(a){var b=[];this.each(function(c){a=a||tQuery.defaultObject3DMaterial;c=new THREE.Mesh(c,a);b.push(c)});return new tQuery.Mesh(b)};tQuery.registerStatic("createCube",function(){return this._createMesh(THREE.CubeGeometry,[1,1,1],arguments)});tQuery.registerStatic("createTorus",function(){return this._createMesh(THREE.TorusGeometry,[0.35,0.15],arguments)});tQuery.registerStatic("createVector3",function(a,b,c){return new THREE.Vector3(a,b,c)});
tQuery.registerStatic("createSphere",function(){return this._createMesh(THREE.SphereGeometry,[0.5,32,16],arguments)});tQuery.registerStatic("createPlane",function(){return this._createMesh(THREE.PlaneGeometry,[1,1,16,16],arguments)});tQuery.registerStatic("createCylinder",function(){return this._createMesh(THREE.CylinderGeometry,[0.5,0.5,1,16,4],arguments)});
tQuery.registerStatic("_createMesh",function(a,b,c){c=Array.prototype.slice.call(c);var d=tQuery.defaultObject3DMaterial;c.length&&c[c.length-1]instanceof THREE.Material&&(d=c.pop());0===c.length&&(c=b.slice());c.unshift(a);a=function(a,b,c,d,j,k,m,p,n){console.assert(9>=arguments.length);return new a(b,c,d,j,k,m,p,n)}.apply(this,c);a.dynamic=!0;d=new THREE.Mesh(a,d);return tQuery(d)});tQuery.registerStatic("createAxis",function(){var a=new THREE.AxisHelper;a.scale.multiplyScalar(0.01);return tQuery(a)});
tQuery.AmbientLight=function(a){tQuery.AmbientLight.parent.constructor.call(this,a);this._lists.forEach(function(a){console.assert(a instanceof THREE.AmbientLight)})};tQuery.inherit(tQuery.AmbientLight,tQuery.Light);tQuery.pluginsInstanceOn(tQuery.AmbientLight);tQuery.DirectionalLight=function(a){tQuery.DirectionalLight.parent.constructor.call(this,a);this._lists.forEach(function(a){console.assert(a instanceof THREE.DirectionalLight)})};tQuery.inherit(tQuery.DirectionalLight,tQuery.Light);tQuery.pluginsInstanceOn(tQuery.DirectionalLight);
tQuery.mixinAttributes(tQuery.DirectionalLight,{intensity:tQuery.convert.toNumber,distance:tQuery.convert.toNumber,shadowDarkness:tQuery.convert.toNumberZeroToOne,shadowBias:tQuery.convert.toNumber,shadowMapWidth:tQuery.convert.toInteger,shadowMapHeight:tQuery.convert.toInteger,shadowCameraRight:tQuery.convert.toNumber,shadowCameraLeft:tQuery.convert.toNumber,shadowCameraTop:tQuery.convert.toNumber,shadowCameraBottom:tQuery.convert.toNumber,shadowCameraVisible:tQuery.convert.toBoolean,shadowCameraNear:tQuery.convert.toNumber,
shadowCameraFar:tQuery.convert.toNumber});tQuery.PointLight=function(a){tQuery.PointLight.parent.constructor.call(this,a);this._lists.forEach(function(a){console.assert(a instanceof THREE.PointLight)})};tQuery.inherit(tQuery.PointLight,tQuery.Light);tQuery.pluginsInstanceOn(tQuery.PointLight);tQuery.mixinAttributes(tQuery.PointLight,{intensity:tQuery.convert.toNumber,distance:tQuery.convert.toNumber});
tQuery.SpotLight=function(a){tQuery.SpotLight.parent.constructor.call(this,a);this._lists.forEach(function(a){console.assert(a instanceof THREE.SpotLight)})};tQuery.inherit(tQuery.SpotLight,tQuery.Light);tQuery.pluginsInstanceOn(tQuery.SpotLight);
tQuery.mixinAttributes(tQuery.SpotLight,{intensity:tQuery.convert.toNumber,distance:tQuery.convert.toNumber,shadowDarkness:tQuery.convert.toNumberZeroToOne,shadowBias:tQuery.convert.toNumber,shadowMapWidth:tQuery.convert.toInteger,shadowMapHeight:tQuery.convert.toInteger,shadowCameraRight:tQuery.convert.toNumber,shadowCameraLeft:tQuery.convert.toNumber,shadowCameraTop:tQuery.convert.toNumber,shadowCameraBottom:tQuery.convert.toNumber,shadowCameraVisible:tQuery.convert.toBoolean});
tQuery.Mesh.registerInstance("setBasicMaterial",function(a){a=tQuery.createMeshBasicMaterial(a);this.material(a.get(0));return a.back(this)});tQuery.registerStatic("createMeshBasicMaterial",function(a){a=new THREE.MeshBasicMaterial(a);return new tQuery.MeshBasicMaterial(a)});tQuery.MeshBasicMaterial=function(a){tQuery.MeshBasicMaterial.parent.constructor.call(this,a);this._lists.forEach(function(a){console.assert(a instanceof THREE.MeshBasicMaterial)})};tQuery.inherit(tQuery.MeshBasicMaterial,tQuery.Material);
tQuery.mixinAttributes(tQuery.MeshBasicMaterial,{color:tQuery.convert.toThreeColor,ambient:tQuery.convert.toThreeColor,map:tQuery.convert.toTexture,envMap:tQuery.convert.toTexture,wireframe:tQuery.convert.toBoolean,wireframeLinewidth:tQuery.convert.toInteger,wireframeLinecap:tQuery.convert.toString});tQuery.Mesh.registerInstance("setLambertMaterial",function(a){a=tQuery.createMeshLambertMaterial(a);this.material(a.get(0));return a.back(this)});
tQuery.registerStatic("createMeshLambertMaterial",function(a){a=new THREE.MeshLambertMaterial(a);return new tQuery.MeshLambertMaterial(a)});tQuery.MeshLambertMaterial=function(a){tQuery.MeshLambertMaterial.parent.constructor.call(this,a);this._lists.forEach(function(a){console.assert(a instanceof THREE.MeshLambertMaterial)})};tQuery.inherit(tQuery.MeshLambertMaterial,tQuery.Material);
tQuery.mixinAttributes(tQuery.MeshLambertMaterial,{color:tQuery.convert.toThreeColor,ambient:tQuery.convert.toThreeColor,map:tQuery.convert.toTexture,bumpMap:tQuery.convert.toTexture,bumpScale:tQuery.convert.toNumber});tQuery.Mesh.registerInstance("setNormalMaterial",function(a){a=tQuery.createMeshNormalMaterial(a);this.material(a.get(0));return a.back(this)});tQuery.registerStatic("createMeshNormalMaterial",function(a){a=new THREE.MeshNormalMaterial(a);return new tQuery.MeshNormalMaterial(a)});
tQuery.MeshNormalMaterial=function(a){tQuery.MeshNormalMaterial.parent.constructor.call(this,a);this._lists.forEach(function(a){console.assert(a instanceof THREE.MeshNormalMaterial)})};tQuery.inherit(tQuery.MeshNormalMaterial,tQuery.Material);tQuery.Mesh.registerInstance("setPhongMaterial",function(a){a=tQuery.createMeshPhongMaterial(a);this.material(a.get(0));return a.back(this)});tQuery.registerStatic("createMeshPhongMaterial",function(a){a=new THREE.MeshPhongMaterial(a);return new tQuery.MeshPhongMaterial(a)});
tQuery.MeshPhongMaterial=function(a){tQuery.MeshPhongMaterial.parent.constructor.call(this,a);this._lists.forEach(function(a){console.assert(a instanceof THREE.MeshPhongMaterial)})};tQuery.inherit(tQuery.MeshPhongMaterial,tQuery.Material);
tQuery.mixinAttributes(tQuery.MeshPhongMaterial,{map:tQuery.convert.toTexture,color:tQuery.convert.toThreeColor,ambient:tQuery.convert.toThreeColor,emissive:tQuery.convert.toThreeColor,specular:tQuery.convert.toThreeColor,shininess:tQuery.convert.toNumber,bumpMap:tQuery.convert.toTexture,bumpScale:tQuery.convert.toNumber,metal:tQuery.convert.toBoolean,perPixel:tQuery.convert.toBoolean});
(function(){tQuery.Geometry.registerInstance("computeAll",function(){this.each(function(a){a.computeBoundingBox();a.computeFaceNormals()});return this});tQuery.Geometry.registerInstance("scaleBy",function(a){"number"===typeof a&&1===arguments.length?a=new THREE.Vector3(a,a,a):"number"===typeof a&&3===arguments.length&&(a=new THREE.Vector3(arguments[0],arguments[1],arguments[2]));console.assert(a instanceof THREE.Vector3,"Geometry.vector3 parameter error");this.each(function(b){for(var c=0;c<b.vertices.length;c++)b.vertices[c].multiplySelf(a);
b.verticesNeedUpdate=!0;b.computeBoundingBox()});return this});tQuery.Geometry.registerInstance("size",function(){console.assert(1>=this.length);if(0!==this.length){var a=this.get(0),b=new THREE.Vector3;b.x=a.boundingBox.max.x-a.boundingBox.min.x;b.y=a.boundingBox.max.y-a.boundingBox.min.y;b.z=a.boundingBox.max.z-a.boundingBox.min.z;return b}});tQuery.Geometry.registerInstance("normalize",function(){this.each(function(a){a=tQuery(a);var b=a.size();b.x>=b.y&&b.x>=b.z?a.zoom(1/b.x):b.y>=b.x&&b.y>=b.z?
a.zoom(1/b.y):a.zoom(1/b.z)});return this});tQuery.Geometry.registerInstance("middlePoint",function(){console.assert(1>=this.length);if(0!==this.length){var a=this.get(0),b=new THREE.Vector3;b.x=(a.boundingBox.max.x+a.boundingBox.min.x)/2;b.y=(a.boundingBox.max.y+a.boundingBox.min.y)/2;b.z=(a.boundingBox.max.z+a.boundingBox.min.z)/2;return b}});tQuery.Geometry.registerInstance("translate",function(a){"number"===typeof a&&3===arguments.length&&(a=new THREE.Vector3(arguments[0],arguments[1],arguments[2]));
console.assert(a instanceof THREE.Vector3,"Geometry.translate parameter error");this.each(function(b){for(var c=0;c<b.vertices.length;c++)b.vertices[c].addSelf(a);b.verticesNeedUpdate=!0;b.computeBoundingBox()});return this});tQuery.Geometry.registerInstance("rotate",function(a,b){"number"===typeof a&&3===arguments.length&&(a=new THREE.Vector3(arguments[0],arguments[1],arguments[2]));console.assert(a instanceof THREE.Vector3,"Geometry.rotate parameter error");b=b||"XYZ";var c=new THREE.Matrix4;c.setRotationFromEuler(a,
b);this.each(function(a){a.applyMatrix(c);a.verticesNeedUpdate=!0;a.computeBoundingBox()});return this});tQuery.Geometry.registerInstance("center",function(a,b,c){this.each(function(d){d=tQuery(d);var e=d.middlePoint().negate();a&&(e.x=0);b&&(e.y=0);c&&(e.z=0);return d.translate(e)});return this});tQuery.Geometry.registerInstance("smooth",function(a){var b=new THREE.SubdivisionModifier(a);this.each(function(a){b.modify(a);a.verticesNeedUpdate=!0;a.computeBoundingBox()});return this});tQuery.Geometry.registerInstance("translateX",
function(a){return this.translate(a,0,0)});tQuery.Geometry.registerInstance("translateY",function(a){return this.translate(0,a,0)});tQuery.Geometry.registerInstance("translateZ",function(a){return this.translate(0,0,a)});tQuery.Geometry.registerInstance("rotateX",function(a){return this.rotate(a,0,0)});tQuery.Geometry.registerInstance("rotateY",function(a){return this.rotate(0,a,0)});tQuery.Geometry.registerInstance("rotateZ",function(a){return this.rotate(0,0,a)});tQuery.Geometry.registerInstance("scaleXBy",
function(a){return this.scaleBy(a,1,1)});tQuery.Geometry.registerInstance("scaleYBy",function(a){return this.scaleBy(1,a,1)});tQuery.Geometry.registerInstance("scaleZBy",function(a){return this.scaleBy(1,1,a)});tQuery.Geometry.registerInstance("zoom",function(a){return this.scaleBy(a)});tQuery.Geometry.registerInstance("zoomX",function(a){return this.zoom(a,1,1)});tQuery.Geometry.registerInstance("zoomY",function(a){return this.zoom(1,a,1)});tQuery.Geometry.registerInstance("zoomZ",function(a){return this.zoom(1,
1,a)})})();tQuery.Object3D.registerInstance("position",function(a){if(void 0===a)return this.get(0).position;"number"===typeof a&&3===arguments.length&&(a=new THREE.Vector3(arguments[0],arguments[1],arguments[2]));console.assert(a instanceof THREE.Vector3,"Object3D.position parameter error");this.each(function(b){b.position.copy(a)});return this});
tQuery.Object3D.registerInstance("positionX",function(a){if(void 0===a)return object.get(0).position.x;console.assert("number"===typeof a&&1===arguments.length);this.each(function(b){b.position.x=a});return this});tQuery.Object3D.registerInstance("positionY",function(a){if(void 0===a)return object.get(0).position.y;console.assert("number"===typeof a&&1===arguments.length);this.each(function(b){b.position.y=a});return this});
tQuery.Object3D.registerInstance("positionZ",function(a){if(void 0===a)return object.get(0).position.z;console.assert("number"===typeof a&&1===arguments.length);this.each(function(b){b.position.z=a});return this});
tQuery.Object3D.registerInstance("translate",function(a){"number"===typeof a&&3===arguments.length&&(a=new THREE.Vector3(arguments[0],arguments[1],arguments[2]));console.assert(a instanceof THREE.Vector3,"Object3D.translate parameter error");this.each(function(b){b.position.addSelf(a)});return this});tQuery.Object3D.registerInstance("translateX",function(a){return this.translate(a,0,0)});tQuery.Object3D.registerInstance("translateY",function(a){return this.translate(0,a,0)});
tQuery.Object3D.registerInstance("translateZ",function(a){return this.translate(0,0,a)});tQuery.Object3D.registerInstance("rotation",function(a){if(void 0===a)return this.get(0).rotation;"number"===typeof a&&3===arguments.length&&(a=new THREE.Vector3(arguments[0],arguments[1],arguments[2]));console.assert(a instanceof THREE.Vector3,"Object3D.rotation parameter error");this.each(function(b){b.rotation.copy(a)});return this});
tQuery.Object3D.registerInstance("rotationX",function(a){if(void 0===a)return object.get(0).rotation.x;console.assert("number"===typeof a&&1===arguments.length);this.each(function(b){b.rotation.x=a});return this});tQuery.Object3D.registerInstance("rotationY",function(a){if(void 0===a)return object.get(0).rotation.y;console.assert("number"===typeof a&&1===arguments.length);this.each(function(b){b.rotation.y=a});return this});
tQuery.Object3D.registerInstance("rotationZ",function(a){if(void 0===a)return object.get(0).rotation.z;console.assert("number"===typeof a&&1===arguments.length);this.each(function(b){b.rotation.z=a});return this});tQuery.Object3D.registerInstance("rotate",function(a){"number"===typeof a&&3===arguments.length&&(a=new THREE.Vector3(arguments[0],arguments[1],arguments[2]));console.assert(a instanceof THREE.Vector3,"Object3D.rotate parameter error");this.each(function(b){b.rotation.addSelf(a)});return this});
tQuery.Object3D.registerInstance("rotateX",function(a){return this.rotate(a,0,0)});tQuery.Object3D.registerInstance("rotateY",function(a){return this.rotate(0,a,0)});tQuery.Object3D.registerInstance("rotateZ",function(a){return this.rotate(0,0,a)});
tQuery.Object3D.registerInstance("scale",function(a){if(void 0===a)return this.get(0).scale;"number"===typeof a&&1===arguments.length?a=new THREE.Vector3(a,a,a):"number"===typeof a&&3===arguments.length&&(a=new THREE.Vector3(arguments[0],arguments[1],arguments[2]));console.assert(a instanceof THREE.Vector3,"Object3D.scale parameter error");this.each(function(b){b.scale.copy(a)});return this});
tQuery.Object3D.registerInstance("scaleX",function(a){if(void 0===a)return object.get(0).scale.x;console.assert("number"===typeof a&&1===arguments.length);this.each(function(b){b.scale.x=a});return this});tQuery.Object3D.registerInstance("scaleY",function(a){if(void 0===a)return object.get(0).scale.y;console.assert("number"===typeof a&&1===arguments.length);this.each(function(b){b.scale.y=a});return this});
tQuery.Object3D.registerInstance("scaleZ",function(a){if(void 0===a)return object.get(0).scale.z;console.assert("number"===typeof a&&1===arguments.length);this.each(function(b){b.scale.z=a});return this});
tQuery.Object3D.registerInstance("scaleBy",function(a){"number"===typeof a&&1===arguments.length?a=new THREE.Vector3(a,a,a):"number"===typeof a&&3===arguments.length&&(a=new THREE.Vector3(arguments[0],arguments[1],arguments[2]));console.assert(a instanceof THREE.Vector3,"Object3D.rotate parameter error");this.each(function(b){b.scale.multiplySelf(a)});return this});tQuery.Object3D.registerInstance("scaleXBy",function(a){return this.scaleBy(a,1,1)});
tQuery.Object3D.registerInstance("scaleYBy",function(a){return this.scaleBy(1,a,1)});tQuery.Object3D.registerInstance("scaleZBy",function(a){return this.scaleBy(1,1,a)});tQuery.World.registerInstance("fullpage",function(){console.log("world.fullpage() is obsolete. use world.boilerplate() instead.");return this.boilerplate()});
tQuery.World.registerInstance("boilerplate",function(a){var b=document.body;b.style.margin="0";b.style.padding="0";b.style.overflow="hidden";this.appendTo(b);this._renderer.setSize(b.offsetWidth,b.offsetHeight);this.addBoilerplate(a);return this});
tQuery.World.registerInstance("pageTitle",function(a){"string"===typeof a&&(a=document.querySelector(a));console.assert(a instanceof HTMLElement,".pageTitle(element) needs a HTMLElement");a.style.position="absolute";a.style.width="100%";a.style.textAlign="center";a.style.fontWeight="bolder";a.style.fontColor="white";a.style.paddingTop="0.5em";a.style.fontFamily="arial";return this});
tQuery.World.registerInstance("addBoilerplate",function(a){console.assert(!0!==this.hasBoilerplate());a=tQuery.extend(a,{stats:!0,cameraControls:!0,windowResize:!0,screenshot:!0,fullscreen:!0});var b={};this.tRenderer().domElement.style.display="block";tQuery.data(this,"_boilerplateCtx",b);var c=this.tCamera(),d=this.tRenderer();a.stats&&(b.stats=new Stats,b.stats.domElement.style.position="absolute",b.stats.domElement.style.bottom="0px",d.domElement.parentNode&&d.domElement.parentNode.appendChild(b.stats.domElement),
b.loopStats=function(){b.stats.update()},this.loop().hook(b.loopStats));a.cameraControls&&(b.cameraControls=new THREEx.DragPanControls(c),this.setCameraControls(b.cameraControls));a.windowResize&&(b.windowResize=THREEx.WindowResize.bind(d,c));a.screenshot&&(b.screenshot=THREEx.Screenshot.bindKey(d));a.fullscreen&&THREEx.FullScreen.available()&&(b.fullscreen=THREEx.FullScreen.bindKey());b._$onDestroy=this.bind("destroy",function(){!1!==this.hasBoilerplate()&&this.removeBoilerplate()});return this});
tQuery.World.registerInstance("hasBoilerplate",function(){return void 0===tQuery.data(this,"_boilerplateCtx")?!1:!0});
tQuery.World.registerInstance("removeBoilerplate",function(){var a=tQuery.data(this,"_boilerplateCtx");if(void 0===a)return this;tQuery.removeData(this,"_boilerplateCtx");this.unbind("destroy",this._$onDestroy);a.stats&&document.body.removeChild(a.stats.domElement);a.stats&&this.loop().unhook(a.loopStats);a.cameraControls&&this.removeCameraControls();a.windowResize&&a.windowResize.stop();a.screenshot&&a.screenshot.unbind();a.fullscreen&&a.fullscreen.unbind()});var THREEx=THREEx||{};
THREEx.WindowResize=function(a,b){var c=function(){a.setSize(window.innerWidth,window.innerHeight);b.aspect=window.innerWidth/window.innerHeight;b.updateProjectionMatrix()};window.addEventListener("resize",c,!1);return{stop:function(){window.removeEventListener("resize",c)}}};THREEx.WindowResize.bind=function(a,b){return THREEx.WindowResize(a,b)};THREEx=THREEx||{};
(function(){var a=function(a,c,d,e){var f=function(){var a,b,f=document.createElement("canvas");f.width=c;f.height=d;var g=f.getContext("2d");g.fillStyle="black";g.fillRect(0,0,f.width,f.height);a=f.width;var n=f.height,r=h.width;b=h.height;var q=b/r;r>=a&&1>=q?(r=a,b=a*q):b>=n&&(b=n,r=n/q);a=r;g.drawImage(h,(f.width-a)/2,(f.height-b)/2,a,b);f=f.toDataURL("image/png");e&&e(f)},g=this,h=new Image;h.onload=function(){return f.apply(g,arguments)};h.src=a};THREEx.Screenshot={toDataURL:function(a,c){return a.domElement.toDataURL(c||
"image/png")},bindKey:function(b,c){c=c||{};var d=c.charCode||112,e=c.width,f=c.height,g=c.callback||function(a){window.open(a,"name-"+Math.random())},h,j=function(c){c.which===d&&(c=this.toDataURL(b),void 0===e&&void 0===f?g(c):a(c,e,f,g))},k=this;h=function(){return j.apply(k,arguments)};document.addEventListener("keypress",h,!1);return{unbind:function(){document.removeEventListener("keypress",h,!1)}}}}})();THREEx=THREEx||{};THREEx.FullScreen=THREEx.FullScreen||{};
THREEx.FullScreen.available=function(){return this._hasWebkitFullScreen||this._hasMozFullScreen};THREEx.FullScreen.activated=function(){if(this._hasWebkitFullScreen)return document.webkitIsFullScreen;if(this._hasMozFullScreen)return document.mozFullScreen;console.assert(!1)};THREEx.FullScreen.request=function(a){a=a||document.body;this._hasWebkitFullScreen?a.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT):this._hasMozFullScreen?a.mozRequestFullScreen():console.assert(!1)};
THREEx.FullScreen.cancel=function(){this._hasWebkitFullScreen?document.webkitCancelFullScreen():this._hasMozFullScreen?document.mozCancelFullScreen():console.assert(!1)};THREEx.FullScreen._hasWebkitFullScreen="webkitCancelFullScreen"in document?!0:!1;THREEx.FullScreen._hasMozFullScreen="mozCancelFullScreen"in document?!0:!1;
THREEx.FullScreen.bindKey=function(a){a=a||{};var b=a.charCode||102,c=void 0!==a.dblclick?a.dblclick:!1,d=a.element,e=function(){THREEx.FullScreen.activated()?THREEx.FullScreen.cancel():THREEx.FullScreen.request(d)},f,g=function(a){a.which===b&&e()},h=this;f=function(){return g.apply(h,arguments)};document.addEventListener("keypress",f,!1);c&&document.addEventListener("dblclick",e,!1);return{unbind:function(){document.removeEventListener("keypress",f,!1);c&&document.removeEventListener("dblclick",
e,!1)}}};THREEx=THREEx||{};
THREEx.DragPanControls=function(a,b){this._object=a;this._domElement=b||document;this.target=new THREE.Vector3(0,0,0);this.speedY=this.speedX=0.03;this.rangeX=-40;this.rangeY=40;this._mouseY=this._mouseX=0;var c=this;this._$onMouseMove=function(){c._onMouseMove.apply(c,arguments)};this._$onTouchStart=function(){c._onTouchStart.apply(c,arguments)};this._$onTouchMove=function(){c._onTouchMove.apply(c,arguments)};this._domElement.addEventListener("mousemove",this._$onMouseMove,!1);this._domElement.addEventListener("touchstart",
this._$onTouchStart,!1);this._domElement.addEventListener("touchmove",this._$onTouchMove,!1)};THREEx.DragPanControls.prototype.destroy=function(){this._domElement.removeEventListener("mousemove",this._$onMouseMove,!1);this._domElement.removeEventListener("touchstart",this._$onTouchStart,!1);this._domElement.removeEventListener("touchmove",this._$onTouchMove,!1)};
THREEx.DragPanControls.prototype.update=function(){this._object.position.x+=(this._mouseX*this.rangeX-this._object.position.x)*this.speedX;this._object.position.y+=(this._mouseY*this.rangeY-this._object.position.y)*this.speedY;this._object.lookAt(this.target)};THREEx.DragPanControls.prototype._onMouseMove=function(a){this._mouseX=a.clientX/window.innerWidth-0.5;this._mouseY=a.clientY/window.innerHeight-0.5};
THREEx.DragPanControls.prototype._onTouchStart=function(a){1==a.touches.length&&(this._mouseX=a.touches[0].pageX/window.innerWidth-0.5,this._mouseY=a.touches[0].pageY/window.innerHeight-0.5)};THREEx.DragPanControls.prototype._onTouchMove=function(a){1==a.touches.length&&(a.preventDefault(),this._mouseX=a.touches[0].pageX/window.innerWidth-0.5,this._mouseY=a.touches[0].pageY/window.innerHeight-0.5)};
var Stats=function(){var a=Date.now(),b=a,c=0,d=Infinity,e=0,f=0,g=Infinity,h=0,j=0,k=0,m=document.createElement("div");m.id="stats";m.addEventListener("mousedown",function(a){a.preventDefault();B(++k%2)},!1);m.style.cssText="width:80px;opacity:0.9;cursor:pointer";var p=document.createElement("div");p.id="fps";p.style.cssText="padding:0 0 3px 3px;text-align:left;background-color:#002";m.appendChild(p);var n=document.createElement("div");n.id="fpsText";n.style.cssText="color:#0ff;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px";
n.innerHTML="FPS";p.appendChild(n);var r=document.createElement("div");r.id="fpsGraph";r.style.cssText="position:relative;width:74px;height:30px;background-color:#0ff";for(p.appendChild(r);74>r.children.length;){var q=document.createElement("span");q.style.cssText="width:1px;height:30px;float:left;background-color:#113";r.appendChild(q)}var s=document.createElement("div");s.id="ms";s.style.cssText="padding:0 0 3px 3px;text-align:left;background-color:#020;display:none";m.appendChild(s);var u=document.createElement("div");
u.id="msText";u.style.cssText="color:#0f0;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px";u.innerHTML="MS";s.appendChild(u);var v=document.createElement("div");v.id="msGraph";v.style.cssText="position:relative;width:74px;height:30px;background-color:#0f0";for(s.appendChild(v);74>v.children.length;)q=document.createElement("span"),q.style.cssText="width:1px;height:30px;float:left;background-color:#131",v.appendChild(q);var B=function(a){k=a;switch(k){case 0:p.style.display=
"block";s.style.display="none";break;case 1:p.style.display="none",s.style.display="block"}};return{REVISION:11,domElement:m,setMode:B,begin:function(){a=Date.now()},end:function(){var k=Date.now();c=k-a;d=Math.min(d,c);e=Math.max(e,c);u.textContent=c+" MS ("+d+"-"+e+")";var m=Math.min(30,30-30*(c/200));v.appendChild(v.firstChild).style.height=m+"px";j++;k>b+1E3&&(f=Math.round(1E3*j/(k-b)),g=Math.min(g,f),h=Math.max(h,f),n.textContent=f+" FPS ("+g+"-"+h+")",m=Math.min(30,30-30*(f/100)),r.appendChild(r.firstChild).style.height=
m+"px",b=k,j=0);return k},update:function(){a=this.end()}}};
